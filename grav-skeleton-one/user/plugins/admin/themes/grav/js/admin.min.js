/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var Grav;
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app/dashboard/backup.js":
/*!*********************************!*\
  !*** ./app/dashboard/backup.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\n/* harmony import */ var _chart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chart */ \"./app/dashboard/chart.js\");\n\n\n\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-backup][data-ajax*=\"backup/\"]').on('click', function () {\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n  var url = element.data('ajax');\n  var inDropdown = element.closest('.dropdown-menu');\n  (inDropdown.length ? inDropdown : element).closest('.button-group').find('> button:first').attr('disabled', 'disabled').find('> .fa').removeClass('fa-life-ring').addClass('fa-spin fa-refresh');\n  (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, function\n    /* response */\n  () {\n    if (_chart__WEBPACK_IMPORTED_MODULE_3__.Instances && _chart__WEBPACK_IMPORTED_MODULE_3__.Instances.backups) {\n      _chart__WEBPACK_IMPORTED_MODULE_3__.Instances.backups.updateData({\n        series: [0, 100]\n      });\n      _chart__WEBPACK_IMPORTED_MODULE_3__.Instances.backups.element.find('.numeric').html(\"0 <em>\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.DAYS.toLowerCase(), \"</em>\"));\n    }\n\n    (inDropdown.length ? inDropdown : element).closest('.button-group').find('> button:first').removeAttr('disabled').find('> .fa').removeClass('fa-spin fa-refresh').addClass('fa-life-ring');\n  });\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-backup][data-ajax*=\"backupDelete\"]').on('click', function () {\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n  var url = element.data('ajax');\n  var tr = element.closest('tr');\n  tr.addClass('deleting');\n  (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, function (response) {\n    if (response.status === 'success') {\n      tr.remove();\n    } else {\n      tr.removeClass('deleting');\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZGFzaGJvYXJkL2JhY2t1cC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQUEsNkNBQUMsQ0FBQyxxQ0FBRCxDQUFELENBQXlDSyxFQUF6QyxDQUE0QyxPQUE1QyxFQUFxRCxZQUFXO0FBQzVELE1BQUlDLE9BQU8sR0FBR04sNkNBQUMsQ0FBQyxJQUFELENBQWY7QUFDQSxNQUFJTyxHQUFHLEdBQUdELE9BQU8sQ0FBQ0UsSUFBUixDQUFhLE1BQWIsQ0FBVjtBQUNBLE1BQU1DLFVBQVUsR0FBR0gsT0FBTyxDQUFDSSxPQUFSLENBQWdCLGdCQUFoQixDQUFuQjtBQUVBLEdBQUNELFVBQVUsQ0FBQ0UsTUFBWCxHQUFvQkYsVUFBcEIsR0FBaUNILE9BQWxDLEVBQ0tJLE9BREwsQ0FDYSxlQURiLEVBQzhCRSxJQUQ5QixDQUNtQyxnQkFEbkMsRUFFS0MsSUFGTCxDQUVVLFVBRlYsRUFFc0IsVUFGdEIsRUFHS0QsSUFITCxDQUdVLE9BSFYsRUFHbUJFLFdBSG5CLENBRytCLGNBSC9CLEVBRytDQyxRQUgvQyxDQUd3RCxvQkFIeEQ7QUFLQWIsRUFBQUEsMERBQU8sQ0FBQ0ssR0FBRCxFQUFNO0FBQUM7QUFBRCxLQUFvQjtBQUM3QixRQUFJSCw2Q0FBTSxJQUFJQSxxREFBZCxFQUE4QjtBQUMxQkEsTUFBQUEsZ0VBQUEsQ0FBMEI7QUFBRWMsUUFBQUEsTUFBTSxFQUFFLENBQUMsQ0FBRCxFQUFJLEdBQUo7QUFBVixPQUExQjtBQUNBZCxNQUFBQSxrRUFBQSxDQUE0QixVQUE1QixFQUF3Q2UsSUFBeEMsaUJBQXNEbEIsbUZBQUEsRUFBdEQ7QUFDSDs7QUFFRCxLQUFDUSxVQUFVLENBQUNFLE1BQVgsR0FBb0JGLFVBQXBCLEdBQWlDSCxPQUFsQyxFQUNLSSxPQURMLENBQ2EsZUFEYixFQUM4QkUsSUFEOUIsQ0FDbUMsZ0JBRG5DLEVBRUtXLFVBRkwsQ0FFZ0IsVUFGaEIsRUFHS1gsSUFITCxDQUdVLE9BSFYsRUFHbUJFLFdBSG5CLENBRytCLG9CQUgvQixFQUdxREMsUUFIckQsQ0FHOEQsY0FIOUQ7QUFJSCxHQVZNLENBQVA7QUFXSCxDQXJCRDtBQXVCQWYsNkNBQUMsQ0FBQywwQ0FBRCxDQUFELENBQThDSyxFQUE5QyxDQUFpRCxPQUFqRCxFQUEwRCxZQUFXO0FBQ2pFLE1BQUlDLE9BQU8sR0FBR04sNkNBQUMsQ0FBQyxJQUFELENBQWY7QUFDQSxNQUFJTyxHQUFHLEdBQUdELE9BQU8sQ0FBQ0UsSUFBUixDQUFhLE1BQWIsQ0FBVjtBQUNBLE1BQU1nQixFQUFFLEdBQUdsQixPQUFPLENBQUNJLE9BQVIsQ0FBZ0IsSUFBaEIsQ0FBWDtBQUNBYyxFQUFBQSxFQUFFLENBQUNULFFBQUgsQ0FBWSxVQUFaO0FBRUFiLEVBQUFBLDBEQUFPLENBQUNLLEdBQUQsRUFBTSxVQUFDa0IsUUFBRCxFQUFjO0FBQ3ZCLFFBQUlBLFFBQVEsQ0FBQ0MsTUFBVCxLQUFvQixTQUF4QixFQUFtQztBQUMvQkYsTUFBQUEsRUFBRSxDQUFDRyxNQUFIO0FBQ0gsS0FGRCxNQUVPO0FBQ0hILE1BQUFBLEVBQUUsQ0FBQ1YsV0FBSCxDQUFlLFVBQWY7QUFDSDtBQUNKLEdBTk0sQ0FBUDtBQU9ILENBYkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL2Rhc2hib2FyZC9iYWNrdXAuanM/MWFiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgdHJhbnNsYXRpb25zIH0gZnJvbSAnZ3Jhdi1jb25maWcnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi4vdXRpbHMvcmVxdWVzdCc7XG5pbXBvcnQgeyBJbnN0YW5jZXMgYXMgQ2hhcnRzIH0gZnJvbSAnLi9jaGFydCc7XG5cbiQoJ1tkYXRhLWJhY2t1cF1bZGF0YS1hamF4Kj1cImJhY2t1cC9cIl0nKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICBsZXQgZWxlbWVudCA9ICQodGhpcyk7XG4gICAgbGV0IHVybCA9IGVsZW1lbnQuZGF0YSgnYWpheCcpO1xuICAgIGNvbnN0IGluRHJvcGRvd24gPSBlbGVtZW50LmNsb3Nlc3QoJy5kcm9wZG93bi1tZW51Jyk7XG5cbiAgICAoaW5Ecm9wZG93bi5sZW5ndGggPyBpbkRyb3Bkb3duIDogZWxlbWVudClcbiAgICAgICAgLmNsb3Nlc3QoJy5idXR0b24tZ3JvdXAnKS5maW5kKCc+IGJ1dHRvbjpmaXJzdCcpXG4gICAgICAgIC5hdHRyKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpXG4gICAgICAgIC5maW5kKCc+IC5mYScpLnJlbW92ZUNsYXNzKCdmYS1saWZlLXJpbmcnKS5hZGRDbGFzcygnZmEtc3BpbiBmYS1yZWZyZXNoJyk7XG5cbiAgICByZXF1ZXN0KHVybCwgKC8qIHJlc3BvbnNlICovKSA9PiB7XG4gICAgICAgIGlmIChDaGFydHMgJiYgQ2hhcnRzLmJhY2t1cHMpIHtcbiAgICAgICAgICAgIENoYXJ0cy5iYWNrdXBzLnVwZGF0ZURhdGEoeyBzZXJpZXM6IFswLCAxMDBdIH0pO1xuICAgICAgICAgICAgQ2hhcnRzLmJhY2t1cHMuZWxlbWVudC5maW5kKCcubnVtZXJpYycpLmh0bWwoYDAgPGVtPiR7dHJhbnNsYXRpb25zLlBMVUdJTl9BRE1JTi5EQVlTLnRvTG93ZXJDYXNlKCl9PC9lbT5gKTtcbiAgICAgICAgfVxuXG4gICAgICAgIChpbkRyb3Bkb3duLmxlbmd0aCA/IGluRHJvcGRvd24gOiBlbGVtZW50KVxuICAgICAgICAgICAgLmNsb3Nlc3QoJy5idXR0b24tZ3JvdXAnKS5maW5kKCc+IGJ1dHRvbjpmaXJzdCcpXG4gICAgICAgICAgICAucmVtb3ZlQXR0cignZGlzYWJsZWQnKVxuICAgICAgICAgICAgLmZpbmQoJz4gLmZhJykucmVtb3ZlQ2xhc3MoJ2ZhLXNwaW4gZmEtcmVmcmVzaCcpLmFkZENsYXNzKCdmYS1saWZlLXJpbmcnKTtcbiAgICB9KTtcbn0pO1xuXG4kKCdbZGF0YS1iYWNrdXBdW2RhdGEtYWpheCo9XCJiYWNrdXBEZWxldGVcIl0nKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICBsZXQgZWxlbWVudCA9ICQodGhpcyk7XG4gICAgbGV0IHVybCA9IGVsZW1lbnQuZGF0YSgnYWpheCcpO1xuICAgIGNvbnN0IHRyID0gZWxlbWVudC5jbG9zZXN0KCd0cicpO1xuICAgIHRyLmFkZENsYXNzKCdkZWxldGluZycpO1xuXG4gICAgcmVxdWVzdCh1cmwsIChyZXNwb25zZSkgPT4ge1xuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAnc3VjY2VzcycpIHtcbiAgICAgICAgICAgIHRyLnJlbW92ZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdHIucmVtb3ZlQ2xhc3MoJ2RlbGV0aW5nJyk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJ0cmFuc2xhdGlvbnMiLCJyZXF1ZXN0IiwiSW5zdGFuY2VzIiwiQ2hhcnRzIiwib24iLCJlbGVtZW50IiwidXJsIiwiZGF0YSIsImluRHJvcGRvd24iLCJjbG9zZXN0IiwibGVuZ3RoIiwiZmluZCIsImF0dHIiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiYmFja3VwcyIsInVwZGF0ZURhdGEiLCJzZXJpZXMiLCJodG1sIiwiUExVR0lOX0FETUlOIiwiREFZUyIsInRvTG93ZXJDYXNlIiwicmVtb3ZlQXR0ciIsInRyIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJyZW1vdmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/dashboard/backup.js\n");

/***/ }),

/***/ "./app/dashboard/cache.js":
/*!********************************!*\
  !*** ./app/dashboard/cache.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Cache),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar getUrl = function getUrl() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (type) {\n    type = \"cleartype:\".concat(type, \"/\");\n  }\n\n  return \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/cache.json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"clearCache/\").concat(type, \"admin-nonce\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep).concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.admin_nonce);\n};\n\nvar Cache = /*#__PURE__*/function () {\n  function Cache() {\n    var _this = this;\n\n    _classCallCheck(this, Cache);\n\n    this.element = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-clear-cache]');\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('click', '[data-clear-cache]', function (event) {\n      return _this.clear(event, event.target);\n    });\n  }\n\n  _createClass(Cache, [{\n    key: \"clear\",\n    value: function clear(event, element) {\n      var _this2 = this;\n\n      var type = '';\n\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n\n      if (typeof event === 'string') {\n        type = event;\n      }\n\n      element = element ? jquery__WEBPACK_IMPORTED_MODULE_0___default()(element) : jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-clear-cache-type=\\\"\".concat(type, \"\\\"]\"));\n      type = type || jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).data('clear-cache-type') || '';\n      var url = element.data('clearCache') || getUrl(type);\n      this.disable();\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, function () {\n        return _this2.enable();\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.element.removeAttr('disabled').find('> .fa').removeClass('fa-refresh fa-spin fa-retweet').addClass('fa-retweet');\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.element.attr('disabled', 'disabled').find('> .fa').removeClass('fa-retweet').addClass('fa-refresh fa-spin');\n    }\n  }]);\n\n  return Cache;\n}();\n\n\nvar Instance = new Cache();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZGFzaGJvYXJkL2NhY2hlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUEsSUFBTUcsTUFBTSxHQUFHLFNBQVRBLE1BQVMsR0FBZTtBQUFBLE1BQWRDLElBQWMsdUVBQVAsRUFBTzs7QUFDMUIsTUFBSUEsSUFBSixFQUFVO0FBQ05BLElBQUFBLElBQUksdUJBQWdCQSxJQUFoQixNQUFKO0FBQ0g7O0FBRUQsbUJBQVVILGlFQUFWLDZCQUFxREEseURBQXJELHdCQUFtRkcsSUFBbkYsd0JBQXFHSCx5REFBckcsU0FBd0hBLDJEQUF4SDtBQUNILENBTkQ7O0lBUXFCTztBQUNqQixtQkFBYztBQUFBOztBQUFBOztBQUNWLFNBQUtDLE9BQUwsR0FBZVQsNkNBQUMsQ0FBQyxvQkFBRCxDQUFoQjtBQUNBQSxJQUFBQSw2Q0FBQyxDQUFDLE1BQUQsQ0FBRCxDQUFVVSxFQUFWLENBQWEsT0FBYixFQUFzQixvQkFBdEIsRUFBNEMsVUFBQ0MsS0FBRDtBQUFBLGFBQVcsS0FBSSxDQUFDQyxLQUFMLENBQVdELEtBQVgsRUFBa0JBLEtBQUssQ0FBQ0UsTUFBeEIsQ0FBWDtBQUFBLEtBQTVDO0FBQ0g7Ozs7V0FFRCxlQUFNRixLQUFOLEVBQWFGLE9BQWIsRUFBc0I7QUFBQTs7QUFDbEIsVUFBSUwsSUFBSSxHQUFHLEVBQVg7O0FBRUEsVUFBSU8sS0FBSyxJQUFJQSxLQUFLLENBQUNHLGNBQW5CLEVBQW1DO0FBQUVILFFBQUFBLEtBQUssQ0FBQ0csY0FBTjtBQUF5Qjs7QUFDOUQsVUFBSSxPQUFPSCxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQUVQLFFBQUFBLElBQUksR0FBR08sS0FBUDtBQUFlOztBQUVoREYsTUFBQUEsT0FBTyxHQUFHQSxPQUFPLEdBQUdULDZDQUFDLENBQUNTLE9BQUQsQ0FBSixHQUFnQlQsNkNBQUMsb0NBQTRCSSxJQUE1QixTQUFsQztBQUNBQSxNQUFBQSxJQUFJLEdBQUdBLElBQUksSUFBSUosNkNBQUMsQ0FBQ1MsT0FBRCxDQUFELENBQVdNLElBQVgsQ0FBZ0Isa0JBQWhCLENBQVIsSUFBK0MsRUFBdEQ7QUFDQSxVQUFJQyxHQUFHLEdBQUdQLE9BQU8sQ0FBQ00sSUFBUixDQUFhLFlBQWIsS0FBOEJaLE1BQU0sQ0FBQ0MsSUFBRCxDQUE5QztBQUVBLFdBQUthLE9BQUw7QUFFQWYsTUFBQUEsMERBQU8sQ0FBQ2MsR0FBRCxFQUFNO0FBQUEsZUFBTSxNQUFJLENBQUNFLE1BQUwsRUFBTjtBQUFBLE9BQU4sQ0FBUDtBQUNIOzs7V0FFRCxrQkFBUztBQUNMLFdBQUtULE9BQUwsQ0FDS1UsVUFETCxDQUNnQixVQURoQixFQUVLQyxJQUZMLENBRVUsT0FGVixFQUVtQkMsV0FGbkIsQ0FFK0IsK0JBRi9CLEVBRWdFQyxRQUZoRSxDQUV5RSxZQUZ6RTtBQUdIOzs7V0FFRCxtQkFBVTtBQUNOLFdBQUtiLE9BQUwsQ0FDS2MsSUFETCxDQUNVLFVBRFYsRUFDc0IsVUFEdEIsRUFFS0gsSUFGTCxDQUVVLE9BRlYsRUFFbUJDLFdBRm5CLENBRStCLFlBRi9CLEVBRTZDQyxRQUY3QyxDQUVzRCxvQkFGdEQ7QUFHSDs7Ozs7OztBQUdMLElBQUlFLFFBQVEsR0FBRyxJQUFJaEIsS0FBSixFQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC9kYXNoYm9hcmQvY2FjaGUuanM/Y2IyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnZ3Jhdi1jb25maWcnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi4vdXRpbHMvcmVxdWVzdCc7XG5cbmNvbnN0IGdldFVybCA9ICh0eXBlID0gJycpID0+IHtcbiAgICBpZiAodHlwZSkge1xuICAgICAgICB0eXBlID0gYGNsZWFydHlwZToke3R5cGV9L2A7XG4gICAgfVxuXG4gICAgcmV0dXJuIGAke2NvbmZpZy5iYXNlX3VybF9yZWxhdGl2ZX0vY2FjaGUuanNvbi90YXNrJHtjb25maWcucGFyYW1fc2VwfWNsZWFyQ2FjaGUvJHt0eXBlfWFkbWluLW5vbmNlJHtjb25maWcucGFyYW1fc2VwfSR7Y29uZmlnLmFkbWluX25vbmNlfWA7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYWNoZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudCA9ICQoJ1tkYXRhLWNsZWFyLWNhY2hlXScpO1xuICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgJ1tkYXRhLWNsZWFyLWNhY2hlXScsIChldmVudCkgPT4gdGhpcy5jbGVhcihldmVudCwgZXZlbnQudGFyZ2V0KSk7XG4gICAgfVxuXG4gICAgY2xlYXIoZXZlbnQsIGVsZW1lbnQpIHtcbiAgICAgICAgbGV0IHR5cGUgPSAnJztcblxuICAgICAgICBpZiAoZXZlbnQgJiYgZXZlbnQucHJldmVudERlZmF1bHQpIHsgZXZlbnQucHJldmVudERlZmF1bHQoKTsgfVxuICAgICAgICBpZiAodHlwZW9mIGV2ZW50ID09PSAnc3RyaW5nJykgeyB0eXBlID0gZXZlbnQ7IH1cblxuICAgICAgICBlbGVtZW50ID0gZWxlbWVudCA/ICQoZWxlbWVudCkgOiAkKGBbZGF0YS1jbGVhci1jYWNoZS10eXBlPVwiJHt0eXBlfVwiXWApO1xuICAgICAgICB0eXBlID0gdHlwZSB8fCAkKGVsZW1lbnQpLmRhdGEoJ2NsZWFyLWNhY2hlLXR5cGUnKSB8fCAnJztcbiAgICAgICAgbGV0IHVybCA9IGVsZW1lbnQuZGF0YSgnY2xlYXJDYWNoZScpIHx8IGdldFVybCh0eXBlKTtcblxuICAgICAgICB0aGlzLmRpc2FibGUoKTtcblxuICAgICAgICByZXF1ZXN0KHVybCwgKCkgPT4gdGhpcy5lbmFibGUoKSk7XG4gICAgfVxuXG4gICAgZW5hYmxlKCkge1xuICAgICAgICB0aGlzLmVsZW1lbnRcbiAgICAgICAgICAgIC5yZW1vdmVBdHRyKCdkaXNhYmxlZCcpXG4gICAgICAgICAgICAuZmluZCgnPiAuZmEnKS5yZW1vdmVDbGFzcygnZmEtcmVmcmVzaCBmYS1zcGluIGZhLXJldHdlZXQnKS5hZGRDbGFzcygnZmEtcmV0d2VldCcpO1xuICAgIH1cblxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFxuICAgICAgICAgICAgLmF0dHIoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJylcbiAgICAgICAgICAgIC5maW5kKCc+IC5mYScpLnJlbW92ZUNsYXNzKCdmYS1yZXR3ZWV0JykuYWRkQ2xhc3MoJ2ZhLXJlZnJlc2ggZmEtc3BpbicpO1xuICAgIH1cbn1cblxubGV0IEluc3RhbmNlID0gbmV3IENhY2hlKCk7XG5cbmV4cG9ydCB7IEluc3RhbmNlIH07XG4iXSwibmFtZXMiOlsiJCIsImNvbmZpZyIsInJlcXVlc3QiLCJnZXRVcmwiLCJ0eXBlIiwiYmFzZV91cmxfcmVsYXRpdmUiLCJwYXJhbV9zZXAiLCJhZG1pbl9ub25jZSIsIkNhY2hlIiwiZWxlbWVudCIsIm9uIiwiZXZlbnQiLCJjbGVhciIsInRhcmdldCIsInByZXZlbnREZWZhdWx0IiwiZGF0YSIsInVybCIsImRpc2FibGUiLCJlbmFibGUiLCJyZW1vdmVBdHRyIiwiZmluZCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJhdHRyIiwiSW5zdGFuY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/dashboard/cache.js\n");

/***/ }),

/***/ "./app/dashboard/chart.js":
/*!********************************!*\
  !*** ./app/dashboard/chart.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaults\": () => (/* binding */ defaults),\n/* harmony export */   \"default\": () => (/* binding */ Chart),\n/* harmony export */   \"UpdatesChart\": () => (/* binding */ UpdatesChart),\n/* harmony export */   \"Instances\": () => (/* binding */ Instances)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var chartist__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chartist */ \"./node_modules/chartist/dist/chartist.js\");\n/* harmony import */ var chartist__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(chartist__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_gpm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/gpm */ \"./app/utils/gpm.js\");\n/* harmony import */ var _updates__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../updates */ \"./app/updates/index.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n // let isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\nvar defaults = {\n  data: {\n    series: [100, 0]\n  },\n  options: {\n    Pie: {\n      donut: true,\n      donutWidth: 10,\n      startAngle: 0,\n      total: 100,\n      showLabel: false,\n      height: 150,\n      // chartPadding: !isFirefox ? 10 : 25 // workaround for older versions of firefox\n      chartPadding: 5\n    },\n    Bar: {\n      height: 164,\n      chartPadding: 20,\n      // workaround for older versions of firefox\n      axisX: {\n        showGrid: false,\n        labelOffset: {\n          x: 0,\n          y: 0\n        }\n      },\n      axisY: {\n        offset: 15,\n        showLabel: true,\n        showGrid: true,\n        labelOffset: {\n          x: 5,\n          y: 5\n        },\n        scaleMinSpace: 25\n      }\n    }\n  }\n};\n\nvar Chart = /*#__PURE__*/function () {\n  function Chart(element) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, Chart);\n\n    this.element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element) || [];\n\n    if (!this.element[0]) {\n      return;\n    }\n\n    var type = (this.element.data('chart-type') || 'pie').toLowerCase();\n    this.type = type.charAt(0).toUpperCase() + type.substr(1).toLowerCase();\n    options = Object.assign({}, defaults.options[this.type], options);\n    data = Object.assign({}, defaults.data, data);\n    Object.assign(this, {\n      options: options,\n      data: data\n    });\n    this.chart = (chartist__WEBPACK_IMPORTED_MODULE_1___default())[this.type](this.element.find('.ct-chart').empty()[0], this.data, this.options);\n    this.chart.on('created', function () {\n      _this.element.find('.hidden').removeClass('hidden'); // FIX: workaround for chartist issue not allowing HTML in labels anymore\n      // https://github.com/gionkunz/chartist-js/issues/937\n\n\n      _this.element.find('.ct-label').each(function (index, label) {\n        label = jquery__WEBPACK_IMPORTED_MODULE_0___default()(label);\n        var text = label.html().replace('&lt;', '<').replace('&gt;', '>');\n        label.html(text);\n      });\n    });\n  }\n\n  _createClass(Chart, [{\n    key: \"updateData\",\n    value: function updateData(data) {\n      Object.assign(this.data, data);\n      this.chart.update(this.data);\n    }\n  }]);\n\n  return Chart;\n}();\n\n\n;\nvar UpdatesChart = /*#__PURE__*/function (_Chart) {\n  _inherits(UpdatesChart, _Chart);\n\n  var _super = _createSuper(UpdatesChart);\n\n  function UpdatesChart(element) {\n    var _this2;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, UpdatesChart);\n\n    _this2 = _super.call(this, element, options, data);\n\n    _this2.chart.on('draw', function (data) {\n      return _this2.draw(data);\n    });\n\n    _utils_gpm__WEBPACK_IMPORTED_MODULE_3__.Instance.on('fetched', function (response) {\n      if (!response.payload) {\n        return;\n      }\n\n      var payload = response.payload.grav;\n      var missing = (response.payload.resources.total + (payload.isUpdatable ? 1 : 0)) * 100 / (response.payload.installed + (payload.isUpdatable ? 1 : 0));\n      var updated = 100 - missing;\n\n      _this2.updateData({\n        series: [updated, missing]\n      });\n\n      if (response.payload.resources.total) {\n        _updates__WEBPACK_IMPORTED_MODULE_4__.Instance.maintenance('show');\n      }\n    });\n    return _this2;\n  }\n\n  _createClass(UpdatesChart, [{\n    key: \"draw\",\n    value: function draw(data) {\n      if (data.index) {\n        return;\n      }\n\n      var notice = grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN[data.value === 100 ? 'FULLY_UPDATED' : 'UPDATES_AVAILABLE'];\n      this.element.find('.numeric span').text(\"\".concat(Math.round(data.value), \"%\"));\n      this.element.find('.js__updates-available-description').html(notice);\n      this.element.find('.hidden').removeClass('hidden');\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData(data) {\n      _get(_getPrototypeOf(UpdatesChart.prototype), \"updateData\", this).call(this, data); // missing updates\n\n\n      if (this.data.series[0] < 100) {\n        this.element.closest('#updates').find('[data-update-packages]').fadeIn();\n      }\n    }\n  }]);\n\n  return UpdatesChart;\n}(Chart);\nvar charts = {};\njquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-chart-name]').each(function () {\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n  var name = element.data('chart-name') || '';\n  var options = element.data('chart-options') || {};\n  var data = element.data('chart-data') || {};\n\n  if (name === 'updates') {\n    charts[name] = new UpdatesChart(element, options, data);\n  } else {\n    charts[name] = new Chart(element, options, data);\n  }\n});\nvar Instances = charts;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/dashboard/chart.js\n");

/***/ }),

/***/ "./app/dashboard/index.js":
/*!********************************!*\
  !*** ./app/dashboard/index.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _chart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chart */ \"./app/dashboard/chart.js\");\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cache */ \"./app/dashboard/cache.js\");\n/* harmony import */ var _backup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./backup */ \"./app/dashboard/backup.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Chart: {\n    Chart: _chart__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    UpdatesChart: _chart__WEBPACK_IMPORTED_MODULE_0__.UpdatesChart,\n    Instances: _chart__WEBPACK_IMPORTED_MODULE_0__.Instances\n  },\n  Cache: _cache__WEBPACK_IMPORTED_MODULE_1__.Instance\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZGFzaGJvYXJkL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFFQSxpRUFBZTtBQUNYQSxFQUFBQSxLQUFLLEVBQUU7QUFDSEEsSUFBQUEsS0FBSyxFQUFMQSw4Q0FERztBQUVIQyxJQUFBQSxZQUFZLEVBQVpBLGdEQUZHO0FBR0hDLElBQUFBLFNBQVMsRUFBVEEsNkNBQVNBO0FBSE4sR0FESTtBQU1YRSxFQUFBQSxLQUFLLEVBQUxBLDRDQUFLQTtBQU5NLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL2Rhc2hib2FyZC9pbmRleC5qcz9hMTk1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGFydCwgeyBVcGRhdGVzQ2hhcnQsIEluc3RhbmNlcyB9IGZyb20gJy4vY2hhcnQnO1xuaW1wb3J0IHsgSW5zdGFuY2UgYXMgQ2FjaGUgfSBmcm9tICcuL2NhY2hlJztcbmltcG9ydCAnLi9iYWNrdXAnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgQ2hhcnQ6IHtcbiAgICAgICAgQ2hhcnQsXG4gICAgICAgIFVwZGF0ZXNDaGFydCxcbiAgICAgICAgSW5zdGFuY2VzXG4gICAgfSxcbiAgICBDYWNoZVxufTtcbiJdLCJuYW1lcyI6WyJDaGFydCIsIlVwZGF0ZXNDaGFydCIsIkluc3RhbmNlcyIsIkluc3RhbmNlIiwiQ2FjaGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/dashboard/index.js\n");

/***/ }),

/***/ "./app/forms/fields/acl-picker.js":
/*!****************************************!*\
  !*** ./app/forms/fields/acl-picker.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\nbody.on('change', '[data-acl_picker] select', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var value = target.val();\n  var item = target.closest('.permissions-item');\n  var inputs = item.find('input[type=\"checkbox\"], input[type=\"radio\"]');\n  var hidden = item.find('input[type=\"hidden\"][name]');\n  var wrapper = target.closest('[data-acl_picker_id]');\n  var type = item.data('fieldType');\n\n  if (type === 'access') {\n    inputs.each(function (index, input) {\n      input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input);\n      var name = input.prop('name');\n      input.prop('name', name.replace(/(.*)(\\[[^\\]]*\\])/, \"$1[\".concat(value, \"]\")));\n    });\n  } else if (type === 'permissions') {\n    var crudpContainer = item.find('[data-field-name]');\n    inputs.each(function (index, input) {\n      input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input);\n      var rand = Math.round(Math.random() * 500);\n      var name = crudpContainer.data('fieldName');\n      var id = input.prop('id').split('_').slice(0, -1).join('_') + \"_\".concat(value, \"+\").concat(rand); // const key = input.data('crudpKey');\n\n      hidden.prop('name', name.replace(/(.*)(\\[[^\\]]*\\])/, \"$1[\".concat(value, \"]\")));\n      input.prop('id', id);\n      input.next('label').prop('for', id);\n    });\n  }\n\n  wrapper.find('.permissions-item .button.add-item')[!value ? 'addClass' : 'removeClass']('disabled').prop('disabled', !value ? 'disabled' : null);\n});\nbody.on('input', 'input[data-crudp-key]', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var container = target.closest('.crudp-container');\n  var hidden = container.find('input[type=\"hidden\"][name]');\n  var key = target.data('crudpKey');\n  var json = JSON.parse(hidden.val() || '{}');\n  json[key] = target.val();\n  hidden.val(JSON.stringify(json));\n});\nbody.on('click', '[data-acl_picker] .remove-item', function (event) {\n  event.preventDefault();\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var container = target.closest('.permissions-item');\n  var wrapper = target.closest('[data-acl_picker_id]');\n  container.remove();\n  var empty = wrapper.find('.permissions-item').length === 1; // show the initial + button\n\n  if (empty) {\n    wrapper.find('.permissions-item.empty-list').removeClass('hidden');\n  }\n});\nbody.on('click', '[data-acl_picker] .add-item', function (event) {\n  event.preventDefault();\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var item = target.closest('.permissions-item');\n  var wrapper = target.closest('[data-acl_picker_id]');\n  var ID = wrapper.data('acl_picker_id');\n  var template = document.querySelector(\"template[data-id=\\\"acl_picker-\".concat(ID, \"\\\"]\"));\n  var clone = jquery__WEBPACK_IMPORTED_MODULE_0___default()(template.content.firstElementChild).clone();\n  clone.insertAfter(item); // randomize ids\n\n  clone.find('.switch-toggle input[type=\"radio\"]').each(function (index, input) {\n    input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input);\n    var id = input.prop('id');\n    var label = input.next('label');\n    var rand = (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toLowerCase();\n    input.prop('id', \"\".concat(id).concat(rand));\n    label.prop('for', \"\".concat(id).concat(rand));\n  }); // hide the initial + button\n\n  wrapper.find('.permissions-item.empty-list').addClass('hidden'); // disable all + buttons until one is selected\n\n  wrapper.find('.permissions-item .button.add-item').addClass('disabled').prop('disabled', 'disabled');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QW9CLEVBQXBCLElBQTBCOUIsSUFBSSxDQUFDRSxNQUFMLEdBQWM0QixRQUFkLENBQXVCLEVBQXZCLEVBQTJCQyxNQUEzQixDQUFrQyxDQUFsQyxFQUFxQyxDQUFyQyxDQUEzQixFQUFvRUMsV0FBcEUsRUFBYjtBQUVBdEMsSUFBQUEsS0FBSyxDQUFDRSxJQUFOLENBQVcsSUFBWCxZQUFvQk8sRUFBcEIsU0FBeUJKLElBQXpCO0FBQ0E0QixJQUFBQSxLQUFLLENBQUMvQixJQUFOLENBQVcsS0FBWCxZQUFxQk8sRUFBckIsU0FBMEJKLElBQTFCO0FBQ0gsR0FSRCxFQVp1RCxDQXNCdkQ7O0FBQ0FWLEVBQUFBLE9BQU8sQ0FBQ0YsSUFBUixDQUFhLDhCQUFiLEVBQTZDOEMsUUFBN0MsQ0FBc0QsUUFBdEQsRUF2QnVELENBeUJ2RDs7QUFDQTVDLEVBQUFBLE9BQU8sQ0FBQ0YsSUFBUixDQUFhLG9DQUFiLEVBQW1EOEMsUUFBbkQsQ0FBNEQsVUFBNUQsRUFBd0VyQyxJQUF4RSxDQUE2RSxVQUE3RSxFQUF5RixVQUF6RjtBQUNILENBM0JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC9mb3Jtcy9maWVsZHMvYWNsLXBpY2tlci5qcz9kZjg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmNvbnN0IGJvZHkgPSAkKCdib2R5Jyk7XG5cbmJvZHkub24oJ2NoYW5nZScsICdbZGF0YS1hY2xfcGlja2VyXSBzZWxlY3QnLCAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0IHZhbHVlID0gdGFyZ2V0LnZhbCgpO1xuICAgIGNvbnN0IGl0ZW0gPSB0YXJnZXQuY2xvc2VzdCgnLnBlcm1pc3Npb25zLWl0ZW0nKTtcbiAgICBjb25zdCBpbnB1dHMgPSBpdGVtLmZpbmQoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXSwgaW5wdXRbdHlwZT1cInJhZGlvXCJdJyk7XG4gICAgY29uc3QgaGlkZGVuID0gaXRlbS5maW5kKCdpbnB1dFt0eXBlPVwiaGlkZGVuXCJdW25hbWVdJyk7XG4gICAgY29uc3Qgd3JhcHBlciA9IHRhcmdldC5jbG9zZXN0KCdbZGF0YS1hY2xfcGlja2VyX2lkXScpO1xuICAgIGNvbnN0IHR5cGUgPSBpdGVtLmRhdGEoJ2ZpZWxkVHlwZScpO1xuXG4gICAgaWYgKHR5cGUgPT09ICdhY2Nlc3MnKSB7XG4gICAgICAgIGlucHV0cy5lYWNoKChpbmRleCwgaW5wdXQpID0+IHtcbiAgICAgICAgICAgIGlucHV0ID0gJChpbnB1dCk7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gaW5wdXQucHJvcCgnbmFtZScpO1xuICAgICAgICAgICAgaW5wdXQucHJvcCgnbmFtZScsIG5hbWUucmVwbGFjZSgvKC4qKShcXFtbXlxcXV0qXFxdKS8sIGAkMVske3ZhbHVlfV1gKSk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3Blcm1pc3Npb25zJykge1xuICAgICAgICBjb25zdCBjcnVkcENvbnRhaW5lciA9IGl0ZW0uZmluZCgnW2RhdGEtZmllbGQtbmFtZV0nKTtcbiAgICAgICAgaW5wdXRzLmVhY2goKGluZGV4LCBpbnB1dCkgPT4ge1xuICAgICAgICAgICAgaW5wdXQgPSAkKGlucHV0KTtcbiAgICAgICAgICAgIGNvbnN0IHJhbmQgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiA1MDApO1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGNydWRwQ29udGFpbmVyLmRhdGEoJ2ZpZWxkTmFtZScpO1xuICAgICAgICAgICAgY29uc3QgaWQgPSBpbnB1dC5wcm9wKCdpZCcpLnNwbGl0KCdfJykuc2xpY2UoMCwgLTEpLmpvaW4oJ18nKSArIGBfJHt2YWx1ZX0rJHtyYW5kfWA7XG4gICAgICAgICAgICAvLyBjb25zdCBrZXkgPSBpbnB1dC5kYXRhKCdjcnVkcEtleScpO1xuICAgICAgICAgICAgaGlkZGVuLnByb3AoJ25hbWUnLCBuYW1lLnJlcGxhY2UoLyguKikoXFxbW15cXF1dKlxcXSkvLCBgJDFbJHt2YWx1ZX1dYCkpO1xuICAgICAgICAgICAgaW5wdXQucHJvcCgnaWQnLCBpZCk7XG4gICAgICAgICAgICBpbnB1dC5uZXh0KCdsYWJlbCcpLnByb3AoJ2ZvcicsIGlkKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgd3JhcHBlci5maW5kKCcucGVybWlzc2lvbnMtaXRlbSAuYnV0dG9uLmFkZC1pdGVtJylbIXZhbHVlID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKCdkaXNhYmxlZCcpLnByb3AoJ2Rpc2FibGVkJywgIXZhbHVlID8gJ2Rpc2FibGVkJyA6IG51bGwpO1xufSk7XG5cbmJvZHkub24oJ2lucHV0JywgJ2lucHV0W2RhdGEtY3J1ZHAta2V5XScsIChldmVudCkgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XG4gICAgY29uc3QgY29udGFpbmVyID0gdGFyZ2V0LmNsb3Nlc3QoJy5jcnVkcC1jb250YWluZXInKTtcbiAgICBjb25zdCBoaWRkZW4gPSBjb250YWluZXIuZmluZCgnaW5wdXRbdHlwZT1cImhpZGRlblwiXVtuYW1lXScpO1xuICAgIGNvbnN0IGtleSA9IHRhcmdldC5kYXRhKCdjcnVkcEtleScpO1xuICAgIGNvbnN0IGpzb24gPSBKU09OLnBhcnNlKGhpZGRlbi52YWwoKSB8fCAne30nKTtcbiAgICBqc29uW2tleV0gPSB0YXJnZXQudmFsKCk7XG4gICAgaGlkZGVuLnZhbChKU09OLnN0cmluZ2lmeShqc29uKSk7XG59KTtcblxuYm9keS5vbignY2xpY2snLCAnW2RhdGEtYWNsX3BpY2tlcl0gLnJlbW92ZS1pdGVtJywgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IHRhcmdldC5jbG9zZXN0KCcucGVybWlzc2lvbnMtaXRlbScpO1xuICAgIGNvbnN0IHdyYXBwZXIgPSB0YXJnZXQuY2xvc2VzdCgnW2RhdGEtYWNsX3BpY2tlcl9pZF0nKTtcbiAgICBjb250YWluZXIucmVtb3ZlKCk7XG5cbiAgICBjb25zdCBlbXB0eSA9IHdyYXBwZXIuZmluZCgnLnBlcm1pc3Npb25zLWl0ZW0nKS5sZW5ndGggPT09IDE7XG5cbiAgICAvLyBzaG93IHRoZSBpbml0aWFsICsgYnV0dG9uXG4gICAgaWYgKGVtcHR5KSB7XG4gICAgICAgIHdyYXBwZXIuZmluZCgnLnBlcm1pc3Npb25zLWl0ZW0uZW1wdHktbGlzdCcpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcbiAgICB9XG59KTtcblxuYm9keS5vbignY2xpY2snLCAnW2RhdGEtYWNsX3BpY2tlcl0gLmFkZC1pdGVtJywgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0IGl0ZW0gPSB0YXJnZXQuY2xvc2VzdCgnLnBlcm1pc3Npb25zLWl0ZW0nKTtcbiAgICBjb25zdCB3cmFwcGVyID0gdGFyZ2V0LmNsb3Nlc3QoJ1tkYXRhLWFjbF9waWNrZXJfaWRdJyk7XG4gICAgY29uc3QgSUQgPSB3cmFwcGVyLmRhdGEoJ2FjbF9waWNrZXJfaWQnKTtcbiAgICBjb25zdCB0ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYHRlbXBsYXRlW2RhdGEtaWQ9XCJhY2xfcGlja2VyLSR7SUR9XCJdYCk7XG5cbiAgICBjb25zdCBjbG9uZSA9ICQodGVtcGxhdGUuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZCkuY2xvbmUoKTtcbiAgICBjbG9uZS5pbnNlcnRBZnRlcihpdGVtKTtcblxuICAgIC8vIHJhbmRvbWl6ZSBpZHNcbiAgICBjbG9uZS5maW5kKCcuc3dpdGNoLXRvZ2dsZSBpbnB1dFt0eXBlPVwicmFkaW9cIl0nKS5lYWNoKChpbmRleCwgaW5wdXQpID0+IHtcbiAgICAgICAgaW5wdXQgPSAkKGlucHV0KTtcbiAgICAgICAgY29uc3QgaWQgPSBpbnB1dC5wcm9wKCdpZCcpO1xuICAgICAgICBjb25zdCBsYWJlbCA9IGlucHV0Lm5leHQoJ2xhYmVsJyk7XG4gICAgICAgIGNvbnN0IHJhbmQgPSAoRGF0ZS5ub3coKS50b1N0cmluZygzNikgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgNSkpLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgaW5wdXQucHJvcCgnaWQnLCBgJHtpZH0ke3JhbmR9YCk7XG4gICAgICAgIGxhYmVsLnByb3AoJ2ZvcicsIGAke2lkfSR7cmFuZH1gKTtcbiAgICB9KTtcblxuICAgIC8vIGhpZGUgdGhlIGluaXRpYWwgKyBidXR0b25cbiAgICB3cmFwcGVyLmZpbmQoJy5wZXJtaXNzaW9ucy1pdGVtLmVtcHR5LWxpc3QnKS5hZGRDbGFzcygnaGlkZGVuJyk7XG5cbiAgICAvLyBkaXNhYmxlIGFsbCArIGJ1dHRvbnMgdW50aWwgb25lIGlzIHNlbGVjdGVkXG4gICAgd3JhcHBlci5maW5kKCcucGVybWlzc2lvbnMtaXRlbSAuYnV0dG9uLmFkZC1pdGVtJykuYWRkQ2xhc3MoJ2Rpc2FibGVkJykucHJvcCgnZGlzYWJsZWQnLCAnZGlzYWJsZWQnKTtcbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJib2R5Iiwib24iLCJldmVudCIsInRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJ2YWx1ZSIsInZhbCIsIml0ZW0iLCJjbG9zZXN0IiwiaW5wdXRzIiwiZmluZCIsImhpZGRlbiIsIndyYXBwZXIiLCJ0eXBlIiwiZGF0YSIsImVhY2giLCJpbmRleCIsImlucHV0IiwibmFtZSIsInByb3AiLCJyZXBsYWNlIiwiY3J1ZHBDb250YWluZXIiLCJyYW5kIiwiTWF0aCIsInJvdW5kIiwicmFuZG9tIiwiaWQiLCJzcGxpdCIsInNsaWNlIiwiam9pbiIsIm5leHQiLCJjb250YWluZXIiLCJrZXkiLCJqc29uIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwicHJldmVudERlZmF1bHQiLCJyZW1vdmUiLCJlbXB0eSIsImxlbmd0aCIsInJlbW92ZUNsYXNzIiwiSUQiLCJ0ZW1wbGF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNsb25lIiwiY29udGVudCIsImZpcnN0RWxlbWVudENoaWxkIiwiaW5zZXJ0QWZ0ZXIiLCJsYWJlbCIsIkRhdGUiLCJub3ciLCJ0b1N0cmluZyIsInN1YnN0ciIsInRvTG93ZXJDYXNlIiwiYWRkQ2xhc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/forms/fields/acl-picker.js\n");

/***/ }),

/***/ "./app/forms/fields/array.js":
/*!***********************************!*\
  !*** ./app/forms/fields/array.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ArrayField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sortablejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sortablejs */ \"./node_modules/sortablejs/modular/sortable.esm.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\nvar body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\n\nvar Template = /*#__PURE__*/function () {\n  function Template(container) {\n    _classCallCheck(this, Template);\n\n    this.container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n\n    if (this.getName() === undefined) {\n      this.container = this.container.closest('[data-grav-array-name]');\n    }\n  }\n\n  _createClass(Template, [{\n    key: \"getName\",\n    value: function getName() {\n      return this.container.data('grav-array-name') || '';\n    }\n  }, {\n    key: \"getKeyPlaceholder\",\n    value: function getKeyPlaceholder() {\n      return this.container.data('grav-array-keyname') || 'Key';\n    }\n  }, {\n    key: \"getValuePlaceholder\",\n    value: function getValuePlaceholder() {\n      return this.container.data('grav-array-valuename') || 'Value';\n    }\n  }, {\n    key: \"isValueOnly\",\n    value: function isValueOnly() {\n      return this.container.find('[data-grav-array-mode=\"value_only\"]:first').length || false;\n    }\n  }, {\n    key: \"isTextArea\",\n    value: function isTextArea() {\n      return this.container.data('grav-array-textarea') || false;\n    }\n  }, {\n    key: \"shouldBeDisabled\",\n    value: function shouldBeDisabled() {\n      // check for toggleables, if field is toggleable and it's not enabled, render disabled\n      var toggle = this.container.closest('.form-field').find('[data-grav-field=\"toggleable\"] input[type=\"checkbox\"]');\n      return toggle.length && toggle.is(':not(:checked)');\n    }\n  }, {\n    key: \"getNewRow\",\n    value: function getNewRow() {\n      var tpl = '';\n      var value = this.isTextArea() ? \"<textarea \".concat(this.shouldBeDisabled() ? 'disabled=\"disabled\"' : '', \" data-grav-array-type=\\\"value\\\" name=\\\"\\\" placeholder=\\\"\").concat(this.getValuePlaceholder(), \"\\\"></textarea>\") : \"<input \".concat(this.shouldBeDisabled() ? 'disabled=\"disabled\"' : '', \" data-grav-array-type=\\\"value\\\" type=\\\"text\\\" name=\\\"\\\" value=\\\"\\\"  placeholder=\\\"\").concat(this.getValuePlaceholder(), \"\\\" />\");\n\n      if (this.isValueOnly()) {\n        tpl += \"\\n            <div class=\\\"form-row array-field-value_only\\\" data-grav-array-type=\\\"row\\\">\\n                <span data-grav-array-action=\\\"sort\\\" class=\\\"fa fa-bars\\\"></span>\\n                \".concat(value, \"\\n            \");\n      } else {\n        tpl += \"\\n            <div class=\\\"form-row\\\" data-grav-array-type=\\\"row\\\">\\n                <span data-grav-array-action=\\\"sort\\\" class=\\\"fa fa-bars\\\"></span>\\n                <input \".concat(this.shouldBeDisabled() ? 'disabled=\"disabled\"' : '', \" data-grav-array-type=\\\"key\\\" type=\\\"text\\\" value=\\\"\\\" placeholder=\\\"\").concat(this.getKeyPlaceholder(), \"\\\" />\\n                \").concat(value, \"\\n            \");\n      }\n\n      tpl += \"\\n            <span data-grav-array-action=\\\"rem\\\" class=\\\"fa fa-minus\\\"></span>\\n            <span data-grav-array-action=\\\"add\\\" class=\\\"fa fa-plus\\\"></span>\\n        </div>\";\n      return tpl;\n    }\n  }]);\n\n  return Template;\n}();\n\nvar ArrayField = /*#__PURE__*/function () {\n  function ArrayField() {\n    var _this = this;\n\n    _classCallCheck(this, ArrayField);\n\n    body.on('input', '[data-grav-array-type=\"key\"], [data-grav-array-type=\"value\"]', function (event) {\n      return _this.actionInput(event);\n    });\n    body.on('click touch', '[data-grav-array-action]:not([data-grav-array-action=\"sort\"])', function (event) {\n      return _this.actionEvent(event);\n    });\n    this.arrays = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-field=\"array\"]').each(function (index, list) {\n      return _this.addArray(list);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('mutation._grav', this._onAddedNodes.bind(this));\n  }\n\n  _createClass(ArrayField, [{\n    key: \"addArray\",\n    value: function addArray(list) {\n      var _this2 = this;\n\n      list = jquery__WEBPACK_IMPORTED_MODULE_0___default()(list);\n      list.find('[data-grav-array-type=\"container\"]').each(function (index, container) {\n        container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n\n        if (container.data('array-sort') || container[0].hasAttribute('data-array-nosort')) {\n          return;\n        }\n\n        container.data('array-sort', new sortablejs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](container.get(0), {\n          handle: '.fa-bars',\n          animation: 150,\n          onUpdate: function onUpdate() {\n            var item = container.find('[data-grav-array-type=\"row\"]:first');\n\n            _this2._setTemplate(item);\n\n            var template = item.data('array-template');\n\n            _this2.refreshNames(template);\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"actionInput\",\n    value: function actionInput(event) {\n      var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n      var type = element.data('grav-array-type');\n\n      this._setTemplate(element);\n\n      var template = element.data('array-template');\n      var keyElement = type === 'key' ? element : element.siblings('[data-grav-array-type=\"key\"]:first');\n      var valueElement = type === 'value' ? element : element.siblings('[data-grav-array-type=\"value\"]:first');\n      var escaped_name = !template.isValueOnly() ? keyElement.val() : this.getIndexFor(element);\n      escaped_name = escaped_name.toString().replace(/\\[/g, '%5B').replace(/]/g, '%5D');\n      var name = \"\".concat(template.getName(), \"[\").concat(escaped_name, \"]\");\n\n      if (!template.isValueOnly() && !keyElement.val() && !valueElement.val()) {\n        valueElement.attr('name', '');\n      } else {\n        // valueElement.attr('name', !valueElement.val() ? template.getName() : name);\n        valueElement.attr('name', name);\n      }\n\n      this.refreshNames(template);\n    }\n  }, {\n    key: \"actionEvent\",\n    value: function actionEvent(event) {\n      event && event.preventDefault();\n      var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n      var action = element.data('grav-array-action');\n      var container = element.parents('[data-grav-array-type=\"container\"]');\n\n      this._setTemplate(element);\n\n      this[\"\".concat(action, \"Action\")](element);\n      var siblings = container.find('> div');\n      container[siblings.length > 1 ? 'removeClass' : 'addClass']('one-child');\n    }\n  }, {\n    key: \"addAction\",\n    value: function addAction(element) {\n      var template = element.data('array-template');\n      var row = element.closest('[data-grav-array-type=\"row\"]');\n      row.after(template.getNewRow());\n    }\n  }, {\n    key: \"remAction\",\n    value: function remAction(element) {\n      var template = element.data('array-template');\n      var row = element.closest('[data-grav-array-type=\"row\"]');\n      var isLast = !row.siblings().length;\n\n      if (isLast) {\n        var newRow = jquery__WEBPACK_IMPORTED_MODULE_0___default()(template.getNewRow());\n        row.after(newRow);\n        newRow.find('[data-grav-array-type=\"value\"]:last').attr('name', template.getName());\n      }\n\n      row.remove();\n      this.refreshNames(template);\n    }\n  }, {\n    key: \"refreshNames\",\n    value: function refreshNames(template) {\n      if (!template.isValueOnly()) {\n        return;\n      }\n\n      var row = template.container.find('> div > [data-grav-array-type=\"row\"]');\n      var inputs = row.find('[name]:not([name=\"\"])');\n      inputs.each(function (index, input) {\n        input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input);\n        var preserved_name = input.closest('[data-grav-array-name]');\n        var name = \"\".concat(preserved_name.attr('data-grav-array-name'), \"[\").concat(index, \"]\");\n        input.attr('name', name);\n      });\n\n      if (!inputs.length) {\n        row.find('[data-grav-array-type=\"value\"]').attr('name', template.getName());\n      }\n    }\n  }, {\n    key: \"getIndexFor\",\n    value: function getIndexFor(element) {\n      var template = element.data('array-template');\n      var row = element.closest('[data-grav-array-type=\"row\"]');\n      return template.container.find(\"\".concat(template.isValueOnly() ? '> div ' : '', \" > [data-grav-array-type=\\\"row\\\"]\")).index(row);\n    }\n  }, {\n    key: \"_setTemplate\",\n    value: function _setTemplate(element) {\n      if (!element.data('array-template')) {\n        element.data('array-template', new Template(element.closest('[data-grav-array-name]')));\n      }\n    }\n  }, {\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target\n    /* , record, instance */\n    ) {\n      var _this3 = this;\n\n      var arrays = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('[data-grav-field=\"array\"]');\n\n      if (!arrays.length) {\n        return;\n      }\n\n      arrays.each(function (index, list) {\n        list = jquery__WEBPACK_IMPORTED_MODULE_0___default()(list);\n\n        if (!~_this3.arrays.index(list)) {\n          _this3.addArray(list);\n        }\n      });\n    }\n  }]);\n\n  return ArrayField;\n}();\n\n\nvar Instance = new ArrayField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/array.js\n");

/***/ }),

/***/ "./app/forms/fields/collections.js":
/*!*****************************************!*\
  !*** ./app/forms/fields/collections.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CollectionsField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sortablejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sortablejs */ \"./node_modules/sortablejs/modular/sortable.esm.js\");\n/* harmony import */ var _utils_jquery_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/jquery-utils */ \"./app/utils/jquery-utils.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar CollectionsField = /*#__PURE__*/function () {\n  function CollectionsField() {\n    var _this = this;\n\n    _classCallCheck(this, CollectionsField);\n\n    this.lists = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-type=\"collection\"]').each(function (index, list) {\n      return _this.addList(list);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('mutation._grav', this._onAddedNodes.bind(this));\n  }\n\n  _createClass(CollectionsField, [{\n    key: \"addList\",\n    value: function addList(list) {\n      var _this2 = this;\n\n      list = jquery__WEBPACK_IMPORTED_MODULE_0___default()(list);\n      this.lists = this.lists.add(list);\n      list.on('click', '> .collection-actions [data-action=\"add\"]', function (event) {\n        return _this2.addItem(event);\n      });\n      list.on('click', '> ul > li > .item-actions [data-action=\"delete\"]', function (event) {\n        return _this2.removeItem(event);\n      });\n      list.on('click', '> ul > li > .item-actions [data-action=\"collapse\"]', function (event) {\n        return _this2.collapseItem(event);\n      });\n      list.on('click', '> ul > li > .item-actions [data-action=\"expand\"]', function (event) {\n        return _this2.expandItem(event);\n      });\n      list.on('click', '> .collection-actions [data-action-sort=\"date\"]', function (event) {\n        return _this2.sortItems(event);\n      });\n      list.on('click', '> .collection-actions [data-action=\"collapse_all\"]', function (event) {\n        return _this2.collapseItems(event);\n      });\n      list.on('click', '> .collection-actions [data-action=\"expand_all\"]', function (event) {\n        return _this2.expandItems(event);\n      });\n      list.on('input change', '[data-key-observe]', function (event) {\n        return _this2.observeKey(event);\n      });\n      list.find('[data-collection-holder]').each(function (index, container) {\n        container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n\n        if (container.data('collection-sort') || container[0].hasAttribute('data-collection-nosort')) {\n          return;\n        }\n\n        container.data('collection-sort', new sortablejs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](container.get(0), {\n          forceFallback: false,\n          handle: '.collection-sort',\n          animation: 150,\n          onUpdate: function onUpdate() {\n            return _this2.reindex(container);\n          }\n        }));\n      });\n\n      this._updateActionsStateBasedOnMinMax(list);\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem(event) {\n      var button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var position = button.data('action-add') || 'bottom';\n      var list = jquery__WEBPACK_IMPORTED_MODULE_0___default()(button.closest('[data-type=\"collection\"]'));\n      var template = jquery__WEBPACK_IMPORTED_MODULE_0___default()(list.find('> [data-collection-template=\"new\"]').data('collection-template-html'));\n\n      this._updateActionsStateBasedOnMinMax(list);\n\n      var items = list.closest('[data-type=\"collection\"]').find('> ul > [data-collection-item]');\n      var maxItems = list.data('max');\n\n      if (typeof maxItems !== 'undefined' && items.length >= maxItems) {\n        return;\n      }\n\n      list.find('> [data-collection-holder]')[position === 'top' ? 'prepend' : 'append'](template);\n      this.reindex(list);\n      items = list.closest('[data-type=\"collection\"]').find('> ul > [data-collection-item]');\n      var topAction = list.closest('[data-type=\"collection\"]').find('[data-action-add=\"top\"]');\n      var sortAction = list.closest('[data-type=\"collection\"]').find('[data-action=\"sort\"]');\n\n      if (items.length) {\n        if (topAction.length) {\n          topAction.parent().removeClass('hidden');\n        }\n\n        if (sortAction.length && items.length > 1) {\n          sortAction.removeClass('hidden');\n        }\n      } // refresh toggleables in a list\n\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-field=\"toggleable\"] input[type=\"checkbox\"]').trigger('change');\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(event) {\n      var button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var item = button.closest('[data-collection-item]');\n      var list = jquery__WEBPACK_IMPORTED_MODULE_0___default()(button.closest('[data-type=\"collection\"]'));\n      var items = list.closest('[data-type=\"collection\"]').find('> ul > [data-collection-item]');\n      var minItems = list.data('min');\n\n      if (typeof minItems !== 'undefined' && items.length <= minItems) {\n        return;\n      }\n\n      item.remove();\n      this.reindex(list);\n      items = list.closest('[data-type=\"collection\"]').find('> ul > [data-collection-item]');\n      var topAction = list.closest('[data-type=\"collection\"]').find('[data-action-add=\"top\"]');\n      var sortAction = list.closest('[data-type=\"collection\"]').find('[data-action=\"sort\"]');\n\n      if (!items.length) {\n        if (topAction.length) {\n          topAction.parent().addClass('hidden');\n        }\n      }\n\n      if (sortAction.length && items.length <= 1) {\n        sortAction.addClass('hidden');\n      }\n\n      this._updateActionsStateBasedOnMinMax(list);\n    }\n  }, {\n    key: \"collapseItems\",\n    value: function collapseItems(event) {\n      var button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var items = jquery__WEBPACK_IMPORTED_MODULE_0___default()(button.closest('[data-type=\"collection\"]')).find('> ul > [data-collection-item] > .item-actions [data-action=\"collapse\"]');\n      items.click();\n    }\n  }, {\n    key: \"collapseItem\",\n    value: function collapseItem(event) {\n      var button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var item = button.closest('[data-collection-item]');\n      button.attr('data-action', 'expand').removeClass('fa-chevron-circle-down').addClass('fa-chevron-circle-right');\n      item.addClass('collection-collapsed');\n    }\n  }, {\n    key: \"expandItems\",\n    value: function expandItems(event) {\n      var button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var items = jquery__WEBPACK_IMPORTED_MODULE_0___default()(button.closest('[data-type=\"collection\"]')).find('> ul > [data-collection-item] > .item-actions [data-action=\"expand\"]');\n      items.click();\n    }\n  }, {\n    key: \"expandItem\",\n    value: function expandItem(event) {\n      var button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var item = button.closest('[data-collection-item]');\n      button.attr('data-action', 'collapse').removeClass('fa-chevron-circle-right').addClass('fa-chevron-circle-down');\n      item.removeClass('collection-collapsed');\n    }\n  }, {\n    key: \"sortItems\",\n    value: function sortItems(event) {\n      var button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var sortby = button.data('action-sort');\n      var sortby_dir = button.data('action-sort-dir') || 'asc';\n      var list = jquery__WEBPACK_IMPORTED_MODULE_0___default()(button.closest('[data-type=\"collection\"]'));\n      var items = list.closest('[data-type=\"collection\"]').find('> ul > [data-collection-item]');\n      items.sort(function (a, b) {\n        var A = jquery__WEBPACK_IMPORTED_MODULE_0___default()(a).find('[name$=\"[' + sortby + ']\"]');\n        var B = jquery__WEBPACK_IMPORTED_MODULE_0___default()(b).find('[name$=\"[' + sortby + ']\"]');\n        var sort;\n\n        if (sortby_dir === 'asc') {\n          sort = A.val() < B.val() ? -1 : A.val() > B.val() ? 1 : 0;\n        } else {\n          sort = A.val() > B.val() ? -1 : A.val() < B.val() ? 1 : 0;\n        }\n\n        return sort;\n      }).each(function (_, container) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(container).parent().append(container);\n      });\n      this.reindex(list);\n    }\n  }, {\n    key: \"observeKey\",\n    value: function observeKey(event) {\n      var input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n      var value = input.val();\n      var item = input.closest('[data-collection-key]');\n      item.data('collection-key-backup', item.data('collection-key')).data('collection-key', value);\n      this.reindex(null, item);\n    }\n  }, {\n    key: \"reindex\",\n    value: function reindex(list, items) {\n      items = items || jquery__WEBPACK_IMPORTED_MODULE_0___default()(list).closest('[data-type=\"collection\"]').find('> ul > [data-collection-item]');\n      items.each(function (index, item) {\n        item = jquery__WEBPACK_IMPORTED_MODULE_0___default()(item);\n        var observed = item.find('[data-key-observe]');\n        var observedValue = observed.val();\n        var hasCustomKey = observed.length;\n        var currentKey = item.data('collection-key-backup');\n        item.attr('data-collection-key', hasCustomKey ? observedValue : index);\n        ['name', 'data-grav-field-name', 'for', 'id', 'data-grav-file-settings', 'data-file-post-add', 'data-file-post-remove', 'data-grav-array-name'].forEach(function (prop) {\n          item.find('[' + prop + '], [_' + prop + ']').each(function () {\n            var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n            var indexes = [];\n            var array_index = null;\n            var regexps = [new RegExp('\\\\[(\\\\d+|\\\\*|' + currentKey + ')\\\\]', 'g'), new RegExp('\\\\.(\\\\d+|\\\\*|' + currentKey + ')\\\\.', 'g')]; // special case to preserve array field index keys\n\n            if (prop === 'name' && element.data('gravArrayType')) {\n              var match_index = element.attr(prop).match(/\\[[0-9]{1,}\\]$/);\n              var pattern = element[0].closest('[data-grav-array-name]').dataset.gravArrayName;\n\n              if (match_index && pattern) {\n                array_index = match_index[0];\n                element.attr(prop, \"\".concat(pattern).concat(match_index[0]));\n                return;\n              }\n            }\n\n            if (hasCustomKey && !observedValue) {\n              element.attr(\"_\".concat(prop), element.attr(prop));\n              element.attr(prop, null);\n              return;\n            }\n\n            if (element.attr(\"_\".concat(prop))) {\n              element.attr(prop, element.attr(\"_\".concat(prop)));\n              element.attr(\"_\".concat(prop), null);\n            }\n\n            element.parents('[data-collection-key]').map(function (idx, parent) {\n              return indexes.push(jquery__WEBPACK_IMPORTED_MODULE_0___default()(parent).attr('data-collection-key'));\n            });\n            indexes.reverse();\n            var matchedKey = currentKey;\n            var replaced = element.attr(prop).replace(regexps[0], function\n              /* str, p1, offset */\n            () {\n              var extras = '';\n\n              if (array_index) {\n                extras = array_index;\n                console.log(indexes, extras);\n              }\n\n              matchedKey = indexes.shift() || matchedKey;\n              return \"[\".concat(matchedKey, \"]\").concat(extras);\n            });\n            replaced = replaced.replace(regexps[1], function\n              /* str, p1, offset */\n            () {\n              matchedKey = indexes.shift() || matchedKey;\n              return \".\".concat(matchedKey, \".\");\n            });\n            element.attr(prop, replaced);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target\n    /* , record, instance */\n    ) {\n      var _this3 = this;\n\n      var collections = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('[data-type=\"collection\"]');\n\n      if (!collections.length) {\n        return;\n      }\n\n      collections.each(function (index, collection) {\n        collection = jquery__WEBPACK_IMPORTED_MODULE_0___default()(collection);\n\n        if (!~_this3.lists.index(collection)) {\n          _this3.addList(collection);\n        }\n      });\n    }\n  }, {\n    key: \"_updateActionsStateBasedOnMinMax\",\n    value: function _updateActionsStateBasedOnMinMax(list) {\n      var items = list.closest('[data-type=\"collection\"]').find('> ul > [data-collection-item]');\n      var minItems = list.data('min');\n      var maxItems = list.data('max');\n      list.find('> .collection-actions [data-action=\"add\"]').attr('disabled', false);\n      list.find('> ul > li > .item-actions [data-action=\"delete\"]').attr('disabled', false);\n\n      if (typeof minItems !== 'undefined' && items.length <= minItems) {\n        list.find('> ul > li > .item-actions [data-action=\"delete\"]').attr('disabled', true);\n      }\n\n      if (typeof maxItems !== 'undefined' && items.length >= maxItems) {\n        list.find('> .collection-actions [data-action=\"add\"]').attr('disabled', true);\n      }\n    }\n  }]);\n\n  return CollectionsField;\n}();\n\n\nvar Instance = new CollectionsField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/collections.js\n");

/***/ }),

/***/ "./app/forms/fields/colorpicker.js":
/*!*****************************************!*\
  !*** ./app/forms/fields/colorpicker.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ColorpickerField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mout_math_clamp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mout/math/clamp */ \"./node_modules/mout/math/clamp.js\");\n/* harmony import */ var mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mout_math_clamp__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mout_function_bind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mout/function/bind */ \"./node_modules/mout/function/bind.js\");\n/* harmony import */ var mout_function_bind__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mout_function_bind__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/colors */ \"./app/utils/colors.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\nvar body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\nvar MOUSEDOWN = 'mousedown touchstart MSPointerDown pointerdown';\nvar MOUSEMOVE = 'mousemove touchmove MSPointerMove pointermove';\nvar MOUSEUP = 'mouseup touchend MSPointerUp pointerup';\nvar FOCUSIN = isFirefox ? 'focus' : 'focusin';\n\nvar ColorpickerField = /*#__PURE__*/function () {\n  function ColorpickerField(selector) {\n    var _this = this;\n\n    _classCallCheck(this, ColorpickerField);\n\n    this.selector = selector;\n    this.field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.selector);\n    this.options = Object.assign({}, this.field.data('grav-colorpicker'));\n    this.built = false;\n    this.attach();\n\n    if (this.options.update) {\n      this.field.on('change._grav_colorpicker', function (event, field, hex, opacity) {\n        var backgroundColor = hex;\n        var rgb = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hex2rgb)(hex);\n\n        if (opacity < 1) {\n          backgroundColor = 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + opacity + ')';\n        }\n\n        var target = field.closest(_this.options.update);\n\n        if (!target.length) {\n          target = field.siblings(_this.options.update);\n        }\n\n        if (!target.length) {\n          target = field.parent('.g-colorpicker').find(_this.options.update);\n        }\n\n        target.css({\n          backgroundColor: backgroundColor\n        });\n      });\n    }\n  }\n\n  _createClass(ColorpickerField, [{\n    key: \"attach\",\n    value: function attach() {\n      var _this2 = this;\n\n      body.on(FOCUSIN, this.selector, function (event) {\n        return _this2.show(event, event.currentTarget);\n      });\n      body.on(MOUSEDOWN, this.selector + ' .g-colorpicker, ' + this.selector + ' .g-colorpicker i', this.bound('iconClick'));\n      body.on('keydown', this.selector, function (event) {\n        switch (event.keyCode) {\n          case 9:\n            // tab\n            _this2.hide();\n\n            break;\n\n          case 13: // enter\n\n          case 27:\n            // esc\n            _this2.hide();\n\n            event.currentTarget.blur();\n            break;\n        }\n\n        return true;\n      }); // Update on keyup\n\n      body.on('keyup', this.selector, function (event) {\n        _this2.updateFromInput(true, event.currentTarget);\n\n        return true;\n      }); // Update on paste\n\n      body.on('paste', this.selector, function (event) {\n        setTimeout(function () {\n          return _this2.updateFromInput(true, event.currentTarget);\n        }, 1);\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show(event, target) {\n      target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target);\n\n      if (!this.built) {\n        this.build();\n      }\n\n      this.element = target;\n      this.reposition();\n      this.wrapper.addClass('cp-visible');\n      this.updateFromInput();\n      this.wrapper.on(MOUSEDOWN, '.cp-grid, .cp-slider, .cp-opacity-slider', this.bound('bodyDown'));\n      body.on(MOUSEMOVE, this.bound('bodyMove'));\n      body.on(MOUSEDOWN, this.bound('bodyClick'));\n      body.on(MOUSEUP, this.bound('targetReset'));\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#admin-main > .content-wrapper').on('scroll', this.bound('reposition'));\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.built) {\n        return;\n      }\n\n      this.wrapper.removeClass('cp-visible');\n      this.wrapper.undelegate(MOUSEDOWN, '.cp-grid, .cp-slider, .cp-opacity-slider', this.bound('bodyDown'));\n      body.off(MOUSEMOVE, this.bound('bodyMove'));\n      body.off(MOUSEDOWN, this.bound('bodyClick'));\n      body.off(MOUSEUP, this.bound('targetReset'));\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#admin-main > .content-wrapper').on('scroll', this.bound('reposition'));\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      var _this3 = this;\n\n      this.wrapper = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-wrapper cp-with-opacity cp-mode-hue\" />');\n      this.slider = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-slider cp-sprite\" />').appendTo(this.wrapper).append(jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-picker\" />'));\n      this.opacitySlider = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-opacity-slider cp-sprite\" />').appendTo(this.wrapper).append(jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-picker\" />'));\n      this.grid = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-grid cp-sprite\" />').appendTo(this.wrapper).append(jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-grid-inner\" />')).append(jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-picker\" />'));\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />').appendTo(this.grid.find('.cp-picker'));\n      var tabs = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-tabs\" />').appendTo(this.wrapper);\n      this.tabs = {\n        hue: jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-tab-hue active\" />').text('HUE').appendTo(tabs),\n        brightness: jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-tab-brightness\" />').text('BRI').appendTo(tabs),\n        saturation: jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-tab-saturation\" />').text('SAT').appendTo(tabs),\n        wheel: jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-tab-wheel\" />').text('WHEEL').appendTo(tabs),\n        transparent: jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"cp-tab-transp\" />').text('TRANSPARENT').appendTo(tabs)\n      };\n      tabs.on(MOUSEDOWN, '> div', function (event) {\n        var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n\n        if (element.is(_this3.tabs.transparent)) {\n          var sliderHeight = _this3.opacitySlider.height();\n\n          _this3.opacity = 0;\n\n          _this3.opacitySlider.find('.cp-picker').css({\n            'top': mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(sliderHeight - sliderHeight * _this3.opacity, 0, sliderHeight)\n          });\n\n          _this3.move(_this3.opacitySlider, {\n            manualOpacity: true\n          });\n\n          return;\n        }\n\n        var active = tabs.find('.active');\n        var mode = active.attr('class').replace(/\\s|active|cp-tab-/g, '');\n        var newMode = element.attr('class').replace(/\\s|active|cp-tab-/g, '');\n\n        _this3.wrapper.removeClass('cp-mode-' + mode).addClass('cp-mode-' + newMode);\n\n        active.removeClass('active');\n        element.addClass('active');\n        _this3.mode = newMode;\n\n        _this3.updateFromInput();\n      });\n      this.wrapper.appendTo('.content-wrapper');\n      this.built = true;\n      this.mode = 'hue';\n    }\n  }, {\n    key: \"reposition\",\n    value: function reposition() {\n      var ct = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.content-wrapper')[0];\n      var offset = this.element[0].getBoundingClientRect();\n      var ctOffset = ct.getBoundingClientRect();\n      var delta = {\n        x: 0,\n        y: 0\n      };\n\n      if (this.options.offset) {\n        delta.x = this.options.offset.x || 0;\n        delta.y = this.options.offset.y || 0;\n      }\n\n      this.wrapper.css({\n        top: offset.top + offset.height + ct.scrollTop - ctOffset.top + delta.y,\n        left: offset.left + ct.scrollLeft - ctOffset.left + delta.x\n      });\n    }\n  }, {\n    key: \"iconClick\",\n    value: function iconClick(event) {\n      if (this.wrapper && this.wrapper.hasClass('cp-visible')) {\n        return true;\n      }\n\n      event && event.preventDefault();\n      var input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).find('input');\n      setTimeout(function () {\n        return input.focus();\n      }, 50);\n    }\n  }, {\n    key: \"bodyMove\",\n    value: function bodyMove(event) {\n      event && event.preventDefault();\n\n      if (this.target) {\n        this.move(this.target, event);\n      }\n    }\n  }, {\n    key: \"bodyClick\",\n    value: function bodyClick(event) {\n      var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n\n      if (!target.closest('.cp-wrapper').length && !target.is(this.selector)) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"bodyDown\",\n    value: function bodyDown(event) {\n      event && event.preventDefault();\n      this.target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      this.move(this.target, event, true);\n    }\n  }, {\n    key: \"targetReset\",\n    value: function targetReset(event) {\n      event && event.preventDefault();\n      this.target = null;\n    }\n  }, {\n    key: \"move\",\n    value: function move(target, event) {\n      var input = this.element;\n      var picker = target.find('.cp-picker');\n      var clientRect = target[0].getBoundingClientRect();\n      var offsetX = clientRect.left + window.scrollX;\n      var offsetY = clientRect.top + window.scrollY;\n      var x = Math.round((event ? event.pageX : 0) - offsetX);\n      var y = Math.round((event ? event.pageY : 0) - offsetY);\n      var wx;\n      var wy;\n      var r;\n      var phi; // Touch support\n\n      var touchEvents = event.changedTouches || event.originalEvent && event.originalEvent.changedTouches;\n\n      if (event && touchEvents) {\n        x = (touchEvents ? touchEvents[0].pageX : 0) - offsetX;\n        y = (touchEvents ? touchEvents[0].pageY : 0) - offsetY;\n      }\n\n      if (event && event.manualOpacity) {\n        y = clientRect.height;\n      } // Constrain picker to its container\n\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > clientRect.width) x = clientRect.width;\n      if (y > clientRect.height) y = clientRect.height; // Constrain color wheel values to the wheel\n\n      if (target.parent('.cp-mode-wheel').length && picker.parent('.cp-grid').length) {\n        wx = 75 - x;\n        wy = 75 - y;\n        r = Math.sqrt(wx * wx + wy * wy);\n        phi = Math.atan2(wy, wx);\n        if (phi < 0) phi += Math.PI * 2;\n\n        if (r > 75) {\n          x = 75 - 75 * Math.cos(phi);\n          y = 75 - 75 * Math.sin(phi);\n        }\n\n        x = Math.round(x);\n        y = Math.round(y);\n      } // Move the picker\n\n\n      if (target.hasClass('cp-grid')) {\n        picker.css({\n          top: y,\n          left: x\n        });\n        this.updateFromPicker(input, target);\n      } else {\n        picker.css({\n          top: y\n        });\n        this.updateFromPicker(input, target);\n      }\n    }\n  }, {\n    key: \"updateFromInput\",\n    value: function updateFromInput(dontFireEvent, element) {\n      element = element ? jquery__WEBPACK_IMPORTED_MODULE_0___default()(element) : this.element;\n      var value = element.val();\n      var opacity = value.replace(/\\s/g, '').match(/^rgba?\\([0-9]{1,3},[0-9]{1,3},[0-9]{1,3},(.+)\\)/);\n      var hex;\n      var hsb;\n      value = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.rgbstr2hex)(value) || value;\n      opacity = opacity ? mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(opacity[1], 0, 1) : 1;\n\n      if (!(hex = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.parseHex)(value))) {\n        hex = '#ffffff';\n      }\n\n      hsb = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hex2hsb)(hex);\n\n      if (this.built) {\n        // opacity\n        this.opacity = opacity;\n        var sliderHeight = this.opacitySlider.height();\n        this.opacitySlider.find('.cp-picker').css({\n          'top': mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(sliderHeight - sliderHeight * this.opacity, 0, sliderHeight)\n        }); // bg color\n\n        var gridHeight = this.grid.height();\n        var gridWidth = this.grid.width();\n        var r;\n        var phi;\n        var x;\n        var y;\n        sliderHeight = this.slider.height();\n\n        switch (this.mode) {\n          case 'wheel':\n            // Set grid position\n            r = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(Math.ceil(hsb.s * 0.75), 0, gridHeight / 2);\n            phi = hsb.h * Math.PI / 180;\n            x = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(75 - Math.cos(phi) * r, 0, gridWidth);\n            y = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(75 - Math.sin(phi) * r, 0, gridHeight);\n            this.grid.css({\n              backgroundColor: 'transparent'\n            }).find('.cp-picker').css({\n              top: y,\n              left: x\n            }); // Set slider position\n\n            y = 150 - hsb.b / (100 / gridHeight);\n            if (hex === '') y = 0;\n            this.slider.find('.cp-picker').css({\n              top: y\n            }); // Update panel color\n\n            this.slider.css({\n              backgroundColor: (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n                h: hsb.h,\n                s: hsb.s,\n                b: 100\n              })\n            });\n            break;\n\n          case 'saturation':\n            // Set grid position\n            x = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(5 * hsb.h / 12, 0, 150);\n            y = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(gridHeight - Math.ceil(hsb.b / (100 / gridHeight)), 0, gridHeight);\n            this.grid.find('.cp-picker').css({\n              top: y,\n              left: x\n            }); // Set slider position\n\n            y = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(sliderHeight - hsb.s * (sliderHeight / 100), 0, sliderHeight);\n            this.slider.find('.cp-picker').css({\n              top: y\n            }); // Update UI\n\n            this.slider.css({\n              backgroundColor: (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n                h: hsb.h,\n                s: 100,\n                b: hsb.b\n              })\n            });\n            this.grid.find('.cp-grid-inner').css({\n              opacity: hsb.s / 100\n            });\n            break;\n\n          case 'brightness':\n            // Set grid position\n            x = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(5 * hsb.h / 12, 0, 150);\n            y = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(gridHeight - Math.ceil(hsb.s / (100 / gridHeight)), 0, gridHeight);\n            this.grid.find('.cp-picker').css({\n              top: y,\n              left: x\n            }); // Set slider position\n\n            y = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(sliderHeight - hsb.b * (sliderHeight / 100), 0, sliderHeight);\n            this.slider.find('.cp-picker').css({\n              top: y\n            }); // Update UI\n\n            this.slider.css({\n              backgroundColor: (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n                h: hsb.h,\n                s: hsb.s,\n                b: 100\n              })\n            });\n            this.grid.find('.cp-grid-inner').css({\n              opacity: 1 - hsb.b / 100\n            });\n            break;\n\n          case 'hue':\n          default:\n            // Set grid position\n            x = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(Math.ceil(hsb.s / (100 / gridWidth)), 0, gridWidth);\n            y = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(gridHeight - Math.ceil(hsb.b / (100 / gridHeight)), 0, gridHeight);\n            this.grid.find('.cp-picker').css({\n              top: y,\n              left: x\n            }); // Set slider position\n\n            y = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(sliderHeight - hsb.h / (360 / sliderHeight), 0, sliderHeight);\n            this.slider.find('.cp-picker').css({\n              top: y\n            }); // Update panel color\n\n            this.grid.css({\n              backgroundColor: (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n                h: hsb.h,\n                s: 100,\n                b: 100\n              })\n            });\n            break;\n        }\n      }\n\n      if (!dontFireEvent) {\n        element.val(this.getValue(hex));\n      }\n\n      (this.element || element).trigger('change._grav_colorpicker', [element, hex, opacity]);\n    }\n  }, {\n    key: \"updateFromPicker\",\n    value: function updateFromPicker(input, target) {\n      var getCoords = function getCoords(picker, container) {\n        var left, top;\n        if (!picker.length || !container) return null;\n        left = picker[0].getBoundingClientRect().left;\n        top = picker[0].getBoundingClientRect().top;\n        return {\n          x: left - container[0].getBoundingClientRect().left + picker[0].offsetWidth / 2,\n          y: top - container[0].getBoundingClientRect().top + picker[0].offsetHeight / 2\n        };\n      };\n\n      var hex;\n      var hue;\n      var saturation;\n      var brightness;\n      var x;\n      var y;\n      var r;\n      var phi; // Panel objects\n\n      var grid = this.wrapper.find('.cp-grid');\n      var slider = this.wrapper.find('.cp-slider');\n      var opacitySlider = this.wrapper.find('.cp-opacity-slider'); // Picker objects\n\n      var gridPicker = grid.find('.cp-picker');\n      var sliderPicker = slider.find('.cp-picker');\n      var opacityPicker = opacitySlider.find('.cp-picker'); // Picker positions\n\n      var gridPos = getCoords(gridPicker, grid);\n      var sliderPos = getCoords(sliderPicker, slider);\n      var opacityPos = getCoords(opacityPicker, opacitySlider); // Sizes\n\n      var gridWidth = grid[0].getBoundingClientRect().width;\n      var gridHeight = grid[0].getBoundingClientRect().height;\n      var sliderHeight = slider[0].getBoundingClientRect().height;\n      var opacitySliderHeight = opacitySlider[0].getBoundingClientRect().height;\n      var value = this.element.val();\n      value = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.rgbstr2hex)(value) || value;\n\n      if (!(hex = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.parseHex)(value))) {\n        hex = '#ffffff';\n      } // Handle colors\n\n\n      if (target.hasClass('cp-grid') || target.hasClass('cp-slider')) {\n        // Determine HSB values\n        switch (this.mode) {\n          case 'wheel':\n            // Calculate hue, saturation, and brightness\n            x = gridWidth / 2 - gridPos.x;\n            y = gridHeight / 2 - gridPos.y;\n            r = Math.sqrt(x * x + y * y);\n            phi = Math.atan2(y, x);\n            if (phi < 0) phi += Math.PI * 2;\n\n            if (r > 75) {\n              r = 75;\n              gridPos.x = 69 - 75 * Math.cos(phi);\n              gridPos.y = 69 - 75 * Math.sin(phi);\n            }\n\n            saturation = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(r / 0.75, 0, 100);\n            hue = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(phi * 180 / Math.PI, 0, 360);\n            brightness = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(100 - Math.floor(sliderPos.y * (100 / sliderHeight)), 0, 100);\n            hex = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n              h: hue,\n              s: saturation,\n              b: brightness\n            }); // Update UI\n\n            slider.css({\n              backgroundColor: (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n                h: hue,\n                s: saturation,\n                b: 100\n              })\n            });\n            break;\n\n          case 'saturation':\n            // Calculate hue, saturation, and brightness\n            hue = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(parseInt(gridPos.x * (360 / gridWidth), 10), 0, 360);\n            saturation = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(100 - Math.floor(sliderPos.y * (100 / sliderHeight)), 0, 100);\n            brightness = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(100 - Math.floor(gridPos.y * (100 / gridHeight)), 0, 100);\n            hex = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n              h: hue,\n              s: saturation,\n              b: brightness\n            }); // Update UI\n\n            slider.css({\n              backgroundColor: (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n                h: hue,\n                s: 100,\n                b: brightness\n              })\n            });\n            grid.find('.cp-grid-inner').css({\n              opacity: saturation / 100\n            });\n            break;\n\n          case 'brightness':\n            // Calculate hue, saturation, and brightness\n            hue = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(parseInt(gridPos.x * (360 / gridWidth), 10), 0, 360);\n            saturation = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(100 - Math.floor(gridPos.y * (100 / gridHeight)), 0, 100);\n            brightness = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(100 - Math.floor(sliderPos.y * (100 / sliderHeight)), 0, 100);\n            hex = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n              h: hue,\n              s: saturation,\n              b: brightness\n            }); // Update UI\n\n            slider.css({\n              backgroundColor: (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n                h: hue,\n                s: saturation,\n                b: 100\n              })\n            });\n            grid.find('.cp-grid-inner').css({\n              opacity: 1 - brightness / 100\n            });\n            break;\n\n          default:\n            // Calculate hue, saturation, and brightness\n            hue = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(360 - parseInt(sliderPos.y * (360 / sliderHeight), 10), 0, 360);\n            saturation = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(Math.floor(gridPos.x * (100 / gridWidth)), 0, 100);\n            brightness = mout_math_clamp__WEBPACK_IMPORTED_MODULE_1___default()(100 - Math.floor(gridPos.y * (100 / gridHeight)), 0, 100);\n            hex = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n              h: hue,\n              s: saturation,\n              b: brightness\n            }); // Update UI\n\n            grid.css({\n              backgroundColor: (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hsb2hex)({\n                h: hue,\n                s: 100,\n                b: 100\n              })\n            });\n            break;\n        }\n      } // Handle opacity\n\n\n      if (target.hasClass('cp-opacity-slider')) {\n        this.opacity = parseFloat(1 - opacityPos.y / opacitySliderHeight).toFixed(2);\n      } // Adjust case\n\n\n      input.val(this.getValue(hex)); // Handle change event\n\n      this.element.trigger('change._grav_colorpicker', [this.element, hex, this.opacity]);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(hex) {\n      if (this.opacity === 1) {\n        return hex;\n      }\n\n      var rgb = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hex2rgb)(hex);\n      return 'rgba(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ', ' + this.opacity + ')';\n    }\n  }, {\n    key: \"bound\",\n    value: function bound(name) {\n      var bound = this._bound || (this._bound = {});\n      return bound[name] || (bound[name] = mout_function_bind__WEBPACK_IMPORTED_MODULE_2___default()(this[name], this));\n    }\n  }]);\n\n  return ColorpickerField;\n}();\n\n\nvar Instance = new ColorpickerField('[data-grav-colorpicker]');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/colorpicker.js\n");

/***/ }),

/***/ "./app/forms/fields/cron.js":
/*!**********************************!*\
  !*** ./app/forms/fields/cron.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CronField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_cron_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/cron-ui */ \"./app/utils/cron-ui.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_2__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar CronField = /*#__PURE__*/function () {\n  function CronField() {\n    var _this = this;\n\n    _classCallCheck(this, CronField);\n\n    this.items = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-field=\"cron\"]').each(function (index, cron) {\n      return _this.addCron(cron);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('mutation._grav', this._onAddedNodes.bind(this));\n  }\n\n  _createClass(CronField, [{\n    key: \"addCron\",\n    value: function addCron(cron) {\n      cron = jquery__WEBPACK_IMPORTED_MODULE_0___default()(cron);\n      this.items = this.items.add(cron);\n      cron.find('.cron-selector').each(function (index, container) {\n        container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n        var input = container.closest('[data-grav-field]').find('input');\n        container.jqCron({\n          numeric_zero_pad: true,\n          enabled_minute: true,\n          multiple_dom: true,\n          multiple_month: true,\n          multiple_mins: true,\n          multiple_dow: true,\n          multiple_time_hours: true,\n          multiple_time_minutes: true,\n          default_period: 'hour',\n          default_value: input.val() || '* * * * *',\n          no_reset_button: false,\n          bind_to: input,\n          bind_method: {\n            set: function set($element, value) {\n              $element.val(value);\n            }\n          },\n          texts: {\n            en: {\n              empty: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.EVERY\"],\n              empty_minutes: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.EVERY\"],\n              empty_time_hours: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.EVERY_HOUR\"],\n              empty_time_minutes: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.EVERY_MINUTE\"],\n              empty_day_of_week: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.EVERY_DAY_OF_WEEK\"],\n              empty_day_of_month: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.EVERY_DAY_OF_MONTH\"],\n              empty_month: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.EVERY_MONTH\"],\n              name_minute: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"NICETIME.MINUTE\"],\n              name_hour: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"NICETIME.HOUR\"],\n              name_day: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"NICETIME.DAY\"],\n              name_week: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"NICETIME.WEEK\"],\n              name_month: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"NICETIME.MONTH\"],\n              name_year: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"NICETIME.YEAR\"],\n              text_period: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.TEXT_PERIOD\"],\n              text_mins: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.TEXT_MINS\"],\n              text_time: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.TEXT_TIME\"],\n              text_dow: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.TEXT_DOW\"],\n              text_month: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.TEXT_MONTH\"],\n              text_dom: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.TEXT_DOM\"],\n              error1: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.ERROR1\"],\n              error2: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.ERROR2\"],\n              error3: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.ERROR3\"],\n              error4: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE[\"CRON.ERROR4\"],\n              weekdays: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE.DAYS_OF_THE_WEEK,\n              months: grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.GRAV_CORE.MONTHS_OF_THE_YEAR\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target\n    /* , record, instance */\n    ) {\n      var _this2 = this;\n\n      var crons = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('[data-grav-field=\"cron\"]');\n\n      if (!crons.length) {\n        return;\n      }\n\n      crons.each(function (index, list) {\n        list = jquery__WEBPACK_IMPORTED_MODULE_0___default()(list);\n\n        if (!~_this2.items.index(list)) {\n          _this2.addCron(list);\n        }\n      });\n    }\n  }]);\n\n  return CronField;\n}();\n\n\nvar Instance = new CronField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/cron.js\n");

/***/ }),

/***/ "./app/forms/fields/datetime.js":
/*!**************************************!*\
  !*** ./app/forms/fields/datetime.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DateTimeField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_bootstrap_datetimepicker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/bootstrap-datetimepicker */ \"./app/utils/bootstrap-datetimepicker.js\");\n/* harmony import */ var _utils_bootstrap_datetimepicker__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_utils_bootstrap_datetimepicker__WEBPACK_IMPORTED_MODULE_2__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar DateTimeField = /*#__PURE__*/function () {\n  function DateTimeField(options) {\n    var _this = this;\n\n    _classCallCheck(this, DateTimeField);\n\n    this.items = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n    this.options = Object.assign({}, this.defaults, options);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-datetime]').each(function (index, field) {\n      return _this.addItem(field);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('mutation._grav', this._onAddedNodes.bind(this));\n  }\n\n  _createClass(DateTimeField, [{\n    key: \"defaults\",\n    get: function get() {\n      return {\n        showTodayButton: true,\n        showClear: true,\n        locale: grav_config__WEBPACK_IMPORTED_MODULE_1__.config.language || 'en',\n        icons: {\n          time: 'fa fa-clock-o',\n          date: 'fa fa-calendar-o',\n          up: 'fa fa-chevron-up',\n          down: 'fa fa-chevron-down',\n          previous: 'fa fa-chevron-left',\n          next: 'fa fa-chevron-right',\n          today: 'fa fa-bullseye',\n          clear: 'fa fa-trash-o',\n          close: 'fa fa-remove'\n        }\n      };\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem(list) {\n      list = jquery__WEBPACK_IMPORTED_MODULE_0___default()(list);\n      this.items = this.items.add(list);\n\n      if (list.data('DateTimePicker')) {\n        return;\n      }\n\n      var options = Object.assign({}, this.options, list.data('grav-datetime') || {});\n      list.datetimepicker(options).on('dp.show dp.update', this._disableDecades);\n      list.siblings('.field-icons').on('click', function () {\n        return list.mousedown().focus();\n      });\n    }\n  }, {\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target\n    /* , record, instance */\n    ) {\n      var _this2 = this;\n\n      var fields = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('[data-grav-datetime]');\n\n      if (!fields.length) {\n        return;\n      }\n\n      fields.each(function (index, field) {\n        field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(field);\n\n        if (!~_this2.items.index(field)) {\n          _this2.addItem(field);\n        }\n      });\n    }\n  }, {\n    key: \"_disableDecades\",\n    value: function _disableDecades() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.datepicker-years .picker-switch').removeAttr('title').on('click', function (e) {\n        return e.stopPropagation();\n      });\n    }\n  }]);\n\n  return DateTimeField;\n}();\n\n\nvar Instance = new DateTimeField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZm9ybXMvZmllbGRzL2RhdGV0aW1lLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBOztJQUVxQkU7QUFxQmpCLHlCQUFZQyxPQUFaLEVBQXFCO0FBQUE7O0FBQUE7O0FBQ2pCLFNBQUtDLEtBQUwsR0FBYUosNkNBQUMsRUFBZDtBQUNBLFNBQUtHLE9BQUwsR0FBZUUsTUFBTSxDQUFDQyxNQUFQLENBQWMsRUFBZCxFQUFrQixLQUFLQyxRQUF2QixFQUFpQ0osT0FBakMsQ0FBZjtBQUVBSCxJQUFBQSw2Q0FBQyxDQUFDLHNCQUFELENBQUQsQ0FBMEJRLElBQTFCLENBQStCLFVBQUNDLEtBQUQsRUFBUUMsS0FBUjtBQUFBLGFBQWtCLEtBQUksQ0FBQ0MsT0FBTCxDQUFhRCxLQUFiLENBQWxCO0FBQUEsS0FBL0I7QUFDQVYsSUFBQUEsNkNBQUMsQ0FBQyxNQUFELENBQUQsQ0FBVVksRUFBVixDQUFhLGdCQUFiLEVBQStCLEtBQUtDLGFBQUwsQ0FBbUJDLElBQW5CLENBQXdCLElBQXhCLENBQS9CO0FBRUg7Ozs7U0ExQkQsZUFBZTtBQUNYLGFBQU87QUFDSEMsUUFBQUEsZUFBZSxFQUFFLElBRGQ7QUFFSEMsUUFBQUEsU0FBUyxFQUFFLElBRlI7QUFHSEMsUUFBQUEsTUFBTSxFQUFFaEIsd0RBQUEsSUFBbUIsSUFIeEI7QUFJSGtCLFFBQUFBLEtBQUssRUFBRTtBQUNIQyxVQUFBQSxJQUFJLEVBQUUsZUFESDtBQUVIQyxVQUFBQSxJQUFJLEVBQUUsa0JBRkg7QUFHSEMsVUFBQUEsRUFBRSxFQUFFLGtCQUhEO0FBSUhDLFVBQUFBLElBQUksRUFBRSxvQkFKSDtBQUtIQyxVQUFBQSxRQUFRLEVBQUUsb0JBTFA7QUFNSEMsVUFBQUEsSUFBSSxFQUFFLHFCQU5IO0FBT0hDLFVBQUFBLEtBQUssRUFBRSxnQkFQSjtBQVFIQyxVQUFBQSxLQUFLLEVBQUUsZUFSSjtBQVNIQyxVQUFBQSxLQUFLLEVBQUU7QUFUSjtBQUpKLE9BQVA7QUFnQkg7OztXQVdELGlCQUFRQyxJQUFSLEVBQWM7QUFDVkEsTUFBQUEsSUFBSSxHQUFHN0IsNkNBQUMsQ0FBQzZCLElBQUQsQ0FBUjtBQUNBLFdBQUt6QixLQUFMLEdBQWEsS0FBS0EsS0FBTCxDQUFXMEIsR0FBWCxDQUFlRCxJQUFmLENBQWI7O0FBRUEsVUFBSUEsSUFBSSxDQUFDRSxJQUFMLENBQVUsZ0JBQVYsQ0FBSixFQUFpQztBQUFFO0FBQVM7O0FBRTVDLFVBQUk1QixPQUFPLEdBQUdFLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0IsS0FBS0gsT0FBdkIsRUFBZ0MwQixJQUFJLENBQUNFLElBQUwsQ0FBVSxlQUFWLEtBQThCLEVBQTlELENBQWQ7QUFDQUYsTUFBQUEsSUFBSSxDQUFDRyxjQUFMLENBQW9CN0IsT0FBcEIsRUFBNkJTLEVBQTdCLENBQWdDLG1CQUFoQyxFQUFxRCxLQUFLcUIsZUFBMUQ7QUFDQUosTUFBQUEsSUFBSSxDQUFDSyxRQUFMLENBQWMsY0FBZCxFQUE4QnRCLEVBQTlCLENBQWlDLE9BQWpDLEVBQTBDO0FBQUEsZUFBTWlCLElBQUksQ0FBQ00sU0FBTCxHQUFpQkMsS0FBakIsRUFBTjtBQUFBLE9BQTFDO0FBQ0g7OztXQUVELHVCQUFjQyxLQUFkLEVBQXFCQztBQUFNO0FBQTNCLE1BQXFEO0FBQUE7O0FBQ2pELFVBQUlDLE1BQU0sR0FBR3ZDLDZDQUFDLENBQUNzQyxNQUFELENBQUQsQ0FBVUUsSUFBVixDQUFlLHNCQUFmLENBQWI7O0FBQ0EsVUFBSSxDQUFDRCxNQUFNLENBQUNFLE1BQVosRUFBb0I7QUFBRTtBQUFTOztBQUUvQkYsTUFBQUEsTUFBTSxDQUFDL0IsSUFBUCxDQUFZLFVBQUNDLEtBQUQsRUFBUUMsS0FBUixFQUFrQjtBQUMxQkEsUUFBQUEsS0FBSyxHQUFHViw2Q0FBQyxDQUFDVSxLQUFELENBQVQ7O0FBQ0EsWUFBSSxDQUFDLENBQUMsTUFBSSxDQUFDTixLQUFMLENBQVdLLEtBQVgsQ0FBaUJDLEtBQWpCLENBQU4sRUFBK0I7QUFDM0IsZ0JBQUksQ0FBQ0MsT0FBTCxDQUFhRCxLQUFiO0FBQ0g7QUFDSixPQUxEO0FBTUg7OztXQUVELDJCQUFrQjtBQUNkVixNQUFBQSw2Q0FBQyxDQUFDLGtDQUFELENBQUQsQ0FBc0MwQyxVQUF0QyxDQUFpRCxPQUFqRCxFQUEwRDlCLEVBQTFELENBQTZELE9BQTdELEVBQXNFLFVBQUMrQixDQUFEO0FBQUEsZUFBT0EsQ0FBQyxDQUFDQyxlQUFGLEVBQVA7QUFBQSxPQUF0RTtBQUNIOzs7Ozs7O0FBR0UsSUFBSUMsUUFBUSxHQUFHLElBQUkzQyxhQUFKLEVBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL2Zvcm1zL2ZpZWxkcy9kYXRldGltZS5qcz9kMWMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICdncmF2LWNvbmZpZyc7XG5pbXBvcnQgJy4uLy4uL3V0aWxzL2Jvb3RzdHJhcC1kYXRldGltZXBpY2tlcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERhdGVUaW1lRmllbGQge1xuXG4gICAgZ2V0IGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2hvd1RvZGF5QnV0dG9uOiB0cnVlLFxuICAgICAgICAgICAgc2hvd0NsZWFyOiB0cnVlLFxuICAgICAgICAgICAgbG9jYWxlOiBjb25maWcubGFuZ3VhZ2UgfHwgJ2VuJyxcbiAgICAgICAgICAgIGljb25zOiB7XG4gICAgICAgICAgICAgICAgdGltZTogJ2ZhIGZhLWNsb2NrLW8nLFxuICAgICAgICAgICAgICAgIGRhdGU6ICdmYSBmYS1jYWxlbmRhci1vJyxcbiAgICAgICAgICAgICAgICB1cDogJ2ZhIGZhLWNoZXZyb24tdXAnLFxuICAgICAgICAgICAgICAgIGRvd246ICdmYSBmYS1jaGV2cm9uLWRvd24nLFxuICAgICAgICAgICAgICAgIHByZXZpb3VzOiAnZmEgZmEtY2hldnJvbi1sZWZ0JyxcbiAgICAgICAgICAgICAgICBuZXh0OiAnZmEgZmEtY2hldnJvbi1yaWdodCcsXG4gICAgICAgICAgICAgICAgdG9kYXk6ICdmYSBmYS1idWxsc2V5ZScsXG4gICAgICAgICAgICAgICAgY2xlYXI6ICdmYSBmYS10cmFzaC1vJyxcbiAgICAgICAgICAgICAgICBjbG9zZTogJ2ZhIGZhLXJlbW92ZSdcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuaXRlbXMgPSAkKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGVmYXVsdHMsIG9wdGlvbnMpO1xuXG4gICAgICAgICQoJ1tkYXRhLWdyYXYtZGF0ZXRpbWVdJykuZWFjaCgoaW5kZXgsIGZpZWxkKSA9PiB0aGlzLmFkZEl0ZW0oZmllbGQpKTtcbiAgICAgICAgJCgnYm9keScpLm9uKCdtdXRhdGlvbi5fZ3JhdicsIHRoaXMuX29uQWRkZWROb2Rlcy5iaW5kKHRoaXMpKTtcblxuICAgIH1cblxuICAgIGFkZEl0ZW0obGlzdCkge1xuICAgICAgICBsaXN0ID0gJChsaXN0KTtcbiAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMuYWRkKGxpc3QpO1xuXG4gICAgICAgIGlmIChsaXN0LmRhdGEoJ0RhdGVUaW1lUGlja2VyJykpIHsgcmV0dXJuOyB9XG5cbiAgICAgICAgbGV0IG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLm9wdGlvbnMsIGxpc3QuZGF0YSgnZ3Jhdi1kYXRldGltZScpIHx8IHt9KTtcbiAgICAgICAgbGlzdC5kYXRldGltZXBpY2tlcihvcHRpb25zKS5vbignZHAuc2hvdyBkcC51cGRhdGUnLCB0aGlzLl9kaXNhYmxlRGVjYWRlcyk7XG4gICAgICAgIGxpc3Quc2libGluZ3MoJy5maWVsZC1pY29ucycpLm9uKCdjbGljaycsICgpID0+IGxpc3QubW91c2Vkb3duKCkuZm9jdXMoKSk7XG4gICAgfVxuXG4gICAgX29uQWRkZWROb2RlcyhldmVudCwgdGFyZ2V0LyogLCByZWNvcmQsIGluc3RhbmNlICovKSB7XG4gICAgICAgIGxldCBmaWVsZHMgPSAkKHRhcmdldCkuZmluZCgnW2RhdGEtZ3Jhdi1kYXRldGltZV0nKTtcbiAgICAgICAgaWYgKCFmaWVsZHMubGVuZ3RoKSB7IHJldHVybjsgfVxuXG4gICAgICAgIGZpZWxkcy5lYWNoKChpbmRleCwgZmllbGQpID0+IHtcbiAgICAgICAgICAgIGZpZWxkID0gJChmaWVsZCk7XG4gICAgICAgICAgICBpZiAoIX50aGlzLml0ZW1zLmluZGV4KGZpZWxkKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkSXRlbShmaWVsZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9kaXNhYmxlRGVjYWRlcygpIHtcbiAgICAgICAgJCgnLmRhdGVwaWNrZXIteWVhcnMgLnBpY2tlci1zd2l0Y2gnKS5yZW1vdmVBdHRyKCd0aXRsZScpLm9uKCdjbGljaycsIChlKSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpKTtcbiAgICB9XG59XG5cbmV4cG9ydCBsZXQgSW5zdGFuY2UgPSBuZXcgRGF0ZVRpbWVGaWVsZCgpO1xuIl0sIm5hbWVzIjpbIiQiLCJjb25maWciLCJEYXRlVGltZUZpZWxkIiwib3B0aW9ucyIsIml0ZW1zIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVmYXVsdHMiLCJlYWNoIiwiaW5kZXgiLCJmaWVsZCIsImFkZEl0ZW0iLCJvbiIsIl9vbkFkZGVkTm9kZXMiLCJiaW5kIiwic2hvd1RvZGF5QnV0dG9uIiwic2hvd0NsZWFyIiwibG9jYWxlIiwibGFuZ3VhZ2UiLCJpY29ucyIsInRpbWUiLCJkYXRlIiwidXAiLCJkb3duIiwicHJldmlvdXMiLCJuZXh0IiwidG9kYXkiLCJjbGVhciIsImNsb3NlIiwibGlzdCIsImFkZCIsImRhdGEiLCJkYXRldGltZXBpY2tlciIsIl9kaXNhYmxlRGVjYWRlcyIsInNpYmxpbmdzIiwibW91c2Vkb3duIiwiZm9jdXMiLCJldmVudCIsInRhcmdldCIsImZpZWxkcyIsImZpbmQiLCJsZW5ndGgiLCJyZW1vdmVBdHRyIiwiZSIsInN0b3BQcm9wYWdhdGlvbiIsIkluc3RhbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/forms/fields/datetime.js\n");

/***/ }),

/***/ "./app/forms/fields/editor.js":
/*!************************************!*\
  !*** ./app/forms/fields/editor.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditorField),\n/* harmony export */   \"Toolbar\": () => (/* binding */ Toolbar),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _editor_buttons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editor/buttons */ \"./app/forms/fields/editor/buttons.js\");\n/* harmony import */ var codemirror__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! codemirror */ \"./node_modules/codemirror/lib/codemirror.js\");\n/* harmony import */ var codemirror__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(codemirror__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var watchjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! watchjs */ \"./node_modules/watchjs/src/watch.js\");\n/* harmony import */ var watchjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(watchjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var js_yaml__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! js-yaml */ \"./node_modules/js-yaml/dist/js-yaml.mjs\");\n/* harmony import */ var codemirror_mode_css_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! codemirror/mode/css/css */ \"./node_modules/codemirror/mode/css/css.js\");\n/* harmony import */ var codemirror_mode_css_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_css_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var codemirror_mode_gfm_gfm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! codemirror/mode/gfm/gfm */ \"./node_modules/codemirror/mode/gfm/gfm.js\");\n/* harmony import */ var codemirror_mode_gfm_gfm__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_gfm_gfm__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var codemirror_mode_htmlmixed_htmlmixed__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! codemirror/mode/htmlmixed/htmlmixed */ \"./node_modules/codemirror/mode/htmlmixed/htmlmixed.js\");\n/* harmony import */ var codemirror_mode_htmlmixed_htmlmixed__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_htmlmixed_htmlmixed__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var codemirror_mode_javascript_javascript__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! codemirror/mode/javascript/javascript */ \"./node_modules/codemirror/mode/javascript/javascript.js\");\n/* harmony import */ var codemirror_mode_javascript_javascript__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_javascript_javascript__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var codemirror_mode_markdown_markdown__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! codemirror/mode/markdown/markdown */ \"./node_modules/codemirror/mode/markdown/markdown.js\");\n/* harmony import */ var codemirror_mode_markdown_markdown__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_markdown_markdown__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var codemirror_mode_php_php__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! codemirror/mode/php/php */ \"./node_modules/codemirror/mode/php/php.js\");\n/* harmony import */ var codemirror_mode_php_php__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_php_php__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var codemirror_mode_sass_sass__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! codemirror/mode/sass/sass */ \"./node_modules/codemirror/mode/sass/sass.js\");\n/* harmony import */ var codemirror_mode_sass_sass__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_sass_sass__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var codemirror_mode_twig_twig__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! codemirror/mode/twig/twig */ \"./node_modules/codemirror/mode/twig/twig.js\");\n/* harmony import */ var codemirror_mode_twig_twig__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_twig_twig__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var codemirror_mode_xml_xml__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! codemirror/mode/xml/xml */ \"./node_modules/codemirror/mode/xml/xml.js\");\n/* harmony import */ var codemirror_mode_xml_xml__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_xml_xml__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var codemirror_mode_yaml_yaml__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! codemirror/mode/yaml/yaml */ \"./node_modules/codemirror/mode/yaml/yaml.js\");\n/* harmony import */ var codemirror_mode_yaml_yaml__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(codemirror_mode_yaml_yaml__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var codemirror_addon_edit_continuelist__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! codemirror/addon/edit/continuelist */ \"./node_modules/codemirror/addon/edit/continuelist.js\");\n/* harmony import */ var codemirror_addon_edit_continuelist__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(codemirror_addon_edit_continuelist__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var codemirror_addon_mode_overlay__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! codemirror/addon/mode/overlay */ \"./node_modules/codemirror/addon/mode/overlay.js\");\n/* harmony import */ var codemirror_addon_mode_overlay__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(codemirror_addon_mode_overlay__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var codemirror_addon_selection_active_line__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! codemirror/addon/selection/active-line */ \"./node_modules/codemirror/addon/selection/active-line.js\");\n/* harmony import */ var codemirror_addon_selection_active_line__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(codemirror_addon_selection_active_line__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var codemirror_addon_lint_lint__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! codemirror/addon/lint/lint */ \"./node_modules/codemirror/addon/lint/lint.js\");\n/* harmony import */ var codemirror_addon_lint_lint__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(codemirror_addon_lint_lint__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var codemirror_addon_lint_lint_css__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! codemirror/addon/lint/lint.css */ \"./node_modules/codemirror/addon/lint/lint.css\");\n/* harmony import */ var codemirror_addon_lint_css_lint__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! codemirror/addon/lint/css-lint */ \"./node_modules/codemirror/addon/lint/css-lint.js\");\n/* harmony import */ var codemirror_addon_lint_css_lint__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(codemirror_addon_lint_css_lint__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var codemirror_addon_lint_javascript_lint__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! codemirror/addon/lint/javascript-lint */ \"./node_modules/codemirror/addon/lint/javascript-lint.js\");\n/* harmony import */ var codemirror_addon_lint_javascript_lint__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(codemirror_addon_lint_javascript_lint__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var codemirror_addon_lint_json_lint__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! codemirror/addon/lint/json-lint */ \"./node_modules/codemirror/addon/lint/json-lint.js\");\n/* harmony import */ var codemirror_addon_lint_json_lint__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(codemirror_addon_lint_json_lint__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var codemirror_addon_lint_yaml_lint__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! codemirror/addon/lint/yaml-lint */ \"./node_modules/codemirror/addon/lint/yaml-lint.js\");\n/* harmony import */ var codemirror_addon_lint_yaml_lint__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(codemirror_addon_lint_yaml_lint__WEBPACK_IMPORTED_MODULE_23__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n\n__webpack_require__.g.jsyaml = js_yaml__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; // Modes\n\n\n\n\n\n\n\n\n\n\n // Add-ons\n\n\n\n\n\n\n\n\n\n\nvar IS_MOUSEDOWN = false;\nvar ThemesMap = ['paper'];\nvar Defaults = {\n  codemirror: {\n    mode: 'htmlmixed',\n    theme: 'paper',\n    lineWrapping: true,\n    dragDrop: true,\n    autoCloseTags: true,\n    matchTags: true,\n    autoCloseBrackets: true,\n    matchBrackets: true,\n    indentUnit: 4,\n    indentWithTabs: false,\n    tabSize: 4,\n    hintOptions: {\n      completionSingle: false\n    },\n    extraKeys: {\n      'Enter': 'newlineAndIndentContinueMarkdownList'\n    }\n  }\n};\n\nvar EditorField = /*#__PURE__*/function () {\n  function EditorField(options) {\n    var _this = this;\n\n    _classCallCheck(this, EditorField);\n\n    var body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\n    this.editors = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n    this.options = Object.assign({}, Defaults, options);\n    this.buttons = _editor_buttons__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    this.buttonStrategies = _editor_buttons__WEBPACK_IMPORTED_MODULE_1__.strategies;\n    (0,watchjs__WEBPACK_IMPORTED_MODULE_3__.watch)(_editor_buttons__WEBPACK_IMPORTED_MODULE_1__[\"default\"], function\n      /* key, modifier, prev, next */\n    () {\n      _this.editors.each(function (index, editor) {\n        return jquery__WEBPACK_IMPORTED_MODULE_0___default()(editor).data('toolbar').renderButtons();\n      });\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-editor]').each(function (index, editor) {\n      return _this.addEditor(editor);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n      body.trigger('grav-editor-ready');\n    });\n    body.on('mutation._grav', this._onAddedNodes.bind(this));\n    body.on('mouseup._grav', function () {\n      if (!IS_MOUSEDOWN) {\n        return true;\n      }\n\n      body.unbind('mousemove._grav');\n      IS_MOUSEDOWN = false;\n    });\n    body.on('mousedown._grav', '.grav-editor-resizer', function (event) {\n      event && event.preventDefault();\n      IS_MOUSEDOWN = true;\n      var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n      var container = target.siblings('.grav-editor-content');\n      var editor = container.find('.CodeMirror');\n      var codemirror = container.find('textarea').data('codemirror');\n      body.on('mousemove._grav', function (event) {\n        editor.css('height', Math.max(100, event.pageY - container.offset().top));\n        codemirror.refresh();\n      });\n    });\n  }\n\n  _createClass(EditorField, [{\n    key: \"addButton\",\n    value: function addButton(button, options) {\n      if (options && (options.before || options.after)) {\n        var index = this.buttons.navigation.findIndex(function (obj) {\n          var key = Object.keys(obj).shift();\n          return obj[key].identifier === (options.before || options.after);\n        });\n\n        if (!~index) {\n          options = 'end';\n        } else {\n          this.buttons.navigation.splice(options.before ? index : index + 1, 0, button);\n        }\n      }\n\n      if (options === 'start') {\n        this.buttons.navigation.splice(0, 0, button);\n      }\n\n      if (!options || options === 'end') {\n        this.buttons.navigation.push(button);\n      }\n    }\n  }, {\n    key: \"addEditor\",\n    value: function addEditor(textarea) {\n      textarea = jquery__WEBPACK_IMPORTED_MODULE_0___default()(textarea);\n      var options = Object.assign({}, this.options.codemirror, textarea.data('grav-editor').codemirror);\n      var theme = options.theme || 'paper';\n      this.editors = this.editors.add(textarea);\n\n      if (theme && !~ThemesMap.indexOf(theme)) {\n        ThemesMap.push(theme); // let themeCSS = `https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.12.0/theme/${theme}.min.css`;\n        // $('head').append($('<link rel=\"stylesheet\" type=\"text/css\" />').attr('href', themeCSS));\n      }\n\n      if (options.mode === 'yaml') {\n        Object.assign(options.extraKeys, {\n          Tab: function Tab(cm) {\n            cm.replaceSelection('    ', 'end');\n          }\n        });\n      }\n\n      var editor = codemirror__WEBPACK_IMPORTED_MODULE_2___default().fromTextArea(textarea.get(0), options);\n      textarea.data('codemirror', editor);\n      textarea.data('toolbar', new Toolbar(textarea));\n      textarea.addClass('code-mirrored');\n\n      if (options.toolbar === false) {\n        textarea.data('toolbar').ui.navigation.addClass('grav-editor-hide-toolbar');\n      }\n\n      editor.on('change', function () {\n        return editor.save();\n      });\n    }\n  }, {\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target\n    /* , record, instance */\n    ) {\n      var _this2 = this;\n\n      var editors = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('[data-grav-editor]');\n\n      if (!editors.length) {\n        return;\n      }\n\n      editors.each(function (index, editor) {\n        editor = jquery__WEBPACK_IMPORTED_MODULE_0___default()(editor);\n\n        if (!~_this2.editors.index(editor)) {\n          _this2.addEditor(editor);\n        }\n      });\n    }\n  }]);\n\n  return EditorField;\n}();\n\n\nvar Toolbar = /*#__PURE__*/function () {\n  function Toolbar(editor) {\n    _classCallCheck(this, Toolbar);\n\n    this.editor = jquery__WEBPACK_IMPORTED_MODULE_0___default()(editor);\n    this.codemirror = this.editor.data('codemirror');\n    this.buttons = _editor_buttons__WEBPACK_IMPORTED_MODULE_1__[\"default\"].navigation;\n    this.ui = {\n      navigation: jquery__WEBPACK_IMPORTED_MODULE_0___default()(Toolbar.templates().navigation)\n    };\n    this.editor.parent('.grav-editor-content').before(this.ui.navigation).after(this.ui.states);\n    this.renderButtons();\n  }\n\n  _createClass(Toolbar, [{\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var _this3 = this;\n\n      var map = {\n        'actions': 'navigation',\n        'modes': 'states'\n      };\n      ['actions', 'modes'].forEach(function (type) {\n        _this3.ui.navigation.find(\".grav-editor-\".concat(type)).empty().append('<ul />');\n\n        _editor_buttons__WEBPACK_IMPORTED_MODULE_1__[\"default\"][map[type]].forEach(function (button) {\n          return _this3.renderButton(button, type);\n        });\n      });\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton(button, type) {\n      var _this4 = this;\n\n      var location = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      Object.keys(button).forEach(function (key) {\n        var obj = button[key];\n\n        if (!obj.modes) {\n          obj.modes = [];\n        }\n\n        if (!~_this4.codemirror.options.ignore.indexOf(key) && (!obj.modes.length || obj.modes.indexOf(_this4.codemirror.options.mode) > -1)) {\n          var hint = obj.title ? \"data-hint=\\\"\".concat(obj.title, \"\\\"\") : '';\n          var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<li class=\\\"grav-editor-button-\".concat(key, \"\\\"><a class=\\\"hint--top\\\" \").concat(hint, \">\").concat(obj.label, \"</a></li>\"));\n\n          (location || _this4.ui.navigation.find(\".grav-editor-\".concat(type, \" ul:not(.dropdown-menu)\"))).append(element);\n\n          if (obj.shortcut) {\n            _this4.addShortcut(obj.identifier, obj.shortcut, element);\n          }\n\n          obj.action && obj.action.call(obj.action, {\n            codemirror: _this4.codemirror,\n            button: element,\n            textarea: _this4.editor,\n            ui: _this4.ui\n          });\n\n          if (obj.children) {\n            var childrenContainer = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<ul class=\"dropdown-menu\" />');\n            element.addClass('button-group').find('a').wrap('<div class=\"dropdown-toggle\" data-toggle=\"dropdown\"></div>');\n            element.find('a').append(' <i class=\"fa fa-caret-down\"></i>');\n            element.append(childrenContainer);\n            obj.children.forEach(function (child) {\n              return _this4.renderButton(child, type, childrenContainer);\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"addShortcut\",\n    value: function addShortcut(identifier, shortcut, element) {\n      var _this5 = this;\n\n      var map = {};\n\n      if (!Array.isArray(shortcut)) {\n        shortcut = [shortcut];\n      }\n\n      shortcut.forEach(function (key) {\n        map[key] = function () {\n          element.trigger(\"click.editor.\".concat(identifier), [_this5.codemirror]);\n        };\n      });\n      this.codemirror.addKeyMap(map);\n    }\n  }], [{\n    key: \"templates\",\n    value: function templates() {\n      return {\n        navigation: \"\\n                <div class=\\\"grav-editor-toolbar\\\">\\n                    <div class=\\\"grav-editor-actions\\\"></div>\\n                    <div class=\\\"grav-editor-modes\\\"></div>\\n                </div>\\n            \"\n      };\n    }\n  }]);\n\n  return Toolbar;\n}();\nvar Instance = new EditorField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/editor.js\n");

/***/ }),

/***/ "./app/forms/fields/editor/buttons.js":
/*!********************************************!*\
  !*** ./app/forms/fields/editor/buttons.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"strategies\": () => (/* binding */ strategies),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/request */ \"./app/utils/request.js\");\n\n\n\n\nvar replacer = function replacer(_ref) {\n  var name = _ref.name,\n      replace = _ref.replace,\n      codemirror = _ref.codemirror,\n      button = _ref.button,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'replaceSelections' : _ref$mode,\n      runner = _ref.runner;\n  button.on(\"click.editor.\".concat(name), function () {\n    strategies[mode]({\n      token: '$1',\n      template: replace,\n      codemirror: codemirror,\n      runner: runner\n    });\n  });\n};\n\nvar strategies = {\n  replaceSelections: function replaceSelections(_ref2) {\n    var template = _ref2.template,\n        token = _ref2.token,\n        codemirror = _ref2.codemirror,\n        runner = _ref2.runner;\n    var replacements = [];\n    var ranges = [];\n    var selections = codemirror.getSelections();\n    var list = codemirror.listSelections();\n    var accumulator = {};\n    selections.forEach(function (selection, index) {\n      var markup = template.replace(token, selection);\n      var cursor = markup.indexOf('$cur');\n      var _list$index$anchor = list[index].anchor,\n          line = _list$index$anchor.line,\n          ch = _list$index$anchor.ch;\n      markup = markup.replace('$cur', '');\n      markup = runner ? runner(selection, markup, list) : markup;\n      replacements.push(markup);\n\n      if (!accumulator[line]) {\n        accumulator[line] = 0;\n      }\n\n      ch += accumulator[line] + (cursor === -1 ? markup.length : cursor);\n      var range = {\n        ch: ch,\n        line: line\n      };\n      ranges.push({\n        anchor: range,\n        head: range\n      });\n      accumulator[line] += markup.length - selection.length;\n    });\n    codemirror.replaceSelections(replacements);\n    codemirror.setSelections(ranges);\n    codemirror.focus();\n  },\n  replaceLine: function replaceLine(_ref3) {\n    var template = _ref3.template,\n        token = _ref3.token,\n        codemirror = _ref3.codemirror,\n        runner = _ref3.runner;\n    var list = codemirror.listSelections();\n    var range;\n    list.forEach(function (selection) {\n      var lines = {\n        min: Math.min(selection.anchor.line, selection.head.line),\n        max: Math.max(selection.anchor.line, selection.head.line)\n      };\n      codemirror.eachLine(lines.min, lines.max + 1, function (handler) {\n        var markup = template.replace(token, handler.text);\n        var line = codemirror.getLineNumber(handler);\n        markup = runner ? runner(handler, markup) : markup;\n        codemirror.replaceRange(markup, {\n          line: line,\n          ch: 0\n        }, {\n          line: line,\n          ch: markup.length\n        });\n        range = {\n          line: line,\n          ch: markup.length\n        };\n      });\n    });\n    codemirror.setSelection(range, range, 'end');\n    codemirror.focus();\n  },\n  replaceRange: function replaceRange() {}\n};\n\nvar flipDisabled = function flipDisabled(codemirror, button, type) {\n  var hasHistory = codemirror.historySize()[type];\n  var element = button.find('a');\n  button[hasHistory ? 'removeClass' : 'addClass']('button-disabled');\n\n  if (!hasHistory) {\n    element.attr('title-disabled', element.attr('title'));\n    element.attr('data-hint-disabled', element.attr('data-hint'));\n    element.removeAttr('title').removeAttr('data-hint');\n  } else {\n    element.attr('title', element.attr('title-disabled'));\n    element.attr('data-hint', element.attr('data-hint-disabled'));\n    element.removeAttr('title-disabled').removeAttr('data-hint-disabled');\n  }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  navigation: [{\n    undo: {\n      identifier: 'undo',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.UNDO,\n      label: '<i class=\"fa fa-fw fa-undo\"></i>',\n      modes: [],\n      action: function action(_ref4) {\n        var codemirror = _ref4.codemirror,\n            button = _ref4.button,\n            textarea = _ref4.textarea;\n        button.addClass('button-disabled');\n        codemirror.on('change', function () {\n          return flipDisabled(codemirror, button, 'undo');\n        });\n        button.on('click.editor.undo', function () {\n          codemirror.undo();\n        });\n      }\n    }\n  }, {\n    redo: {\n      identifier: 'redo',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.REDO,\n      label: '<i class=\"fa fa-fw fa-repeat\"></i>',\n      modes: [],\n      action: function action(_ref5) {\n        var codemirror = _ref5.codemirror,\n            button = _ref5.button,\n            textarea = _ref5.textarea;\n        button.addClass('button-disabled');\n        codemirror.on('change', function () {\n          return flipDisabled(codemirror, button, 'redo');\n        });\n        button.on('click.editor.redo', function () {\n          codemirror.redo();\n        });\n      }\n    }\n  }, {\n    headers: {\n      identifier: 'headers',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.HEADERS,\n      label: '<i class=\"fa fa-fw fa-header\"></i>',\n      modes: ['gfm', 'markdown'],\n      children: [{\n        h1: {\n          identifier: 'h1',\n          label: '<i class=\"fa fa-fw fa-header\"></i>1',\n          modes: ['gfm', 'markdown'],\n          action: function action(_ref6) {\n            var codemirror = _ref6.codemirror,\n                button = _ref6.button,\n                textarea = _ref6.textarea;\n            replacer({\n              name: 'h1',\n              replace: '# $1',\n              codemirror: codemirror,\n              button: button,\n              mode: 'replaceLine'\n            });\n          }\n        }\n      }, {\n        h2: {\n          identifier: 'h2',\n          label: '<i class=\"fa fa-fw fa-header\"></i>2',\n          modes: ['gfm', 'markdown'],\n          action: function action(_ref7) {\n            var codemirror = _ref7.codemirror,\n                button = _ref7.button,\n                textarea = _ref7.textarea;\n            replacer({\n              name: 'h2',\n              replace: '## $1',\n              codemirror: codemirror,\n              button: button,\n              mode: 'replaceLine'\n            });\n          }\n        }\n      }, {\n        h3: {\n          identifier: 'h3',\n          label: '<i class=\"fa fa-fw fa-header\"></i>3',\n          modes: ['gfm', 'markdown'],\n          action: function action(_ref8) {\n            var codemirror = _ref8.codemirror,\n                button = _ref8.button,\n                textarea = _ref8.textarea;\n            replacer({\n              name: 'h3',\n              replace: '### $1',\n              codemirror: codemirror,\n              button: button,\n              mode: 'replaceLine'\n            });\n          }\n        }\n      }, {\n        h4: {\n          identifier: 'h4',\n          label: '<i class=\"fa fa-fw fa-header\"></i>4',\n          modes: ['gfm', 'markdown'],\n          action: function action(_ref9) {\n            var codemirror = _ref9.codemirror,\n                button = _ref9.button,\n                textarea = _ref9.textarea;\n            replacer({\n              name: 'h4',\n              replace: '#### $1',\n              codemirror: codemirror,\n              button: button,\n              mode: 'replaceLine'\n            });\n          }\n        }\n      }, {\n        h5: {\n          identifier: 'h5',\n          label: '<i class=\"fa fa-fw fa-header\"></i>5',\n          modes: ['gfm', 'markdown'],\n          action: function action(_ref10) {\n            var codemirror = _ref10.codemirror,\n                button = _ref10.button,\n                textarea = _ref10.textarea;\n            replacer({\n              name: 'h5',\n              replace: '##### $1',\n              codemirror: codemirror,\n              button: button,\n              mode: 'replaceLine'\n            });\n          }\n        }\n      }, {\n        h6: {\n          identifier: 'h6',\n          label: '<i class=\"fa fa-fw fa-header\"></i>6',\n          modes: ['gfm', 'markdown'],\n          action: function action(_ref11) {\n            var codemirror = _ref11.codemirror,\n                button = _ref11.button,\n                textarea = _ref11.textarea;\n            replacer({\n              name: 'h6',\n              replace: '###### $1',\n              codemirror: codemirror,\n              button: button,\n              mode: 'replaceLine'\n            });\n          }\n        }\n      }]\n    }\n  }, {\n    bold: {\n      identifier: 'bold',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.BOLD,\n      label: '<i class=\"fa fa-fw fa-bold\"></i>',\n      modes: ['gfm', 'markdown'],\n      shortcut: ['Ctrl-B', 'Cmd-B'],\n      action: function action(_ref12) {\n        var codemirror = _ref12.codemirror,\n            button = _ref12.button,\n            textarea = _ref12.textarea;\n        replacer({\n          name: 'bold',\n          replace: '**$1$cur**',\n          codemirror: codemirror,\n          button: button\n        });\n      }\n    }\n  }, {\n    italic: {\n      identifier: 'italic',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.ITALIC,\n      label: '<i class=\"fa fa-fw fa-italic\"></i>',\n      modes: ['gfm', 'markdown'],\n      shortcut: ['Ctrl-I', 'Cmd-I'],\n      action: function action(_ref13) {\n        var codemirror = _ref13.codemirror,\n            button = _ref13.button,\n            textarea = _ref13.textarea;\n        replacer({\n          name: 'italic',\n          replace: '_$1$cur_',\n          codemirror: codemirror,\n          button: button\n        });\n      }\n    }\n  }, {\n    strike: {\n      identifier: 'strike',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.STRIKETHROUGH,\n      label: '<i class=\"fa fa-fw fa-strikethrough\"></i>',\n      modes: ['gfm', 'markdown'],\n      action: function action(_ref14) {\n        var codemirror = _ref14.codemirror,\n            button = _ref14.button,\n            textarea = _ref14.textarea;\n        replacer({\n          name: 'strike',\n          replace: '~~$1$cur~~',\n          codemirror: codemirror,\n          button: button\n        });\n      }\n    }\n  }, {\n    delimiter: {\n      identifier: 'delimiter',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.SUMMARY_DELIMITER,\n      label: '<i class=\"fa fa-fw fa-minus\"></i>',\n      modes: ['gfm', 'markdown'],\n      action: function action(_ref15) {\n        var codemirror = _ref15.codemirror,\n            button = _ref15.button,\n            textarea = _ref15.textarea;\n        replacer({\n          name: 'delimiter',\n          replace: \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.site.delimiter, \"$1\"),\n          codemirror: codemirror,\n          button: button,\n          mode: 'replaceLine'\n        });\n      }\n    }\n  }, {\n    link: {\n      identifier: 'link',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.LINK,\n      label: '<i class=\"fa fa-fw fa-link\"></i>',\n      modes: ['gfm', 'markdown'],\n      shortcut: ['Ctrl-K', 'Cmd-K'],\n      action: function action(_ref16) {\n        var codemirror = _ref16.codemirror,\n            button = _ref16.button,\n            textarea = _ref16.textarea;\n        replacer({\n          name: 'link',\n          replace: '[$1]($cur)',\n          codemirror: codemirror,\n          button: button\n        });\n      }\n    }\n  }, {\n    image: {\n      identifier: 'image',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.IMAGE,\n      label: '<i class=\"fa fa-fw fa-picture-o\"></i>',\n      modes: ['gfm', 'markdown'],\n      action: function action(_ref17) {\n        var codemirror = _ref17.codemirror,\n            button = _ref17.button,\n            textarea = _ref17.textarea;\n        replacer({\n          name: 'image',\n          replace: '![$1]($cur)',\n          codemirror: codemirror,\n          button: button\n        });\n      }\n    }\n  }, {\n    blockquote: {\n      identifier: 'blockquote',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.BLOCKQUOTE,\n      label: '<i class=\"fa fa-fw fa-quote-right\"></i>',\n      modes: ['gfm', 'markdown'],\n      action: function action(_ref18) {\n        var codemirror = _ref18.codemirror,\n            button = _ref18.button,\n            textarea = _ref18.textarea;\n        replacer({\n          name: 'blockquote',\n          replace: '> $1',\n          codemirror: codemirror,\n          button: button,\n          mode: 'replaceLine'\n        });\n      }\n    }\n  }, {\n    listUl: {\n      identifier: 'listUl',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.UNORDERED_LIST,\n      label: '<i class=\"fa fa-fw fa-list-ul\"></i>',\n      modes: ['gfm', 'markdown'],\n      action: function action(_ref19) {\n        var codemirror = _ref19.codemirror,\n            button = _ref19.button,\n            textarea = _ref19.textarea;\n        replacer({\n          name: 'listUl',\n          replace: '* $1',\n          codemirror: codemirror,\n          button: button,\n          mode: 'replaceLine'\n        });\n      }\n    }\n  }, {\n    listOl: {\n      identifier: 'listOl',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.ORDERED_LIST,\n      label: '<i class=\"fa fa-fw fa-list-ol\"></i>',\n      modes: ['gfm', 'markdown'],\n      action: function action(_ref20) {\n        var codemirror = _ref20.codemirror,\n            button = _ref20.button,\n            textarea = _ref20.textarea;\n        replacer({\n          name: 'listOl',\n          replace: '. $1',\n          codemirror: codemirror,\n          button: button,\n          mode: 'replaceLine',\n          runner: function runner(line, markup) {\n            var lineNo = codemirror.getLineNumber(line);\n            var previousLine = codemirror.getLine(lineNo - 1) || '';\n            var match = previousLine.match(/^(\\d+)\\./);\n            var prefix = 1 + (match ? Number(match[1]) : 0);\n            return \"\".concat(prefix).concat(markup);\n          }\n        });\n      }\n    }\n  }],\n  states: [{\n    code: {\n      identifier: 'editor',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.EDITOR,\n      label: '<i class=\"fa fa-fw fa-code\"></i>',\n      action: function action(_ref21) {\n        var codemirror = _ref21.codemirror,\n            button = _ref21.button,\n            textarea = _ref21.textarea,\n            ui = _ref21.ui;\n\n        if (textarea.data('grav-editor-mode') === 'editor') {\n          button.addClass('editor-active');\n        }\n\n        button.on('click.states.editor', function () {\n          button.siblings().removeClass('editor-active');\n          button.addClass('editor-active');\n          textarea.data('grav-editor-mode', 'editor');\n          var previewContainer = textarea.data('grav-editor-preview-container');\n          var content = textarea.parent('.grav-editor-content');\n          content.addClass('is-active');\n          ui.navigation.find('.grav-editor-actions').css('visibility', 'visible');\n\n          if (previewContainer) {\n            previewContainer.removeClass('is-active');\n          }\n        });\n      }\n    }\n  }, {\n    preview: {\n      identifier: 'preview',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.PREVIEW,\n      label: '<i class=\"fa fa-fw fa-eye\"></i>',\n      modes: ['gfm', 'markdown'],\n      action: function action(_ref22) {\n        var codemirror = _ref22.codemirror,\n            button = _ref22.button,\n            textarea = _ref22.textarea,\n            ui = _ref22.ui;\n\n        if (textarea.data('grav-editor-mode') === 'preview') {\n          button.addClass('editor-active');\n        }\n\n        button.on('click.states.preview', function () {\n          var previewContainer = textarea.data('grav-editor-preview-container');\n          var content = textarea.parent('.grav-editor-content');\n          button.siblings().removeClass('editor-active');\n          button.addClass('editor-active');\n          textarea.data('grav-editor-mode', 'preview');\n\n          if (!previewContainer) {\n            previewContainer = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"grav-editor-preview\" />');\n            content.after(previewContainer);\n            textarea.data('grav-editor-preview-container', previewContainer);\n          }\n\n          previewContainer.css({\n            height: content.height()\n          });\n          previewContainer.addClass('is-active');\n          content.removeClass('is-active');\n          ui.navigation.find('.grav-editor-actions').css('visibility', 'hidden');\n          var url = \"\".concat(textarea.data('grav-urlpreview'), \"/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"processmarkdown\");\n          var params = textarea.closest('form').serializeArray();\n          var body = {};\n          params.map(function (obj) {\n            body[obj.name] = obj.value;\n          });\n          (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n            method: 'post',\n            body: body\n          }, function (response) {\n            return previewContainer.html(response.preview);\n          });\n        });\n      }\n    }\n  }, {\n    fullscreen: {\n      identifier: 'fullscreen',\n      title: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.FULLSCREEN,\n      label: '<i class=\"fa fa-fw fa-expand\"></i>',\n      action: function action(_ref23) {\n        var codemirror = _ref23.codemirror,\n            button = _ref23.button,\n            textarea = _ref23.textarea;\n        button.on('click.editor.fullscreen', function () {\n          var container = textarea.closest('.grav-editor');\n          var wrapper = codemirror.getWrapperElement();\n          var contentWrapper = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.content-wrapper');\n\n          if (!container.hasClass('grav-editor-fullscreen')) {\n            textarea.data('fullScreenRestore', {\n              scrollTop: __webpack_require__.g.pageYOffset,\n              scrollLeft: __webpack_require__.g.pageXOffset,\n              width: wrapper.style.width,\n              height: wrapper.style.height\n            });\n            wrapper.style.width = '';\n            wrapper.style.height = textarea.parent('.grav-editor-content').height() + 'px';\n            __webpack_require__.g.document.documentElement.style.overflow = 'hidden';\n            var hints = container.find('.grav-editor-toolbar .hint--top');\n\n            if (hints) {\n              hints.removeClass('hint--top').addClass('hint--bottom');\n              jquery__WEBPACK_IMPORTED_MODULE_0___default()(hints[hints.length - 1]).addClass('hint--bottom-left');\n            }\n\n            if (contentWrapper) {\n              contentWrapper.css('overflow', 'visible');\n            }\n          } else {\n            __webpack_require__.g.document.documentElement.style.overflow = '';\n            var state = textarea.data('fullScreenRestore');\n            wrapper.style.width = state.width;\n            wrapper.style.height = state.height;\n            __webpack_require__.g.scrollTo(state.scrollLeft, state.scrollTop);\n\n            var _hints = container.find('.grav-editor-toolbar .hint--bottom');\n\n            if (_hints) {\n              _hints.removeClass('hint--bottom').addClass('hint--top');\n\n              jquery__WEBPACK_IMPORTED_MODULE_0___default()(_hints[_hints.length - 1]).removeClass('hint--bottom-left');\n            }\n\n            if (contentWrapper) {\n              contentWrapper.css('overflow', 'auto');\n            }\n          }\n\n          container.toggleClass('grav-editor-fullscreen');\n          setTimeout(function () {\n            codemirror.refresh(); // this.preview.parent().css('height', this.code.height());\n\n            jquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).trigger('resize');\n          }, 5);\n        });\n      }\n    }\n  }]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/editor/buttons.js\n");

/***/ }),

/***/ "./app/forms/fields/elements.js":
/*!**************************************!*\
  !*** ./app/forms/fields/elements.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('change', '[data-grav-elements] select', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var value = target.val();\n  var id = target.closest('[data-grav-elements]').data('gravElements');\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[id^=\\\"\".concat(id, \"_\\\"]\")).css('display', 'none');\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[id=\\\"\".concat(id, \"__\").concat(value, \"\\\"]\")).css('display', 'inherit');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZm9ybXMvZmllbGRzL2VsZW1lbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBRUFBLDZDQUFDLENBQUNDLFFBQUQsQ0FBRCxDQUFZQyxFQUFaLENBQWUsUUFBZixFQUF5Qiw2QkFBekIsRUFBd0QsVUFBQ0MsS0FBRCxFQUFXO0FBQ2pFLE1BQU1DLE1BQU0sR0FBR0osNkNBQUMsQ0FBQ0csS0FBSyxDQUFDRSxhQUFQLENBQWhCO0FBQ0EsTUFBTUMsS0FBSyxHQUFHRixNQUFNLENBQUNHLEdBQVAsRUFBZDtBQUNBLE1BQU1DLEVBQUUsR0FBR0osTUFBTSxDQUFDSyxPQUFQLENBQWUsc0JBQWYsRUFBdUNDLElBQXZDLENBQTRDLGNBQTVDLENBQVg7QUFFQVYsRUFBQUEsNkNBQUMsa0JBQVVRLEVBQVYsVUFBRCxDQUFvQkcsR0FBcEIsQ0FBd0IsU0FBeEIsRUFBbUMsTUFBbkM7QUFDQVgsRUFBQUEsNkNBQUMsaUJBQVNRLEVBQVQsZUFBZ0JGLEtBQWhCLFNBQUQsQ0FBNEJLLEdBQTVCLENBQWdDLFNBQWhDLEVBQTJDLFNBQTNDO0FBQ0QsQ0FQRCIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvZm9ybXMvZmllbGRzL2VsZW1lbnRzLmpzP2EwZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcblxuJChkb2N1bWVudCkub24oJ2NoYW5nZScsICdbZGF0YS1ncmF2LWVsZW1lbnRzXSBzZWxlY3QnLCAoZXZlbnQpID0+IHtcbiAgY29uc3QgdGFyZ2V0ID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgY29uc3QgdmFsdWUgPSB0YXJnZXQudmFsKCk7XG4gIGNvbnN0IGlkID0gdGFyZ2V0LmNsb3Nlc3QoJ1tkYXRhLWdyYXYtZWxlbWVudHNdJykuZGF0YSgnZ3JhdkVsZW1lbnRzJyk7XG5cbiAgJChgW2lkXj1cIiR7aWR9X1wiXWApLmNzcygnZGlzcGxheScsICdub25lJyk7XG4gICQoYFtpZD1cIiR7aWR9X18ke3ZhbHVlfVwiXWApLmNzcygnZGlzcGxheScsICdpbmhlcml0Jyk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJvbiIsImV2ZW50IiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsInZhbHVlIiwidmFsIiwiaWQiLCJjbG9zZXN0IiwiZGF0YSIsImNzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/forms/fields/elements.js\n");

/***/ }),

/***/ "./app/forms/fields/filepicker.js":
/*!****************************************!*\
  !*** ./app/forms/fields/filepicker.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FilePickerField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/request */ \"./app/utils/request.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n // const insertTextAt = (string, index, text) => [string.slice(0, index), text, string.slice(index)].join('');\n\nvar FilePickerField = /*#__PURE__*/function () {\n  function FilePickerField(options) {\n    var _this = this;\n\n    _classCallCheck(this, FilePickerField);\n\n    this.items = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n    this.options = Object.assign({}, this.defaults, options);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-filepicker]').each(function (index, element) {\n      return _this.addItem(element);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('mutation._grav', this._onAddedNodes.bind(this));\n  }\n\n  _createClass(FilePickerField, [{\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target\n    /* , record, instance */\n    ) {\n      var _this2 = this;\n\n      var fields = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('[data-grav-filepicker]');\n\n      if (!fields.length) {\n        return;\n      }\n\n      fields.each(function (index, field) {\n        field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(field);\n\n        if (!~_this2.items.index(field)) {\n          _this2.addItem(field);\n        }\n      });\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem(element) {\n      element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n      this.items = this.items.add(element);\n      var tag = element.prop('tagName').toLowerCase();\n      var isInput = tag === 'input' || tag === 'select';\n      var field = isInput ? element : element.find('input, select');\n      var folder = '';\n      var thumbs = {};\n      var onDemand = field.closest('[data-ondemand]').length > 0;\n\n      if (!field.length || field.get(0).selectize) {\n        return;\n      }\n\n      var getData = function getData(field, callback) {\n        var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'all';\n        var url = grav_config__WEBPACK_IMPORTED_MODULE_1__.config.current_url + \".json/task\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"getFilesInFolder\");\n        var parent = field.closest('[data-grav-filepicker]');\n        var name = parent.data('name');\n        var value = parent.data('value');\n        var params = JSON.stringify(grav_config__WEBPACK_IMPORTED_MODULE_1__.uri_params || '{}');\n        (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n          method: 'post',\n          body: {\n            name: name,\n            params: params\n          }\n        }, function (response) {\n          if (typeof response.files === 'undefined') {\n            return;\n          }\n\n          var data = [];\n          thumbs = response.thumbs || {};\n\n          for (var i = 0; i < response.files.length; i++) {\n            if (mode === 'selected' && response.files[i] !== value) {\n              continue;\n            }\n\n            data.push({\n              'name': response.files[i],\n              'status': 'available',\n              thumb: thumbs[response.files[i]] || ''\n            });\n          }\n\n          for (var _i = 0; _i < response.pending.length; _i++) {\n            if (mode === 'selected' && response.pending[_i] !== value) {\n              continue;\n            }\n\n            data.push({\n              'name': response.pending[_i],\n              'status': 'pending',\n              thumb: thumbs[response.pending[_i]] || ''\n            });\n          }\n\n          folder = response.folder;\n          callback(data, value);\n        });\n      };\n\n      var imagesPreview = field.closest('[data-preview-images]').length > 0;\n      var selectedIsRendered = false;\n\n      var renderOption = function renderOption(item, escape) {\n        var image = '';\n\n        if (imagesPreview && folder && (!item.status || item.status === 'available') && item.name.match(/\\.(jpg|jpeg|png|gif|webp)$/i)) {\n          // const fallback2x = insertTextAt(`${config.base_url_relative}/../${folder}/${item.name}`, -4, '@2x');\n          // const fallback3x = insertTextAt(`${config.base_url_relative}/../${folder}/${item.name}`, -4, '@3x');\n          var source = thumbs[item.name] || \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/../\").concat(folder, \"/\").concat(item.name); // onerror=\"if(this.src==='${fallback2x}'){this.src='${fallback3x}';}else{this.src='${fallback2x}'}\"\n\n          image = \"<img class=\\\"filepicker-field-image\\\" src=\\\"\".concat(source, \"\\\" />\");\n        }\n\n        return \"<div>\\n                        <span class=\\\"title\\\">\\n                            \".concat(image, \" <span class=\\\"name filepicker-field-name\\\">\").concat(escape(item.name), \"</span>\\n                        </span>\\n                    </div>\");\n      };\n\n      field.selectize({\n        plugins: ['required-fix'],\n        valueField: 'name',\n        labelField: 'name',\n        searchField: 'name',\n        optgroups: [{\n          $order: 1,\n          value: 'pending',\n          label: 'Pending'\n        }, {\n          $order: 2,\n          value: 'available',\n          label: 'Available'\n        }],\n        optgroupField: 'status',\n        // lockOptgroupOrder: true,\n        create: false,\n        preload: false,\n        // 'focus',\n        render: {\n          option: function option(item, escape) {\n            return renderOption(item, escape);\n          },\n          item: function item(_item, escape) {\n            return renderOption(_item, escape);\n          }\n        },\n        onInitialize: function onInitialize() {\n          if (!onDemand) {\n            this.load(function (callback) {\n              return getData(field, function (data) {\n                return callback(data);\n              }, 'selected');\n            });\n          }\n        },\n        onLoad: function\n          /* data */\n        onLoad() {\n          if (!selectedIsRendered) {\n            var name = this.getValue();\n            this.updateOption(name, {\n              name: name\n            });\n            selectedIsRendered = true;\n          }\n        },\n        onFocus: function onFocus() {\n          this.load(function (callback) {\n            return getData(field, function (data) {\n              return callback(data);\n            });\n          });\n        }\n      });\n    }\n  }]);\n\n  return FilePickerField;\n}();\n\n\nvar Instance = new FilePickerField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixJQUFEO0FBQUEsdUJBQVVQLFFBQVEsQ0FBQ08sSUFBRCxDQUFsQjtBQUFBLGVBQVIsRUFBa0MsVUFBbEMsQ0FBckI7QUFBQSxhQUFWO0FBQ0g7QUFDSixTQTNCVztBQTZCWnFDLFFBQUFBLE1BQU0sRUFBRTtBQUFTO0FBQVQsaUJBQXFCO0FBQ3pCLGNBQUksQ0FBQ3ZCLGtCQUFMLEVBQXlCO0FBQ3JCLGdCQUFJZixJQUFJLEdBQUcsS0FBS3VDLFFBQUwsRUFBWDtBQUNBLGlCQUFLQyxZQUFMLENBQWtCeEMsSUFBbEIsRUFBd0I7QUFBRUEsY0FBQUEsSUFBSSxFQUFKQTtBQUFGLGFBQXhCO0FBRUFlLFlBQUFBLGtCQUFrQixHQUFHLElBQXJCO0FBQ0g7QUFDSixTQXBDVztBQXNDWjBCLFFBQUFBLE9BQU8sRUFBRSxtQkFBVztBQUNoQixlQUFLSixJQUFMLENBQVUsVUFBQzNDLFFBQUQ7QUFBQSxtQkFBY0QsT0FBTyxDQUFDWixLQUFELEVBQVEsVUFBQ29CLElBQUQ7QUFBQSxxQkFBVVAsUUFBUSxDQUFDTyxJQUFELENBQWxCO0FBQUEsYUFBUixDQUFyQjtBQUFBLFdBQVY7QUFDSDtBQXhDVyxPQUFoQjtBQTBDSDs7Ozs7OztBQUdFLElBQUl5QyxRQUFRLEdBQUcsSUFBSS9FLGVBQUosRUFBZiIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvZm9ybXMvZmllbGRzL2ZpbGVwaWNrZXIuanM/NzEzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgY29uZmlnLCB1cmlfcGFyYW1zIH0gZnJvbSAnZ3Jhdi1jb25maWcnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi4vLi4vdXRpbHMvcmVxdWVzdCc7XG5cbi8vIGNvbnN0IGluc2VydFRleHRBdCA9IChzdHJpbmcsIGluZGV4LCB0ZXh0KSA9PiBbc3RyaW5nLnNsaWNlKDAsIGluZGV4KSwgdGV4dCwgc3RyaW5nLnNsaWNlKGluZGV4KV0uam9pbignJyk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpbGVQaWNrZXJGaWVsZCB7XG5cbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuaXRlbXMgPSAkKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGVmYXVsdHMsIG9wdGlvbnMpO1xuXG4gICAgICAgICQoJ1tkYXRhLWdyYXYtZmlsZXBpY2tlcl0nKS5lYWNoKChpbmRleCwgZWxlbWVudCkgPT4gdGhpcy5hZGRJdGVtKGVsZW1lbnQpKTtcbiAgICAgICAgJCgnYm9keScpLm9uKCdtdXRhdGlvbi5fZ3JhdicsIHRoaXMuX29uQWRkZWROb2Rlcy5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICBfb25BZGRlZE5vZGVzKGV2ZW50LCB0YXJnZXQvKiAsIHJlY29yZCwgaW5zdGFuY2UgKi8pIHtcbiAgICAgICAgbGV0IGZpZWxkcyA9ICQodGFyZ2V0KS5maW5kKCdbZGF0YS1ncmF2LWZpbGVwaWNrZXJdJyk7XG4gICAgICAgIGlmICghZmllbGRzLmxlbmd0aCkgeyByZXR1cm47IH1cblxuICAgICAgICBmaWVsZHMuZWFjaCgoaW5kZXgsIGZpZWxkKSA9PiB7XG4gICAgICAgICAgICBmaWVsZCA9ICQoZmllbGQpO1xuICAgICAgICAgICAgaWYgKCF+dGhpcy5pdGVtcy5pbmRleChmaWVsZCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZEl0ZW0oZmllbGQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICAgICAgZWxlbWVudCA9ICQoZWxlbWVudCk7XG4gICAgICAgIHRoaXMuaXRlbXMgPSB0aGlzLml0ZW1zLmFkZChlbGVtZW50KTtcblxuICAgICAgICBsZXQgdGFnID0gZWxlbWVudC5wcm9wKCd0YWdOYW1lJykudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgbGV0IGlzSW5wdXQgPSB0YWcgPT09ICdpbnB1dCcgfHwgdGFnID09PSAnc2VsZWN0JztcblxuICAgICAgICBsZXQgZmllbGQgPSAoaXNJbnB1dCA/IGVsZW1lbnQgOiBlbGVtZW50LmZpbmQoJ2lucHV0LCBzZWxlY3QnKSk7XG5cbiAgICAgICAgbGV0IGZvbGRlciA9ICcnO1xuICAgICAgICBsZXQgdGh1bWJzID0ge307XG5cbiAgICAgICAgbGV0IG9uRGVtYW5kID0gZmllbGQuY2xvc2VzdCgnW2RhdGEtb25kZW1hbmRdJykubGVuZ3RoID4gMDtcblxuICAgICAgICBpZiAoIWZpZWxkLmxlbmd0aCB8fCBmaWVsZC5nZXQoMCkuc2VsZWN0aXplKSB7IHJldHVybjsgfVxuXG4gICAgICAgIGxldCBnZXREYXRhID0gZnVuY3Rpb24gZ2V0RGF0YShmaWVsZCwgY2FsbGJhY2ssIG1vZGUgPSAnYWxsJykge1xuICAgICAgICAgICAgbGV0IHVybCA9IGNvbmZpZy5jdXJyZW50X3VybCArIGAuanNvbi90YXNrJHtjb25maWcucGFyYW1fc2VwfWdldEZpbGVzSW5Gb2xkZXJgO1xuICAgICAgICAgICAgbGV0IHBhcmVudCA9IGZpZWxkLmNsb3Nlc3QoJ1tkYXRhLWdyYXYtZmlsZXBpY2tlcl0nKTtcbiAgICAgICAgICAgIGxldCBuYW1lID0gcGFyZW50LmRhdGEoJ25hbWUnKTtcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IHBhcmVudC5kYXRhKCd2YWx1ZScpO1xuICAgICAgICAgICAgbGV0IHBhcmFtcyA9IEpTT04uc3RyaW5naWZ5KHVyaV9wYXJhbXMgfHwgJ3t9Jyk7XG5cbiAgICAgICAgICAgIHJlcXVlc3QodXJsLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgICAgICAgICAgYm9keTogeyBuYW1lLCBwYXJhbXMgfVxuICAgICAgICAgICAgfSwgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZXNwb25zZS5maWxlcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gW107XG4gICAgICAgICAgICAgICAgdGh1bWJzID0gcmVzcG9uc2UudGh1bWJzIHx8IHt9O1xuXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXNwb25zZS5maWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAobW9kZSA9PT0gJ3NlbGVjdGVkJyAmJiByZXNwb25zZS5maWxlc1tpXSAhPT0gdmFsdWUpIHsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgZGF0YS5wdXNoKHsgJ25hbWUnOiByZXNwb25zZS5maWxlc1tpXSwgJ3N0YXR1cyc6ICdhdmFpbGFibGUnLCB0aHVtYjogdGh1bWJzW3Jlc3BvbnNlLmZpbGVzW2ldXSB8fCAnJyB9KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3BvbnNlLnBlbmRpbmcubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1vZGUgPT09ICdzZWxlY3RlZCcgJiYgcmVzcG9uc2UucGVuZGluZ1tpXSAhPT0gdmFsdWUpIHsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgZGF0YS5wdXNoKHsgJ25hbWUnOiByZXNwb25zZS5wZW5kaW5nW2ldLCAnc3RhdHVzJzogJ3BlbmRpbmcnLCB0aHVtYjogdGh1bWJzW3Jlc3BvbnNlLnBlbmRpbmdbaV1dIHx8ICcnIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZvbGRlciA9IHJlc3BvbnNlLmZvbGRlcjtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhLCB2YWx1ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBsZXQgaW1hZ2VzUHJldmlldyA9IGZpZWxkLmNsb3Nlc3QoJ1tkYXRhLXByZXZpZXctaW1hZ2VzXScpLmxlbmd0aCA+IDA7XG4gICAgICAgIGxldCBzZWxlY3RlZElzUmVuZGVyZWQgPSBmYWxzZTtcblxuICAgICAgICBsZXQgcmVuZGVyT3B0aW9uID0gZnVuY3Rpb24gcmVuZGVyT3B0aW9uKGl0ZW0sIGVzY2FwZSkge1xuICAgICAgICAgICAgbGV0IGltYWdlID0gJyc7XG4gICAgICAgICAgICBpZiAoaW1hZ2VzUHJldmlldyAmJiBmb2xkZXIgJiYgKCFpdGVtLnN0YXR1cyB8fCBpdGVtLnN0YXR1cyA9PT0gJ2F2YWlsYWJsZScpICYmIGl0ZW0ubmFtZS5tYXRjaCgvXFwuKGpwZ3xqcGVnfHBuZ3xnaWZ8d2VicCkkL2kpKSB7XG4gICAgICAgICAgICAgICAgLy8gY29uc3QgZmFsbGJhY2syeCA9IGluc2VydFRleHRBdChgJHtjb25maWcuYmFzZV91cmxfcmVsYXRpdmV9Ly4uLyR7Zm9sZGVyfS8ke2l0ZW0ubmFtZX1gLCAtNCwgJ0AyeCcpO1xuICAgICAgICAgICAgICAgIC8vIGNvbnN0IGZhbGxiYWNrM3ggPSBpbnNlcnRUZXh0QXQoYCR7Y29uZmlnLmJhc2VfdXJsX3JlbGF0aXZlfS8uLi8ke2ZvbGRlcn0vJHtpdGVtLm5hbWV9YCwgLTQsICdAM3gnKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzb3VyY2UgPSB0aHVtYnNbaXRlbS5uYW1lXSB8fCBgJHtjb25maWcuYmFzZV91cmxfcmVsYXRpdmV9Ly4uLyR7Zm9sZGVyfS8ke2l0ZW0ubmFtZX1gO1xuXG4gICAgICAgICAgICAgICAgLy8gb25lcnJvcj1cImlmKHRoaXMuc3JjPT09JyR7ZmFsbGJhY2syeH0nKXt0aGlzLnNyYz0nJHtmYWxsYmFjazN4fSc7fWVsc2V7dGhpcy5zcmM9JyR7ZmFsbGJhY2syeH0nfVwiXG4gICAgICAgICAgICAgICAgaW1hZ2UgPSBgPGltZyBjbGFzcz1cImZpbGVwaWNrZXItZmllbGQtaW1hZ2VcIiBzcmM9XCIke3NvdXJjZX1cIiAvPmA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAke2ltYWdlfSA8c3BhbiBjbGFzcz1cIm5hbWUgZmlsZXBpY2tlci1maWVsZC1uYW1lXCI+JHtlc2NhcGUoaXRlbS5uYW1lKX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PmA7XG4gICAgICAgIH07XG5cbiAgICAgICAgZmllbGQuc2VsZWN0aXplKHtcbiAgICAgICAgICAgIHBsdWdpbnM6IFsncmVxdWlyZWQtZml4J10sXG4gICAgICAgICAgICB2YWx1ZUZpZWxkOiAnbmFtZScsXG4gICAgICAgICAgICBsYWJlbEZpZWxkOiAnbmFtZScsXG4gICAgICAgICAgICBzZWFyY2hGaWVsZDogJ25hbWUnLFxuICAgICAgICAgICAgb3B0Z3JvdXBzOiBbXG4gICAgICAgICAgICAgICAgeyRvcmRlcjogMSwgdmFsdWU6ICdwZW5kaW5nJywgbGFiZWw6ICdQZW5kaW5nJ30sXG4gICAgICAgICAgICAgICAgeyRvcmRlcjogMiwgdmFsdWU6ICdhdmFpbGFibGUnLCBsYWJlbDogJ0F2YWlsYWJsZSd9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgb3B0Z3JvdXBGaWVsZDogJ3N0YXR1cycsXG4gICAgICAgICAgICAvLyBsb2NrT3B0Z3JvdXBPcmRlcjogdHJ1ZSxcbiAgICAgICAgICAgIGNyZWF0ZTogZmFsc2UsXG4gICAgICAgICAgICBwcmVsb2FkOiBmYWxzZSwgLy8gJ2ZvY3VzJyxcbiAgICAgICAgICAgIHJlbmRlcjoge1xuICAgICAgICAgICAgICAgIG9wdGlvbjogZnVuY3Rpb24oaXRlbSwgZXNjYXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZW5kZXJPcHRpb24oaXRlbSwgZXNjYXBlKTtcbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgaXRlbTogZnVuY3Rpb24oaXRlbSwgZXNjYXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZW5kZXJPcHRpb24oaXRlbSwgZXNjYXBlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBvbkluaXRpYWxpemU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmICghb25EZW1hbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkKChjYWxsYmFjaykgPT4gZ2V0RGF0YShmaWVsZCwgKGRhdGEpID0+IGNhbGxiYWNrKGRhdGEpLCAnc2VsZWN0ZWQnKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgb25Mb2FkOiBmdW5jdGlvbigvKiBkYXRhICovKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzZWxlY3RlZElzUmVuZGVyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5hbWUgPSB0aGlzLmdldFZhbHVlKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlT3B0aW9uKG5hbWUsIHsgbmFtZSB9KTtcblxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZElzUmVuZGVyZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIG9uRm9jdXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9hZCgoY2FsbGJhY2spID0+IGdldERhdGEoZmllbGQsIChkYXRhKSA9PiBjYWxsYmFjayhkYXRhKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmV4cG9ydCBsZXQgSW5zdGFuY2UgPSBuZXcgRmlsZVBpY2tlckZpZWxkKCk7XG4iXSwibmFtZXMiOlsiJCIsImNvbmZpZyIsInVyaV9wYXJhbXMiLCJyZXF1ZXN0IiwiRmlsZVBpY2tlckZpZWxkIiwib3B0aW9ucyIsIml0ZW1zIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVmYXVsdHMiLCJlYWNoIiwiaW5kZXgiLCJlbGVtZW50IiwiYWRkSXRlbSIsIm9uIiwiX29uQWRkZWROb2RlcyIsImJpbmQiLCJldmVudCIsInRhcmdldCIsImZpZWxkcyIsImZpbmQiLCJsZW5ndGgiLCJmaWVsZCIsImFkZCIsInRhZyIsInByb3AiLCJ0b0xvd2VyQ2FzZSIsImlzSW5wdXQiLCJmb2xkZXIiLCJ0aHVtYnMiLCJvbkRlbWFuZCIsImNsb3Nlc3QiLCJnZXQiLCJzZWxlY3RpemUiLCJnZXREYXRhIiwiY2FsbGJhY2siLCJtb2RlIiwidXJsIiwiY3VycmVudF91cmwiLCJwYXJhbV9zZXAiLCJwYXJlbnQiLCJuYW1lIiwiZGF0YSIsInZhbHVlIiwicGFyYW1zIiwiSlNPTiIsInN0cmluZ2lmeSIsIm1ldGhvZCIsImJvZHkiLCJyZXNwb25zZSIsImZpbGVzIiwiaSIsInB1c2giLCJ0aHVtYiIsInBlbmRpbmciLCJpbWFnZXNQcmV2aWV3Iiwic2VsZWN0ZWRJc1JlbmRlcmVkIiwicmVuZGVyT3B0aW9uIiwiaXRlbSIsImVzY2FwZSIsImltYWdlIiwic3RhdHVzIiwibWF0Y2giLCJzb3VyY2UiLCJiYXNlX3VybF9yZWxhdGl2ZSIsInBsdWdpbnMiLCJ2YWx1ZUZpZWxkIiwibGFiZWxGaWVsZCIsInNlYXJjaEZpZWxkIiwib3B0Z3JvdXBzIiwiJG9yZGVyIiwibGFiZWwiLCJvcHRncm91cEZpZWxkIiwiY3JlYXRlIiwicHJlbG9hZCIsInJlbmRlciIsIm9wdGlvbiIsIm9uSW5pdGlhbGl6ZSIsImxvYWQiLCJvbkxvYWQiLCJnZXRWYWx1ZSIsInVwZGF0ZU9wdGlvbiIsIm9uRm9jdXMiLCJJbnN0YW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/forms/fields/filepicker.js\n");

/***/ }),

/***/ "./app/forms/fields/files.js":
/*!***********************************!*\
  !*** ./app/forms/fields/files.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FilesField),\n/* harmony export */   \"UriToMarkdown\": () => (/* binding */ UriToMarkdown),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dropzone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dropzone */ \"./node_modules/dropzone/dist/dropzone.js\");\n/* harmony import */ var dropzone__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dropzone__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/request */ \"./app/utils/request.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_3__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n // import EXIF from 'exif-js';\n\n\n // translations\n\nvar Dictionary = {\n  dictCancelUpload: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_CANCEL_UPLOAD,\n  dictCancelUploadConfirmation: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_CANCEL_UPLOAD_CONFIRMATION,\n  dictDefaultMessage: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_DEFAULT_MESSAGE,\n  dictFallbackMessage: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_FALLBACK_MESSAGE,\n  dictFallbackText: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_FALLBACK_TEXT,\n  dictFileTooBig: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_FILE_TOO_BIG,\n  dictInvalidFileType: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_INVALID_FILE_TYPE,\n  dictMaxFilesExceeded: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_MAX_FILES_EXCEEDED,\n  dictRemoveFile: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_REMOVE_FILE,\n  dictResponseError: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROPZONE_RESPONSE_ERROR\n};\n(dropzone__WEBPACK_IMPORTED_MODULE_1___default().autoDiscover) = false;\n(dropzone__WEBPACK_IMPORTED_MODULE_1___default().options.gravPageDropzone) = {};\n\n(dropzone__WEBPACK_IMPORTED_MODULE_1___default().confirm) = function (question, accepted, rejected) {\n  var doc = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document);\n  var modalSelector = '[data-remodal-id=\"delete-media\"]';\n\n  var removeEvents = function removeEvents() {\n    doc.off('confirmation', modalSelector, accept);\n    doc.off('cancellation', modalSelector, reject);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(modalSelector).find('.remodal-confirm').removeClass('pointer-events-disabled');\n  };\n\n  var accept = function accept() {\n    accepted && accepted();\n    removeEvents();\n  };\n\n  var reject = function reject() {\n    rejected && rejected();\n    removeEvents();\n  };\n\n  (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[jquery__WEBPACK_IMPORTED_MODULE_0___default()(modalSelector).data('remodal')].open();\n  doc.on('confirmation', modalSelector, accept);\n  doc.on('cancellation', modalSelector, reject);\n};\n\nvar DropzoneMediaConfig = {\n  timeout: 0,\n  thumbnailWidth: 200,\n  thumbnailHeight: 150,\n  addRemoveLinks: false,\n  dictDefaultMessage: grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DROP_FILES_HERE_TO_UPLOAD.replace(/&lt;/g, '<').replace(/&gt;/g, '>'),\n  dictRemoveFileConfirmation: '[placeholder]',\n  previewTemplate: \"\\n        <div class=\\\"dz-preview dz-file-preview dz-no-editor\\\">\\n          <div class=\\\"dz-details\\\">\\n            <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n            <div class=\\\"dz-size\\\" data-dz-size></div>\\n            <img data-dz-thumbnail />\\n          </div>\\n          <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n          <div class=\\\"dz-success-mark\\\"><span>\\u2714</span></div>\\n          <div class=\\\"dz-error-mark\\\"><span>\\u2718</span></div>\\n          <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n          <a class=\\\"dz-unset\\\" title=\\\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.UNSET, \"\\\" href=\\\"#\\\" data-dz-unset>\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.UNSET, \"</a>\\n          <a class=\\\"dz-remove\\\" title=\\\"\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DELETE, \"\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DELETE, \"</a>\\n          <a class=\\\"dz-metadata\\\" title=\\\"\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.METADATA, \"\\\" href=\\\"#\\\" target=\\\"_blank\\\" data-dz-metadata>\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.METADATA, \"</a>\\n          <a class=\\\"dz-view\\\" title=\\\"\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.VIEW, \"\\\" href=\\\"#\\\" target=\\\"_blank\\\" data-dz-view>\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.VIEW, \"</a>\\n        </div>\").trim()\n}; // global.EXIF = EXIF;\n\nvar ACCEPT_FUNC = function ACCEPT_FUNC(file, done, settings) {\n  var resolution = settings.resolution;\n  if (!resolution) return done();\n  var reader = new FileReader();\n  var error = '';\n  var hasMin = resolution.min && (resolution.min.width || resolution.min.height);\n  var hasMax = resolution.max && (resolution.max.width || resolution.max.height);\n\n  if (hasMin || !(settings.resizeWidth || settings.resizeHeight) && hasMax) {\n    reader.onload = function (event) {\n      var image = new Image();\n      image.src = event.target.result;\n\n      image.onerror = function () {\n        done(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.FILE_ERROR_UPLOAD);\n      };\n\n      image.onload = function () {\n        var _this = this;\n\n        if (resolution.min) {\n          Object.keys(resolution.min).forEach(function (attr) {\n            if (resolution.min[attr] && _this[attr] < resolution.min[attr]) {\n              error += grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_FORM.RESOLUTION_MIN.replace(/{{attr}}/g, attr).replace(/{{min}}/g, resolution.min[attr]);\n            }\n          });\n        }\n\n        if (!(settings.resizeWidth || settings.resizeHeight)) {\n          if (resolution.max) {\n            Object.keys(resolution.max).forEach(function (attr) {\n              if (resolution.max[attr] && _this[attr] > resolution.max[attr]) {\n                error += grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_FORM.RESOLUTION_MAX.replace(/{{attr}}/g, attr).replace(/{{max}}/g, resolution.max[attr]);\n              }\n            });\n          }\n        }\n\n        URL.revokeObjectURL(image.src); // release memory\n\n        return error ? done(error) : done();\n      };\n    };\n\n    reader.readAsDataURL(file);\n  } else {\n    return error ? done(error) : done();\n  }\n};\n\nvar FilesField = /*#__PURE__*/function () {\n  function FilesField() {\n    var _this2 = this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$container = _ref.container,\n        container = _ref$container === void 0 ? '.dropzone.files-upload' : _ref$container,\n        _ref$options = _ref.options,\n        options = _ref$options === void 0 ? {} : _ref$options;\n\n    _classCallCheck(this, FilesField);\n\n    this.container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n\n    if (!this.container.length) {\n      return;\n    }\n\n    this.urls = {};\n    this.customPost = this.container.data('filePostAdd') || {};\n    this.options = Object.assign({}, Dictionary, DropzoneMediaConfig, {\n      klass: this,\n      url: this.container.data('file-url-add') || grav_config__WEBPACK_IMPORTED_MODULE_3__.config.current_url,\n      acceptedFiles: this.container.data('media-types'),\n      init: this.initDropzone\n    }, this.container.data('dropzone-options'), options);\n    this.options = Object.assign({}, this.options, {\n      accept: function accept(file, done) {\n        ACCEPT_FUNC(file, done, this.options);\n      }\n    });\n    this.dropzone = new (dropzone__WEBPACK_IMPORTED_MODULE_1___default())(container, this.options);\n    this.dropzone.on('complete', this.onDropzoneComplete.bind(this));\n    this.dropzone.on('success', this.onDropzoneSuccess.bind(this));\n    this.dropzone.on('removedfile', this.onDropzoneRemovedFile.bind(this));\n    this.dropzone.on('sending', this.onDropzoneSending.bind(this));\n    this.dropzone.on('error', this.onDropzoneError.bind(this));\n    this.container.on('mouseenter', '[data-dz-view]', function (e) {\n      var value = JSON.parse(_this2.container.find('[name][type=\"hidden\"]').val() || '{}');\n      var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget);\n      var file = target.parent('.dz-preview').find('.dz-filename');\n      var filename = encodeURI(file.text());\n      var URL = Object.keys(value).filter(function (key) {\n        return value[key].name === filename;\n      }).shift();\n      target.attr('href', \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.config.base_url_simple, \"/\").concat(URL));\n    });\n  }\n\n  _createClass(FilesField, [{\n    key: \"initDropzone\",\n    value: function initDropzone() {\n      var _this3 = this;\n\n      var files = this.options.klass.container.find('[data-file]');\n      var dropzone = this;\n\n      if (!files.length) {\n        return;\n      }\n\n      files.each(function (index, file) {\n        file = jquery__WEBPACK_IMPORTED_MODULE_0___default()(file);\n        var data = file.data('file');\n        var mock = {\n          name: data.name,\n          size: data.size,\n          type: data.type,\n          status: (dropzone__WEBPACK_IMPORTED_MODULE_1___default().ADDED),\n          accepted: true,\n          url: _this3.options.url,\n          removeUrl: data.remove\n        };\n        dropzone.files.push(mock);\n        dropzone.options.addedfile.call(dropzone, mock);\n\n        if (mock.type.match(/^image\\//)) {\n          dropzone.options.thumbnail.call(dropzone, mock, data.path);\n          dropzone.createThumbnailFromUrl(mock, data.path);\n        }\n\n        file.remove();\n      });\n    }\n  }, {\n    key: \"getURI\",\n    value: function getURI() {\n      return this.container.data('mediaUri') || '';\n    }\n  }, {\n    key: \"onDropzoneSending\",\n    value: function onDropzoneSending(file, xhr, formData) {\n      var _this4 = this;\n\n      if (Object.keys(this.customPost).length) {\n        Object.keys(this.customPost).forEach(function (key) {\n          formData.append(key, _this4.customPost[key]);\n        });\n      } else {\n        formData.append('name', this.options.dotNotation);\n        formData.append('task', 'filesupload');\n        formData.append('uri', this.getURI());\n      }\n\n      formData.append('admin-nonce', grav_config__WEBPACK_IMPORTED_MODULE_3__.config.admin_nonce);\n    }\n  }, {\n    key: \"onDropzoneSuccess\",\n    value: function onDropzoneSuccess(file, response, xhr) {\n      response = typeof response === 'string' ? JSON.parse(response) : response;\n\n      if (this.options.reloadPage) {\n        __webpack_require__.g.location.reload();\n      } // store params for removing file from session before it gets saved\n\n\n      if (response.session) {\n        file.sessionParams = response.session;\n        file.removeUrl = this.options.url; // Touch field value to force a mutation detection\n\n        var input = this.container.find('[name][type=\"hidden\"]');\n        var value = input.val();\n        input.val(value + ' ');\n      }\n\n      return this.handleError({\n        file: file,\n        data: response,\n        mode: 'removeFile',\n        msg: \"<p>\".concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.FILE_ERROR_UPLOAD, \" <strong>\").concat(file.name, \"</strong></p>\\n            <pre>\").concat(response.message, \"</pre>\")\n      });\n    }\n  }, {\n    key: \"onDropzoneComplete\",\n    value: function onDropzoneComplete(file) {\n      if (!file.accepted && !file.rejected) {\n        var data = {\n          status: 'error',\n          message: \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.FILE_UNSUPPORTED, \": \").concat(file.name.match(/\\..+/).join(''))\n        };\n        return this.handleError({\n          file: file,\n          data: data,\n          mode: 'removeFile',\n          msg: \"<p>\".concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.FILE_ERROR_ADD, \" <strong>\").concat(file.name, \"</strong></p>\\n                <pre>\").concat(data.message, \"</pre>\")\n        });\n      }\n\n      if (this.options.reloadPage) {\n        __webpack_require__.g.location.reload();\n      }\n    }\n  }, {\n    key: \"b64_to_utf8\",\n    value: function b64_to_utf8(str) {\n      str = str.replace(/\\s/g, '');\n      return decodeURIComponent(escape(window.atob(str)));\n    }\n  }, {\n    key: \"onDropzoneRemovedFile\",\n    value: function onDropzoneRemovedFile(file) {\n      var _this5 = this;\n\n      if (!file.accepted || file.rejected) {\n        return;\n      }\n\n      var url = file.removeUrl || this.urls[\"delete\"] || this.options.url;\n      var path = (url || '').match(/path:(.*)\\//);\n      var body = {\n        filename: file.name,\n        uri: this.getURI()\n      };\n\n      if (file.sessionParams) {\n        body.task = 'filessessionremove';\n        body.session = file.sessionParams;\n      }\n\n      var customPost = this.container.data('filePostRemove') || {};\n\n      if (Object.keys(customPost).length) {\n        body = {};\n        Object.keys(customPost).forEach(function (key) {\n          body[key] = customPost[key];\n        });\n      }\n\n      body['filename'] = file.name;\n      body['admin-nonce'] = grav_config__WEBPACK_IMPORTED_MODULE_3__.config.admin_nonce;\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n        method: 'post',\n        body: body\n      }, function () {\n        if (!path) {\n          return;\n        }\n\n        path = _this5.b64_to_utf8(path[1]);\n\n        var input = _this5.container.find('[name][type=\"hidden\"]');\n\n        var data = JSON.parse(input.val() || '{}');\n        delete data[path];\n        input.val(JSON.stringify(data));\n      });\n    }\n  }, {\n    key: \"onDropzoneError\",\n    value: function onDropzoneError(file, response, xhr) {\n      var message = xhr ? response.error.message : response;\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(file.previewElement).find('[data-dz-errormessage]').html(message);\n      return this.handleError({\n        file: file,\n        data: {\n          status: 'error'\n        },\n        msg: \"<pre>\".concat(message, \"</pre>\")\n      });\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(options) {\n      var file = options.file,\n          data = options.data,\n          mode = options.mode,\n          msg = options.msg;\n\n      if (data.status !== 'error' && data.status !== 'unauthorized') {\n        return;\n      }\n\n      switch (mode) {\n        case 'addBack':\n          if (file instanceof File) {\n            this.dropzone.addFile.call(this.dropzone, file);\n          } else {\n            this.dropzone.files.push(file);\n            this.dropzone.options.addedfile.call(this.dropzone, file);\n            this.dropzone.options.thumbnail.call(this.dropzone, file, file.extras.url);\n          }\n\n          break;\n\n        case 'removeFile':\n        default:\n          if (~this.dropzone.files.indexOf(file)) {\n            file.rejected = true;\n            this.dropzone.removeFile.call(this.dropzone, file, {\n              silent: true\n            });\n          }\n\n          break;\n      }\n\n      var modal = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=\"generic\"]');\n      modal.find('.error-content').html(msg);\n      (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[modal.data('remodal')].open();\n    }\n  }]);\n\n  return FilesField;\n}();\n\n\nfunction UriToMarkdown(uri) {\n  uri = uri.replace(/@3x|@2x|@1x/, '');\n  uri = uri.replace(/\\(/g, '%28');\n  uri = uri.replace(/\\)/g, '%29');\n  var title = uri.split('.').slice(0, -1).join('.');\n  return uri.match(/\\.(jpe?g|png|gif|svg|webp|mp4|webm|ogv|mov)$/i) ? \"![\".concat(title, \"](\").concat(uri, \" \\\"\").concat(title, \"\\\")\") : \"[\".concat(decodeURI(uri), \"](\").concat(uri, \")\");\n}\nvar instances = [];\nvar cache = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n\nvar onAddedNodes = function onAddedNodes(event, target\n/* , record, instance */\n) {\n  var files = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('.dropzone.files-upload');\n\n  if (!files.length) {\n    return;\n  }\n\n  files.each(function (index, file) {\n    file = jquery__WEBPACK_IMPORTED_MODULE_0___default()(file);\n\n    if (!~cache.index(file)) {\n      addNode(file);\n    }\n  });\n};\n\nvar addNode = function addNode(container) {\n  container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n  var input = container.find('input[type=\"file\"]');\n  var settings = container.data('grav-file-settings') || {};\n\n  if (settings.accept && ~settings.accept.indexOf('*')) {\n    settings.accept = [''];\n  }\n\n  var options = {\n    url: container.data('file-url-add') || (container.closest('form').attr('action') || grav_config__WEBPACK_IMPORTED_MODULE_3__.config.current_url) + '.json',\n    paramName: settings.paramName || 'file',\n    dotNotation: settings.name || 'file',\n    acceptedFiles: settings.accept ? settings.accept.join(',') : input.attr('accept') || container.data('media-types'),\n    maxFilesize: typeof settings.filesize !== 'undefined' ? settings.filesize : 256,\n    maxFiles: settings.limit || null,\n    resizeWidth: settings.resizeWidth || null,\n    resizeHeight: settings.resizeHeight || null,\n    resizeQuality: settings.resizeQuality || null,\n    resolution: settings.resolution || null,\n    accept: function accept(file, done) {\n      ACCEPT_FUNC(file, done, settings);\n    }\n  };\n  cache = cache.add(container);\n  container = container[0];\n  instances.push(new FilesField({\n    container: container,\n    options: options\n  }));\n};\n\nvar Instance = function () {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.dropzone.files-upload').each(function (i, container) {\n    return addNode(container);\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('mutation._grav', onAddedNodes);\n  return instances;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/files.js\n");

/***/ }),

/***/ "./app/forms/fields/folder.js":
/*!************************************!*\
  !*** ./app/forms/fields/folder.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar Regenerate = function Regenerate() {\n  var field = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[name=\"data[folder]\"]';\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(field);\n  var title = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[name=\"data[header][title]\"]');\n  var slug = jquery__WEBPACK_IMPORTED_MODULE_0___default().slugify(title.val(), {\n    custom: {\n      \"'\": ''\n    }\n  });\n  element.addClass('highlight').val(slug);\n  setTimeout(function () {\n    return element.removeClass('highlight');\n  }, 500);\n};\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-regenerate]', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target.data('regenerate'));\n  Regenerate(field);\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Regenerate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZm9ybXMvZmllbGRzL2ZvbGRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFFQSxJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxHQUFxQztBQUFBLE1BQXBDQyxLQUFvQyx1RUFBNUIsdUJBQTRCO0FBQ3BELE1BQU1DLE9BQU8sR0FBR0gsNkNBQUMsQ0FBQ0UsS0FBRCxDQUFqQjtBQUNBLE1BQU1FLEtBQUssR0FBR0osNkNBQUMsQ0FBQyw4QkFBRCxDQUFmO0FBQ0EsTUFBTUssSUFBSSxHQUFHTCxxREFBQSxDQUFVSSxLQUFLLENBQUNHLEdBQU4sRUFBVixFQUF1QjtBQUFDQyxJQUFBQSxNQUFNLEVBQUU7QUFBQyxXQUFLO0FBQU47QUFBVCxHQUF2QixDQUFiO0FBRUFMLEVBQUFBLE9BQU8sQ0FBQ00sUUFBUixDQUFpQixXQUFqQixFQUE4QkYsR0FBOUIsQ0FBa0NGLElBQWxDO0FBRUFLLEVBQUFBLFVBQVUsQ0FBQztBQUFBLFdBQU1QLE9BQU8sQ0FBQ1EsV0FBUixDQUFvQixXQUFwQixDQUFOO0FBQUEsR0FBRCxFQUF5QyxHQUF6QyxDQUFWO0FBQ0gsQ0FSRDs7QUFVQVgsNkNBQUMsQ0FBQ1ksUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLG1CQUF4QixFQUE2QyxVQUFDQyxLQUFELEVBQVc7QUFDcEQsTUFBTUMsTUFBTSxHQUFHZiw2Q0FBQyxDQUFDYyxLQUFLLENBQUNFLGFBQVAsQ0FBaEI7QUFDQSxNQUFNZCxLQUFLLEdBQUdGLDZDQUFDLENBQUNlLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLFlBQVosQ0FBRCxDQUFmO0FBRUFoQixFQUFBQSxVQUFVLENBQUNDLEtBQUQsQ0FBVjtBQUNILENBTEQ7QUFPQSxpRUFBZUQsVUFBZiIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvZm9ybXMvZmllbGRzL2ZvbGRlci5qcz85N2ZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmNvbnN0IFJlZ2VuZXJhdGUgPSAoZmllbGQgPSAnW25hbWU9XCJkYXRhW2ZvbGRlcl1cIl0nKSA9PiB7XG4gICAgY29uc3QgZWxlbWVudCA9ICQoZmllbGQpO1xuICAgIGNvbnN0IHRpdGxlID0gJCgnW25hbWU9XCJkYXRhW2hlYWRlcl1bdGl0bGVdXCJdJyk7XG4gICAgY29uc3Qgc2x1ZyA9ICQuc2x1Z2lmeSh0aXRsZS52YWwoKSwge2N1c3RvbToge1wiJ1wiOiAnJ319KTtcblxuICAgIGVsZW1lbnQuYWRkQ2xhc3MoJ2hpZ2hsaWdodCcpLnZhbChzbHVnKTtcblxuICAgIHNldFRpbWVvdXQoKCkgPT4gZWxlbWVudC5yZW1vdmVDbGFzcygnaGlnaGxpZ2h0JyksIDUwMCk7XG59O1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCAnW2RhdGEtcmVnZW5lcmF0ZV0nLCAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0IGZpZWxkID0gJCh0YXJnZXQuZGF0YSgncmVnZW5lcmF0ZScpKTtcblxuICAgIFJlZ2VuZXJhdGUoZmllbGQpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFJlZ2VuZXJhdGU7XG4iXSwibmFtZXMiOlsiJCIsIlJlZ2VuZXJhdGUiLCJmaWVsZCIsImVsZW1lbnQiLCJ0aXRsZSIsInNsdWciLCJzbHVnaWZ5IiwidmFsIiwiY3VzdG9tIiwiYWRkQ2xhc3MiLCJzZXRUaW1lb3V0IiwicmVtb3ZlQ2xhc3MiLCJkb2N1bWVudCIsIm9uIiwiZXZlbnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/forms/fields/folder.js\n");

/***/ }),

/***/ "./app/forms/fields/iconpicker.js":
/*!****************************************!*\
  !*** ./app/forms/fields/iconpicker.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IconpickerField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n/* Icon Picker by QueryLoop\n * Author: @eliorivero\n * URL: http://queryloop.com/\n * License: GPLv2\n */\n\nvar defaults = {\n  'mode': 'dialog',\n  // show overlay 'dialog' panel or slide down 'inline' panel\n  'closeOnPick': true,\n  // whether to close panel after picking or 'no'\n  'save': 'class',\n  // save icon 'class' or 'code'\n  'size': '',\n  'classes': {\n    'launcher': '',\n    // extra classes for launcher buttons\n    'clear': 'remove-times',\n    // extra classes for button that removes preview and clears field\n    'highlight': '',\n    // extra classes when highlighting an icon\n    'close': '' // extra classes for close button\n\n  },\n  'iconSets': {\n    // example data structure. Used to specify which launchers will be created\n    'genericon': 'Genericon',\n    // create a launcher to pick genericon icons\n    'fa': 'FontAwesome' // create a launcher to pick fontawesome icons\n\n  }\n};\n\nvar QL_Icon_Picker = /*#__PURE__*/function () {\n  function QL_Icon_Picker(element, options) {\n    _classCallCheck(this, QL_Icon_Picker);\n\n    this.iconSet = '';\n    this.iconSetName = '';\n    this.$field = '';\n    this.element = element;\n    this.settings = jquery__WEBPACK_IMPORTED_MODULE_0___default().extend({}, defaults, options);\n    this._defaults = defaults;\n    this.init();\n  }\n\n  _createClass(QL_Icon_Picker, [{\n    key: \"init\",\n    value: function init() {\n      var $brick = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.element);\n      var pickerId = $brick.data('pickerid');\n      var $preview = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class=\"icon-preview icon-preview-' + pickerId + '\" />');\n      this.$field = $brick.find('input'); // Add preview area\n\n      this.makePreview($brick, pickerId, $preview); // Make button to clear field and remove preview\n\n      this.makeClear(pickerId, $preview); // Make buttons that open the panel of icons\n\n      this.makeLaunchers($brick, pickerId); // Prepare display styles, inline and dialog\n\n      this.makeDisplay($brick);\n    }\n  }, {\n    key: \"makePreview\",\n    value: function makePreview($brick, pickerId, $preview) {\n      var $icon = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<i />');\n      var iconValue = this.$field.val();\n      $preview.prependTo($brick);\n      $icon.prependTo($preview);\n\n      if (iconValue !== '') {\n        $preview.addClass('icon-preview-on');\n        $icon.addClass(iconValue);\n      }\n    }\n  }, {\n    key: \"makeClear\",\n    value: function makeClear(pickerId, $preview) {\n      var base = this;\n      var $clear = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<a class=\"remove-icon ' + base.settings.classes.clear + '\" />'); // Hide button to remove icon and preview and append it to preview area\n\n      $clear.hide().prependTo($preview); // If there's a icon saved in the field, show remove icon button\n\n      if (base.$field.val() !== '') {\n        $clear.show();\n      }\n\n      $preview.on('click', '.remove-icon', function (e) {\n        e.preventDefault();\n        base.$field.val('');\n        $preview.removeClass('icon-preview-on').find('i').removeClass();\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hide();\n      });\n    }\n  }, {\n    key: \"makeDisplay\",\n    value: function makeDisplay($brick) {\n      var base = this;\n      var close = base.settings.classes.close;\n      var $body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\n      var $close = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<a href=\"#\" class=\"icon-picker-close\"/>');\n\n      if (base.settings.mode === 'inline') {\n        $brick.find('.icon-set').append($close).removeClass('dialog').addClass('ip-inline ' + base.settings.size).parent().addClass('icon-set-wrap');\n      } else if (base.settings.mode === 'dialog') {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.icon-set').addClass('dialog ' + base.settings.size);\n\n        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.icon-picker-overlay').length <= 0) {\n          $body.append('<div class=\"icon-picker-overlay\"/>').append($close);\n        }\n      }\n\n      $body.on('click', '.icon-picker-close, .icon-picker-overlay', function (e) {\n        e.preventDefault();\n        base.closePicker($brick, jquery__WEBPACK_IMPORTED_MODULE_0___default()(base.iconSet), base.settings.mode);\n      }).on('mouseenter mouseleave', '.icon-picker-close', function (e) {\n        if (e.type === 'mouseenter') {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).addClass(close);\n        } else {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).removeClass(close);\n        }\n      });\n    }\n  }, {\n    key: \"makeLaunchers\",\n    value: function makeLaunchers($brick) {\n      var base = this;\n      var dataIconSets = $brick.data('iconsets');\n      var iconSet;\n\n      if (typeof dataIconSets === 'undefined') {\n        dataIconSets = base.settings.iconSets;\n      }\n\n      for (iconSet in dataIconSets) {\n        if (dataIconSets.hasOwnProperty(iconSet)) {\n          $brick.append('<a class=\"launch-icons button ' + base.settings.classes.launcher + '\" data-icons=\"' + iconSet + '\">' + dataIconSets[iconSet] + '</a>');\n        }\n      }\n\n      $brick.find('.launch-icons').on('click', function (e) {\n        e.preventDefault();\n        var $self = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n        var theseIcons = $self.data('icons');\n        base.iconSetName = theseIcons;\n        base.iconSet = '.' + theseIcons + '-set'; // Initialize picker\n\n        base.iconPick($brick); // Show icon picker\n\n        base.showPicker($brick, jquery__WEBPACK_IMPORTED_MODULE_0___default()(base.iconSet), base.settings.mode);\n      });\n    }\n  }, {\n    key: \"iconPick\",\n    value: function iconPick($brick) {\n      var base = this;\n      var highlight = 'icon-highlight ' + base.settings.classes.highlight;\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(base.iconSet).on('click', 'li', function (e) {\n        e.preventDefault();\n        var $icon = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n        var icon = $icon.data(base.settings.save); // Mark as selected\n\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.icon-selected').removeClass('icon-selected');\n        $icon.addClass('icon-selected');\n\n        if (base.$field.data('format') === 'short') {\n          icon = icon.slice(6);\n        } // Save icon value to field\n\n\n        base.$field.val(icon); // Close icon picker\n\n        if (base.settings.closeOnPick) {\n          base.closePicker($brick, $icon.closest(base.iconSet), base.settings.mode);\n        } // Set preview\n\n\n        base.setPreview($icon.data('class')); // Broadcast event passing the selected icon.\n\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').trigger('iconselected.queryloop', icon);\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(base.iconSet).on('mouseenter mouseleave', 'li', function (e) {\n        if (e.type === 'mouseenter') {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).addClass(highlight);\n        } else {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).removeClass(highlight);\n        }\n      });\n    }\n  }, {\n    key: \"showPicker\",\n    value: function showPicker($brick, $icons, mode) {\n      if (mode === 'inline') {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.icon-set').removeClass('ip-inline-open');\n        $brick.find($icons).toggleClass('ip-inline-open');\n      } else if (mode === 'dialog') {\n        $brick.find('.icon-picker-close').addClass('make-visible');\n        $brick.find('.icon-picker-overlay').addClass('make-visible');\n        $icons.addClass('dialog-open');\n      }\n\n      $icons.find('.icon-selected').removeClass('icon-selected');\n      var selectedIcon = this.$field.val().replace(' ', '.');\n\n      if (selectedIcon !== '') {\n        if (this.settings.save === 'class') {\n          $icons.find('.' + selectedIcon).addClass('icon-selected');\n        } else {\n          $icons.find('[data-code=\"' + selectedIcon + '\"]').addClass('icon-selected');\n        }\n      } // Broadcast event when the picker is shown passing the picker mode.\n\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').trigger('iconpickershow.queryloop', mode);\n    }\n  }, {\n    key: \"closePicker\",\n    value: function closePicker($brick, $icons, mode) {\n      // Remove event so they don't fire from a different picker\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.iconSet).off('click', 'li');\n\n      if (mode === 'inline') {\n        $brick.find($icons).removeClass('ip-inline-open');\n      } else if (mode === 'dialog') {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.icon-picker-close, .icon-picker-overlay').removeClass('make-visible');\n      } // Broadcast event when the picker is closed passing the picker mode.\n\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').trigger('iconpickerclose.queryloop', mode);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.icon-set').removeClass('dialog-open');\n    }\n  }, {\n    key: \"setPreview\",\n    value: function setPreview(preview) {\n      var $preview = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.element).find('.icon-preview');\n      $preview.addClass('icon-preview-on').find('i').removeClass().addClass(this.iconSetName).addClass(preview);\n      $preview.find('a').show();\n    }\n  }]);\n\n  return QL_Icon_Picker;\n}();\n/* Grav */\n// extend $ with 3rd party QL Icon Picker\n\n\n(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.qlIconPicker) = function (options) {\n  this.each(function () {\n    if (!jquery__WEBPACK_IMPORTED_MODULE_0___default().data(this, 'plugin_qlIconPicker')) {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default().data(this, 'plugin_qlIconPicker', new QL_Icon_Picker(this, options));\n    }\n  });\n  return this;\n};\n\nvar IconpickerField = /*#__PURE__*/function () {\n  function IconpickerField(options) {\n    var _this = this;\n\n    _classCallCheck(this, IconpickerField);\n\n    this.items = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n    this.options = Object.assign({}, this.defaults, options);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-iconpicker]').each(function (index, element) {\n      return _this.addItem(element);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('mutation._grav', this._onAddedNodes.bind(this));\n  }\n\n  _createClass(IconpickerField, [{\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target\n    /* , record, instance */\n    ) {\n      var _this2 = this;\n\n      var fields = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('[data-grav-iconpicker]');\n\n      if (!fields.length) {\n        return;\n      }\n\n      fields.each(function (index, field) {\n        field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(field);\n\n        if (!~_this2.items.index(field)) {\n          _this2.addItem(field);\n        }\n      });\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem(element) {\n      element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n      this.items = this.items.add(element);\n      element.find('.icon-picker').qlIconPicker({\n        'save': 'class'\n      }); // hack to remove extra icon sets that are just copies\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.icon-set:not(:first)').remove();\n    }\n  }]);\n\n  return IconpickerField;\n}();\n\n\nvar Instance = new IconpickerField(); // Fix to close the dialog when clicking outside\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n  var match = '.icon-set.dialog-open, .launch-icons[data-icons]';\n\n  if (!target.is(match) && !target.closest(match).length) {\n    var dialogs = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.icon-set.dialog-open'); // skip if there's no dialog open\n\n    if (dialogs.length) {\n      dialogs.each(function (index, dialog) {\n        var picker = jquery__WEBPACK_IMPORTED_MODULE_0___default()(dialog).siblings('.icon-picker');\n        var data = picker.data('plugin_qlIconPicker');\n        data.closePicker(picker, jquery__WEBPACK_IMPORTED_MODULE_0___default()(data.iconSet), data.settings.mode);\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/iconpicker.js\n");

/***/ }),

/***/ "./app/forms/fields/indeterminate.js":
/*!*******************************************!*\
  !*** ./app/forms/fields/indeterminate.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\ndocument.addEventListener('click', function (event) {\n  if (document.querySelector('#pages-filters')) {\n    return true;\n  }\n\n  var wrapper = event.target.closest('.checkboxes.indeterminate');\n\n  if (wrapper) {\n    event.preventDefault();\n    var checkbox = wrapper.querySelector('input[type=\"checkbox\"]:not([disabled])');\n    var checkStatus = wrapper.dataset._checkStatus;\n    wrapper.classList.remove('status-checked', 'status-unchecked', 'status-indeterminate');\n\n    switch (checkStatus) {\n      // checked, going indeterminate\n      case '1':\n        wrapper.dataset._checkStatus = '2';\n        checkbox.indeterminate = true;\n        checkbox.checked = false;\n        checkbox.value = 0;\n        wrapper.classList.add('status-indeterminate');\n        break;\n      // indeterminate, going unchecked\n\n      case '2':\n        wrapper.dataset._checkStatus = '0';\n        checkbox.indeterminate = false;\n        checkbox.checked = false;\n        checkbox.value = '';\n        wrapper.classList.add('status-unchecked');\n        break;\n      // unchecked, going checked\n\n      case '0':\n      default:\n        wrapper.dataset._checkStatus = '1';\n        checkbox.indeterminate = false;\n        checkbox.checked = true;\n        checkbox.value = 1;\n        wrapper.classList.add('status-checked');\n        break;\n    } // const input = new CustomEvent('input', { detail: { target: checkbox }});\n    // document.dispatchEvent(input);\n\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(checkbox).trigger('input');\n  }\n});\n(document.querySelectorAll('input[type=\"checkbox\"][indeterminate=\"true\"]') || []).forEach(function (input) {\n  input.indeterminate = true;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZm9ybXMvZmllbGRzL2luZGV0ZXJtaW5hdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFFQUMsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixPQUExQixFQUFtQyxVQUFDQyxLQUFELEVBQVc7QUFDMUMsTUFBSUYsUUFBUSxDQUFDRyxhQUFULENBQXVCLGdCQUF2QixDQUFKLEVBQThDO0FBQzFDLFdBQU8sSUFBUDtBQUNIOztBQUVELE1BQU1DLE9BQU8sR0FBR0YsS0FBSyxDQUFDRyxNQUFOLENBQWFDLE9BQWIsQ0FBcUIsMkJBQXJCLENBQWhCOztBQUVBLE1BQUlGLE9BQUosRUFBYTtBQUNURixJQUFBQSxLQUFLLENBQUNLLGNBQU47QUFDQSxRQUFNQyxRQUFRLEdBQUdKLE9BQU8sQ0FBQ0QsYUFBUixDQUFzQix3Q0FBdEIsQ0FBakI7QUFDQSxRQUFNTSxXQUFXLEdBQUdMLE9BQU8sQ0FBQ00sT0FBUixDQUFnQkMsWUFBcEM7QUFDQVAsSUFBQUEsT0FBTyxDQUFDUSxTQUFSLENBQWtCQyxNQUFsQixDQUF5QixnQkFBekIsRUFBMkMsa0JBQTNDLEVBQStELHNCQUEvRDs7QUFFQSxZQUFRSixXQUFSO0FBQ0k7QUFDQSxXQUFLLEdBQUw7QUFDSUwsUUFBQUEsT0FBTyxDQUFDTSxPQUFSLENBQWdCQyxZQUFoQixHQUErQixHQUEvQjtBQUNBSCxRQUFBQSxRQUFRLENBQUNNLGFBQVQsR0FBeUIsSUFBekI7QUFDQU4sUUFBQUEsUUFBUSxDQUFDTyxPQUFULEdBQW1CLEtBQW5CO0FBQ0FQLFFBQUFBLFFBQVEsQ0FBQ1EsS0FBVCxHQUFpQixDQUFqQjtBQUNBWixRQUFBQSxPQUFPLENBQUNRLFNBQVIsQ0FBa0JLLEdBQWxCLENBQXNCLHNCQUF0QjtBQUNBO0FBRUo7O0FBQ0EsV0FBSyxHQUFMO0FBQ0liLFFBQUFBLE9BQU8sQ0FBQ00sT0FBUixDQUFnQkMsWUFBaEIsR0FBK0IsR0FBL0I7QUFDQUgsUUFBQUEsUUFBUSxDQUFDTSxhQUFULEdBQXlCLEtBQXpCO0FBQ0FOLFFBQUFBLFFBQVEsQ0FBQ08sT0FBVCxHQUFtQixLQUFuQjtBQUNBUCxRQUFBQSxRQUFRLENBQUNRLEtBQVQsR0FBaUIsRUFBakI7QUFDQVosUUFBQUEsT0FBTyxDQUFDUSxTQUFSLENBQWtCSyxHQUFsQixDQUFzQixrQkFBdEI7QUFDQTtBQUVKOztBQUNBLFdBQUssR0FBTDtBQUNBO0FBQ0liLFFBQUFBLE9BQU8sQ0FBQ00sT0FBUixDQUFnQkMsWUFBaEIsR0FBK0IsR0FBL0I7QUFDQUgsUUFBQUEsUUFBUSxDQUFDTSxhQUFULEdBQXlCLEtBQXpCO0FBQ0FOLFFBQUFBLFFBQVEsQ0FBQ08sT0FBVCxHQUFtQixJQUFuQjtBQUNBUCxRQUFBQSxRQUFRLENBQUNRLEtBQVQsR0FBaUIsQ0FBakI7QUFDQVosUUFBQUEsT0FBTyxDQUFDUSxTQUFSLENBQWtCSyxHQUFsQixDQUFzQixnQkFBdEI7QUFDQTtBQTNCUixLQU5TLENBb0NUO0FBQ0E7OztBQUNBbEIsSUFBQUEsNkNBQUMsQ0FBQ1MsUUFBRCxDQUFELENBQVlVLE9BQVosQ0FBb0IsT0FBcEI7QUFDSDtBQUNKLENBL0NEO0FBaURBLENBQUNsQixRQUFRLENBQUNtQixnQkFBVCxDQUEwQiw4Q0FBMUIsS0FBNkUsRUFBOUUsRUFBa0ZDLE9BQWxGLENBQTBGLFVBQUNDLEtBQUQsRUFBVztBQUFFQSxFQUFBQSxLQUFLLENBQUNQLGFBQU4sR0FBc0IsSUFBdEI7QUFBNkIsQ0FBcEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL2Zvcm1zL2ZpZWxkcy9pbmRldGVybWluYXRlLmpzP2Q2MzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BhZ2VzLWZpbHRlcnMnKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCB3cmFwcGVyID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJy5jaGVja2JveGVzLmluZGV0ZXJtaW5hdGUnKTtcblxuICAgIGlmICh3cmFwcGVyKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGNvbnN0IGNoZWNrYm94ID0gd3JhcHBlci5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06bm90KFtkaXNhYmxlZF0pJyk7XG4gICAgICAgIGNvbnN0IGNoZWNrU3RhdHVzID0gd3JhcHBlci5kYXRhc2V0Ll9jaGVja1N0YXR1cztcbiAgICAgICAgd3JhcHBlci5jbGFzc0xpc3QucmVtb3ZlKCdzdGF0dXMtY2hlY2tlZCcsICdzdGF0dXMtdW5jaGVja2VkJywgJ3N0YXR1cy1pbmRldGVybWluYXRlJyk7XG5cbiAgICAgICAgc3dpdGNoIChjaGVja1N0YXR1cykge1xuICAgICAgICAgICAgLy8gY2hlY2tlZCwgZ29pbmcgaW5kZXRlcm1pbmF0ZVxuICAgICAgICAgICAgY2FzZSAnMSc6XG4gICAgICAgICAgICAgICAgd3JhcHBlci5kYXRhc2V0Ll9jaGVja1N0YXR1cyA9ICcyJztcbiAgICAgICAgICAgICAgICBjaGVja2JveC5pbmRldGVybWluYXRlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBjaGVja2JveC5jaGVja2VkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgY2hlY2tib3gudmFsdWUgPSAwO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnc3RhdHVzLWluZGV0ZXJtaW5hdGUnKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgLy8gaW5kZXRlcm1pbmF0ZSwgZ29pbmcgdW5jaGVja2VkXG4gICAgICAgICAgICBjYXNlICcyJzpcbiAgICAgICAgICAgICAgICB3cmFwcGVyLmRhdGFzZXQuX2NoZWNrU3RhdHVzID0gJzAnO1xuICAgICAgICAgICAgICAgIGNoZWNrYm94LmluZGV0ZXJtaW5hdGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBjaGVja2JveC5jaGVja2VkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgY2hlY2tib3gudmFsdWUgPSAnJztcbiAgICAgICAgICAgICAgICB3cmFwcGVyLmNsYXNzTGlzdC5hZGQoJ3N0YXR1cy11bmNoZWNrZWQnKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgLy8gdW5jaGVja2VkLCBnb2luZyBjaGVja2VkXG4gICAgICAgICAgICBjYXNlICcwJzpcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgd3JhcHBlci5kYXRhc2V0Ll9jaGVja1N0YXR1cyA9ICcxJztcbiAgICAgICAgICAgICAgICBjaGVja2JveC5pbmRldGVybWluYXRlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgY2hlY2tib3gudmFsdWUgPSAxO1xuICAgICAgICAgICAgICAgIHdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnc3RhdHVzLWNoZWNrZWQnKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNvbnN0IGlucHV0ID0gbmV3IEN1c3RvbUV2ZW50KCdpbnB1dCcsIHsgZGV0YWlsOiB7IHRhcmdldDogY2hlY2tib3ggfX0pO1xuICAgICAgICAvLyBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGlucHV0KTtcbiAgICAgICAgJChjaGVja2JveCkudHJpZ2dlcignaW5wdXQnKTtcbiAgICB9XG59KTtcblxuKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXVtpbmRldGVybWluYXRlPVwidHJ1ZVwiXScpIHx8IFtdKS5mb3JFYWNoKChpbnB1dCkgPT4geyBpbnB1dC5pbmRldGVybWluYXRlID0gdHJ1ZTsgfSk7XG4iXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicXVlcnlTZWxlY3RvciIsIndyYXBwZXIiLCJ0YXJnZXQiLCJjbG9zZXN0IiwicHJldmVudERlZmF1bHQiLCJjaGVja2JveCIsImNoZWNrU3RhdHVzIiwiZGF0YXNldCIsIl9jaGVja1N0YXR1cyIsImNsYXNzTGlzdCIsInJlbW92ZSIsImluZGV0ZXJtaW5hdGUiLCJjaGVja2VkIiwidmFsdWUiLCJhZGQiLCJ0cmlnZ2VyIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJpbnB1dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/forms/fields/indeterminate.js\n");

/***/ }),

/***/ "./app/forms/fields/index.js":
/*!***********************************!*\
  !*** ./app/forms/fields/index.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _filepicker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filepicker */ \"./app/forms/fields/filepicker.js\");\n/* harmony import */ var _selectize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selectize */ \"./app/forms/fields/selectize.js\");\n/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array */ \"./app/forms/fields/array.js\");\n/* harmony import */ var _collections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collections */ \"./app/forms/fields/collections.js\");\n/* harmony import */ var _datetime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./datetime */ \"./app/forms/fields/datetime.js\");\n/* harmony import */ var _editor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./editor */ \"./app/forms/fields/editor.js\");\n/* harmony import */ var _colorpicker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./colorpicker */ \"./app/forms/fields/colorpicker.js\");\n/* harmony import */ var _files__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./files */ \"./app/forms/fields/files.js\");\n/* harmony import */ var _folder__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./folder */ \"./app/forms/fields/folder.js\");\n/* harmony import */ var _selectunique__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./selectunique */ \"./app/forms/fields/selectunique.js\");\n/* harmony import */ var _iconpicker__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./iconpicker */ \"./app/forms/fields/iconpicker.js\");\n/* harmony import */ var _cron__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cron */ \"./app/forms/fields/cron.js\");\n/* harmony import */ var _parents__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parents */ \"./app/forms/fields/parents.js\");\n/* harmony import */ var _acl_picker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./acl-picker */ \"./app/forms/fields/acl-picker.js\");\n/* harmony import */ var _permissions__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./permissions */ \"./app/forms/fields/permissions.js\");\n/* harmony import */ var _indeterminate__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./indeterminate */ \"./app/forms/fields/indeterminate.js\");\n/* harmony import */ var _mediapicker__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./mediapicker */ \"./app/forms/fields/mediapicker.js\");\n/* harmony import */ var _multilevel__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./multilevel */ \"./app/forms/fields/multilevel.js\");\n/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./text */ \"./app/forms/fields/text.js\");\n/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./range */ \"./app/forms/fields/range.js\");\n/* harmony import */ var _elements__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./elements */ \"./app/forms/fields/elements.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  FilepickerField: {\n    FilepickerField: _filepicker__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    Instance: _filepicker__WEBPACK_IMPORTED_MODULE_0__.Instance\n  },\n  SelectizeField: {\n    SelectizeField: _selectize__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Instance: _selectize__WEBPACK_IMPORTED_MODULE_1__.Instance\n  },\n  ArrayField: {\n    ArrayField: _array__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    Instance: _array__WEBPACK_IMPORTED_MODULE_2__.Instance\n  },\n  CollectionsField: {\n    CollectionsField: _collections__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    Instance: _collections__WEBPACK_IMPORTED_MODULE_3__.Instance\n  },\n  DateTimeField: {\n    DateTimeField: _datetime__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    Instance: _datetime__WEBPACK_IMPORTED_MODULE_4__.Instance\n  },\n  EditorField: {\n    EditorField: _editor__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    Instance: _editor__WEBPACK_IMPORTED_MODULE_5__.Instance\n  },\n  ColorpickerField: {\n    ColorpickerField: _colorpicker__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    Instance: _colorpicker__WEBPACK_IMPORTED_MODULE_6__.Instance\n  },\n  FilesField: {\n    FilesField: _files__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    Instance: _files__WEBPACK_IMPORTED_MODULE_7__.Instance\n  },\n  FolderField: {\n    Regenerate: _folder__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\n  },\n  SelectUniqueField: {\n    SelectUniqueField: _selectunique__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    Instance: _selectunique__WEBPACK_IMPORTED_MODULE_9__.Instance\n  },\n  IconpickerField: {\n    IconpickerField: _iconpicker__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    Instance: _iconpicker__WEBPACK_IMPORTED_MODULE_10__.Instance\n  },\n  CronField: {\n    CronField: _cron__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n    Instance: _cron__WEBPACK_IMPORTED_MODULE_11__.Instance\n  },\n  ParentsField: {\n    ParentsField: _parents__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n    Instance: _parents__WEBPACK_IMPORTED_MODULE_12__.Instances\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZm9ybXMvZmllbGRzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxpRUFBZTtBQUNYQSxFQUFBQSxlQUFlLEVBQUU7QUFDYkEsSUFBQUEsZUFBZSxFQUFmQSxtREFEYTtBQUViQyxJQUFBQSxRQUFRLEVBQUVDLGlEQUF1QkE7QUFGcEIsR0FETjtBQUtYQyxFQUFBQSxjQUFjLEVBQUU7QUFDWkEsSUFBQUEsY0FBYyxFQUFkQSxrREFEWTtBQUVaRixJQUFBQSxRQUFRLEVBQUVHLGdEQUFzQkE7QUFGcEIsR0FMTDtBQVNYQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkEsSUFBQUEsVUFBVSxFQUFWQSw4Q0FEUTtBQUVSSixJQUFBQSxRQUFRLEVBQUVLLDRDQUFrQkE7QUFGcEIsR0FURDtBQWFYQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNkQSxJQUFBQSxnQkFBZ0IsRUFBaEJBLG9EQURjO0FBRWROLElBQUFBLFFBQVEsRUFBRU8sa0RBQXdCQTtBQUZwQixHQWJQO0FBaUJYQyxFQUFBQSxhQUFhLEVBQUU7QUFDWEEsSUFBQUEsYUFBYSxFQUFiQSxpREFEVztBQUVYUixJQUFBQSxRQUFRLEVBQUVTLCtDQUFxQkE7QUFGcEIsR0FqQko7QUFxQlhDLEVBQUFBLFdBQVcsRUFBRTtBQUNUQSxJQUFBQSxXQUFXLEVBQVhBLCtDQURTO0FBRVRWLElBQUFBLFFBQVEsRUFBRVcsNkNBQW1CQTtBQUZwQixHQXJCRjtBQXlCWEMsRUFBQUEsZ0JBQWdCLEVBQUU7QUFDZEEsSUFBQUEsZ0JBQWdCLEVBQWhCQSxvREFEYztBQUVkWixJQUFBQSxRQUFRLEVBQUVhLGtEQUF3QkE7QUFGcEIsR0F6QlA7QUE2QlhDLEVBQUFBLFVBQVUsRUFBRTtBQUNSQSxJQUFBQSxVQUFVLEVBQVZBLDhDQURRO0FBRVJkLElBQUFBLFFBQVEsRUFBRWUsNENBQWtCQTtBQUZwQixHQTdCRDtBQWlDWFcsRUFBQUEsV0FBVyxFQUFFO0FBQ1RDLElBQUFBLFVBQVUsRUFBRVgsK0NBQW1CQTtBQUR0QixHQWpDRjtBQW9DWEMsRUFBQUEsaUJBQWlCLEVBQUU7QUFDZkEsSUFBQUEsaUJBQWlCLEVBQWpCQSxxREFEZTtBQUVmakIsSUFBQUEsUUFBUSxFQUFFa0IsbURBQW9CQTtBQUZmLEdBcENSO0FBd0NYQyxFQUFBQSxlQUFlLEVBQUU7QUFDYkEsSUFBQUEsZUFBZSxFQUFmQSxvREFEYTtBQUVibkIsSUFBQUEsUUFBUSxFQUFFb0Isa0RBQWtCQTtBQUZmLEdBeENOO0FBNENYQyxFQUFBQSxTQUFTLEVBQUU7QUFDUEEsSUFBQUEsU0FBUyxFQUFUQSw4Q0FETztBQUVQckIsSUFBQUEsUUFBUSxFQUFFc0IsNENBQWlCQTtBQUZwQixHQTVDQTtBQWdEWEMsRUFBQUEsWUFBWSxFQUFFO0FBQ1ZBLElBQUFBLFlBQVksRUFBWkEsaURBRFU7QUFFVnZCLElBQUFBLFFBQVEsRUFBRXlCLGdEQUFvQkE7QUFGcEI7QUFoREgsQ0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvZm9ybXMvZmllbGRzL2luZGV4LmpzPzE4YjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZpbGVwaWNrZXJGaWVsZCwgeyBJbnN0YW5jZSBhcyBGaWxlcGlja2VyRmllbGRJbnN0YW5jZSB9IGZyb20gJy4vZmlsZXBpY2tlcic7XG5pbXBvcnQgU2VsZWN0aXplRmllbGQsIHsgSW5zdGFuY2UgYXMgU2VsZWN0aXplRmllbGRJbnN0YW5jZSB9IGZyb20gJy4vc2VsZWN0aXplJztcbmltcG9ydCBBcnJheUZpZWxkLCB7IEluc3RhbmNlIGFzIEFycmF5RmllbGRJbnN0YW5jZSB9IGZyb20gJy4vYXJyYXknO1xuaW1wb3J0IENvbGxlY3Rpb25zRmllbGQsIHsgSW5zdGFuY2UgYXMgQ29sbGVjdGlvbnNGaWVsZEluc3RhbmNlIH0gZnJvbSAnLi9jb2xsZWN0aW9ucyc7XG5pbXBvcnQgRGF0ZVRpbWVGaWVsZCwgeyBJbnN0YW5jZSBhcyBEYXRlVGltZUZpZWxkSW5zdGFuY2UgfSBmcm9tICcuL2RhdGV0aW1lJztcbmltcG9ydCBFZGl0b3JGaWVsZCwgeyBJbnN0YW5jZSBhcyBFZGl0b3JGaWVsZEluc3RhbmNlIH0gZnJvbSAnLi9lZGl0b3InO1xuaW1wb3J0IENvbG9ycGlja2VyRmllbGQsIHsgSW5zdGFuY2UgYXMgQ29sb3JwaWNrZXJGaWVsZEluc3RhbmNlIH0gZnJvbSAnLi9jb2xvcnBpY2tlcic7XG5pbXBvcnQgRmlsZXNGaWVsZCwgeyBJbnN0YW5jZSBhcyBGaWxlc0ZpZWxkSW5zdGFuY2UgfSBmcm9tICcuL2ZpbGVzJztcbmltcG9ydCBGb2xkZXJGaWVsZEluc3RhbmNlIGZyb20gJy4vZm9sZGVyJztcbmltcG9ydCBTZWxlY3RVbmlxdWVGaWVsZCwgeyBJbnN0YW5jZSBhcyBTZWxlY3RVbmlxdWVJbnN0YW5jZSB9IGZyb20gJy4vc2VsZWN0dW5pcXVlJztcbmltcG9ydCBJY29ucGlja2VyRmllbGQsIHsgSW5zdGFuY2UgYXMgSWNvbnBpY2tlckluc3RhbmNlIH0gZnJvbSAnLi9pY29ucGlja2VyJztcbmltcG9ydCBDcm9uRmllbGQsIHsgSW5zdGFuY2UgYXMgQ3JvbkZpZWxkSW5zdGFuY2UgfSBmcm9tICcuL2Nyb24nO1xuaW1wb3J0IFBhcmVudHNGaWVsZCwgeyBJbnN0YW5jZXMgYXMgUGFyZW50c0ZpZWxkSW5zdGFuY2UgfSBmcm9tICcuL3BhcmVudHMnO1xuXG5pbXBvcnQgJy4vYWNsLXBpY2tlcic7XG5pbXBvcnQgJy4vcGVybWlzc2lvbnMnO1xuaW1wb3J0ICcuL2luZGV0ZXJtaW5hdGUnO1xuaW1wb3J0ICcuL21lZGlhcGlja2VyJztcbmltcG9ydCAnLi9tdWx0aWxldmVsJztcbmltcG9ydCAnLi90ZXh0JztcbmltcG9ydCAnLi9yYW5nZSc7XG5pbXBvcnQgJy4vZWxlbWVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgRmlsZXBpY2tlckZpZWxkOiB7XG4gICAgICAgIEZpbGVwaWNrZXJGaWVsZCxcbiAgICAgICAgSW5zdGFuY2U6IEZpbGVwaWNrZXJGaWVsZEluc3RhbmNlXG4gICAgfSxcbiAgICBTZWxlY3RpemVGaWVsZDoge1xuICAgICAgICBTZWxlY3RpemVGaWVsZCxcbiAgICAgICAgSW5zdGFuY2U6IFNlbGVjdGl6ZUZpZWxkSW5zdGFuY2VcbiAgICB9LFxuICAgIEFycmF5RmllbGQ6IHtcbiAgICAgICAgQXJyYXlGaWVsZCxcbiAgICAgICAgSW5zdGFuY2U6IEFycmF5RmllbGRJbnN0YW5jZVxuICAgIH0sXG4gICAgQ29sbGVjdGlvbnNGaWVsZDoge1xuICAgICAgICBDb2xsZWN0aW9uc0ZpZWxkLFxuICAgICAgICBJbnN0YW5jZTogQ29sbGVjdGlvbnNGaWVsZEluc3RhbmNlXG4gICAgfSxcbiAgICBEYXRlVGltZUZpZWxkOiB7XG4gICAgICAgIERhdGVUaW1lRmllbGQsXG4gICAgICAgIEluc3RhbmNlOiBEYXRlVGltZUZpZWxkSW5zdGFuY2VcbiAgICB9LFxuICAgIEVkaXRvckZpZWxkOiB7XG4gICAgICAgIEVkaXRvckZpZWxkLFxuICAgICAgICBJbnN0YW5jZTogRWRpdG9yRmllbGRJbnN0YW5jZVxuICAgIH0sXG4gICAgQ29sb3JwaWNrZXJGaWVsZDoge1xuICAgICAgICBDb2xvcnBpY2tlckZpZWxkLFxuICAgICAgICBJbnN0YW5jZTogQ29sb3JwaWNrZXJGaWVsZEluc3RhbmNlXG4gICAgfSxcbiAgICBGaWxlc0ZpZWxkOiB7XG4gICAgICAgIEZpbGVzRmllbGQsXG4gICAgICAgIEluc3RhbmNlOiBGaWxlc0ZpZWxkSW5zdGFuY2VcbiAgICB9LFxuICAgIEZvbGRlckZpZWxkOiB7XG4gICAgICAgIFJlZ2VuZXJhdGU6IEZvbGRlckZpZWxkSW5zdGFuY2VcbiAgICB9LFxuICAgIFNlbGVjdFVuaXF1ZUZpZWxkOiB7XG4gICAgICAgIFNlbGVjdFVuaXF1ZUZpZWxkLFxuICAgICAgICBJbnN0YW5jZTogU2VsZWN0VW5pcXVlSW5zdGFuY2VcbiAgICB9LFxuICAgIEljb25waWNrZXJGaWVsZDoge1xuICAgICAgICBJY29ucGlja2VyRmllbGQsXG4gICAgICAgIEluc3RhbmNlOiBJY29ucGlja2VySW5zdGFuY2VcbiAgICB9LFxuICAgIENyb25GaWVsZDoge1xuICAgICAgICBDcm9uRmllbGQsXG4gICAgICAgIEluc3RhbmNlOiBDcm9uRmllbGRJbnN0YW5jZVxuICAgIH0sXG4gICAgUGFyZW50c0ZpZWxkOiB7XG4gICAgICAgIFBhcmVudHNGaWVsZCxcbiAgICAgICAgSW5zdGFuY2U6IFBhcmVudHNGaWVsZEluc3RhbmNlXG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJGaWxlcGlja2VyRmllbGQiLCJJbnN0YW5jZSIsIkZpbGVwaWNrZXJGaWVsZEluc3RhbmNlIiwiU2VsZWN0aXplRmllbGQiLCJTZWxlY3RpemVGaWVsZEluc3RhbmNlIiwiQXJyYXlGaWVsZCIsIkFycmF5RmllbGRJbnN0YW5jZSIsIkNvbGxlY3Rpb25zRmllbGQiLCJDb2xsZWN0aW9uc0ZpZWxkSW5zdGFuY2UiLCJEYXRlVGltZUZpZWxkIiwiRGF0ZVRpbWVGaWVsZEluc3RhbmNlIiwiRWRpdG9yRmllbGQiLCJFZGl0b3JGaWVsZEluc3RhbmNlIiwiQ29sb3JwaWNrZXJGaWVsZCIsIkNvbG9ycGlja2VyRmllbGRJbnN0YW5jZSIsIkZpbGVzRmllbGQiLCJGaWxlc0ZpZWxkSW5zdGFuY2UiLCJGb2xkZXJGaWVsZEluc3RhbmNlIiwiU2VsZWN0VW5pcXVlRmllbGQiLCJTZWxlY3RVbmlxdWVJbnN0YW5jZSIsIkljb25waWNrZXJGaWVsZCIsIkljb25waWNrZXJJbnN0YW5jZSIsIkNyb25GaWVsZCIsIkNyb25GaWVsZEluc3RhbmNlIiwiUGFyZW50c0ZpZWxkIiwiSW5zdGFuY2VzIiwiUGFyZW50c0ZpZWxkSW5zdGFuY2UiLCJGb2xkZXJGaWVsZCIsIlJlZ2VuZXJhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/forms/fields/index.js\n");

/***/ }),

/***/ "./app/forms/fields/mediapicker.js":
/*!*****************************************!*\
  !*** ./app/forms/fields/mediapicker.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pages_tree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../pages/tree */ \"./app/pages/tree.js\");\n\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n  var modal = '';\n  var body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body'); // Thumb Resizer\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('input change', '.media-container .media-range', function (event) {\n    var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n    var container = target.closest('.remodal');\n    var cards = container.find('.media-container div.card-item');\n    var width = target.val() + 'px';\n    cards.each(function () {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).css('width', width);\n    });\n  });\n  body.on('click', '[data-mediapicker-modal-trigger]', function (event) {\n    var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n    var modal_identifier = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('grav-mediapicker-unique-identifier');\n    var modal_element = body.find(\"[data-remodal-unique-identifier=\\\"\".concat(modal_identifier, \"\\\"]\"));\n    modal = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[modal_element.data('remodal')];\n\n    if (!modal) {\n      modal_element.remodal();\n      modal = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[modal_element.data('remodal')];\n    }\n\n    modal.open();\n    modal.dataField = element.find('input'); // load all media\n\n    modal_element.find('.js__files').trigger('fillView');\n    setTimeout(function () {\n      return _pages_tree__WEBPACK_IMPORTED_MODULE_1__.Instance.reload();\n    }, 100);\n  });\n  /* handle media modal click actions */\n\n  body.on('click', '[data-remodal-mediapicker] .media-container.in-modal .admin-media-details a', function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var val = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).parents('.js__media-element').data('file-url');\n    var string = val.replace(/ /g, '%20');\n    modal.dataField.val(string);\n    modal.close();\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvZm9ybXMvZmllbGRzL21lZGlhcGlja2VyLmpzP2Q5MWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7IEluc3RhbmNlIGFzIHBhZ2VzVHJlZSB9IGZyb20gJy4uLy4uL3BhZ2VzL3RyZWUnO1xuXG4kKGZ1bmN0aW9uKCkge1xuICAgIGxldCBtb2RhbCA9ICcnO1xuICAgIGxldCBib2R5ID0gJCgnYm9keScpO1xuXG4gICAgLy8gVGh1bWIgUmVzaXplclxuICAgICQoZG9jdW1lbnQpLm9uKCdpbnB1dCBjaGFuZ2UnLCAnLm1lZGlhLWNvbnRhaW5lciAubWVkaWEtcmFuZ2UnLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSB0YXJnZXQuY2xvc2VzdCgnLnJlbW9kYWwnKTtcbiAgICAgICAgbGV0IGNhcmRzID0gY29udGFpbmVyLmZpbmQoJy5tZWRpYS1jb250YWluZXIgZGl2LmNhcmQtaXRlbScpO1xuICAgICAgICBsZXQgd2lkdGggPSB0YXJnZXQudmFsKCkgKyAncHgnO1xuICAgICAgICBjYXJkcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJCh0aGlzKS5jc3MoJ3dpZHRoJywgd2lkdGgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIGJvZHkub24oJ2NsaWNrJywgJ1tkYXRhLW1lZGlhcGlja2VyLW1vZGFsLXRyaWdnZXJdJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XG4gICAgICAgIGxldCBtb2RhbF9pZGVudGlmaWVyID0gJCh0aGlzKS5kYXRhKCdncmF2LW1lZGlhcGlja2VyLXVuaXF1ZS1pZGVudGlmaWVyJyk7XG4gICAgICAgIGxldCBtb2RhbF9lbGVtZW50ID0gYm9keS5maW5kKGBbZGF0YS1yZW1vZGFsLXVuaXF1ZS1pZGVudGlmaWVyPVwiJHttb2RhbF9pZGVudGlmaWVyfVwiXWApO1xuICAgICAgICBtb2RhbCA9ICQucmVtb2RhbC5sb29rdXBbbW9kYWxfZWxlbWVudC5kYXRhKCdyZW1vZGFsJyldO1xuXG4gICAgICAgIGlmICghbW9kYWwpIHtcbiAgICAgICAgICAgIG1vZGFsX2VsZW1lbnQucmVtb2RhbCgpO1xuICAgICAgICAgICAgbW9kYWwgPSAkLnJlbW9kYWwubG9va3VwW21vZGFsX2VsZW1lbnQuZGF0YSgncmVtb2RhbCcpXTtcbiAgICAgICAgfVxuXG4gICAgICAgIG1vZGFsLm9wZW4oKTtcbiAgICAgICAgbW9kYWwuZGF0YUZpZWxkID0gZWxlbWVudC5maW5kKCdpbnB1dCcpO1xuXG4gICAgICAgIC8vIGxvYWQgYWxsIG1lZGlhXG4gICAgICAgIG1vZGFsX2VsZW1lbnQuZmluZCgnLmpzX19maWxlcycpLnRyaWdnZXIoJ2ZpbGxWaWV3Jyk7XG5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiBwYWdlc1RyZWUucmVsb2FkKCksIDEwMCk7XG4gICAgfSk7XG5cbiAgICAvKiBoYW5kbGUgbWVkaWEgbW9kYWwgY2xpY2sgYWN0aW9ucyAqL1xuICAgIGJvZHkub24oJ2NsaWNrJywgJ1tkYXRhLXJlbW9kYWwtbWVkaWFwaWNrZXJdIC5tZWRpYS1jb250YWluZXIuaW4tbW9kYWwgLmFkbWluLW1lZGlhLWRldGFpbHMgYScsIChldmVudCkgPT4ge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgICBsZXQgdmFsID0gJChldmVudC50YXJnZXQpLnBhcmVudHMoJy5qc19fbWVkaWEtZWxlbWVudCcpLmRhdGEoJ2ZpbGUtdXJsJyk7XG4gICAgICAgIGxldCBzdHJpbmcgPSB2YWwucmVwbGFjZSgvIC9nLCAnJTIwJyk7XG5cbiAgICAgICAgbW9kYWwuZGF0YUZpZWxkLnZhbChzdHJpbmcpO1xuXG4gICAgICAgIG1vZGFsLmNsb3NlKCk7XG4gICAgfSk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwiSW5zdGFuY2UiLCJwYWdlc1RyZWUiLCJtb2RhbCIsImJvZHkiLCJkb2N1bWVudCIsIm9uIiwiZXZlbnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiY29udGFpbmVyIiwiY2xvc2VzdCIsImNhcmRzIiwiZmluZCIsIndpZHRoIiwidmFsIiwiZWFjaCIsImNzcyIsImVsZW1lbnQiLCJtb2RhbF9pZGVudGlmaWVyIiwiZGF0YSIsIm1vZGFsX2VsZW1lbnQiLCJyZW1vZGFsIiwibG9va3VwIiwib3BlbiIsImRhdGFGaWVsZCIsInRyaWdnZXIiLCJzZXRUaW1lb3V0IiwicmVsb2FkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJwYXJlbnRzIiwic3RyaW5nIiwicmVwbGFjZSIsImNsb3NlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/forms/fields/mediapicker.js\n");

/***/ }),

/***/ "./app/forms/fields/multilevel.js":
/*!****************************************!*\
  !*** ./app/forms/fields/multilevel.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n  var getField = function getField(level, name) {\n    var levelMargin = level * 50;\n    var top = level === 0 ? 'top' : '';\n    var the_name = 'name=\"' + name + '\"';\n\n    if (level === 0) {\n      // top\n      the_name = 'data-attr-name=\"' + name + '\"';\n    }\n\n    var marginDir = window.getComputedStyle(document.body).direction === 'ltr' ? 'margin-left' : 'margin-right';\n    var field = \"\\n            <div class=\\\"element-wrapper\\\">\\n                <div class=\\\"form-row array-field-value_only js__multilevel-field \".concat(top, \"\\\"\\n                    data-grav-array-type=\\\"row\\\">\\n                    <input\\n                        type=\\\"text\\\"\\n                        \").concat(the_name, \"\\n                        placeholder=\\\"Enter value\\\"\\n                        style=\\\"\").concat(marginDir, \": \").concat(levelMargin, \"px\\\"\\n                        value=\\\"\\\" />\\n\\n                    <span class=\\\"fa fa-minus js__remove-item\\\"></span>\\n                    <span class=\\\"fa fa-plus js__add-sibling hidden\\\" data-level=\\\"\").concat(level, \"\\\" ></span>\\n                    <span class=\\\"fa fa-plus-circle js__add-children hidden\\\" data-level=\\\"\").concat(level, \"\\\"></span>\\n                </div>\\n            </div>\\n        \");\n    return field;\n  };\n\n  var hasChildInputs = function hasChildInputs($element) {\n    if ($element.attr('name')) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var getTopItems = function getTopItems(element) {\n    return jquery__WEBPACK_IMPORTED_MODULE_0___default()(element + ' .js__multilevel-field.top');\n  };\n\n  var refreshControls = function refreshControls(unique_identifier) {\n    var element = '[data-grav-multilevel-field]';\n\n    if (unique_identifier) {\n      element = '[data-grav-multilevel-field][data-id=\"' + unique_identifier + '\"]';\n    }\n\n    var hideButtons = function hideButtons() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(element + ' .js__add-sibling').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(element + ' .js__add-children').addClass('hidden');\n    };\n\n    var restoreAddSiblingButtons = function restoreAddSiblingButtons() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(element + ' .children-wrapper').each(function () {\n        var elements = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).children();\n        elements.last().each(function () {\n          var field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n\n          if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass('js__multilevel-field')) {\n            field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.js__multilevel-field').first();\n          }\n\n          field.find('.js__add-sibling').removeClass('hidden');\n        });\n      }); // add sibling to the last top element\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(element + ' .js__multilevel-field.top').last().find('.js__add-sibling').removeClass('hidden');\n    };\n\n    var restoreAddChildrenButtons = function restoreAddChildrenButtons() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(element + ' .js__multilevel-field').each(function () {\n        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).siblings('.children-wrapper').length === 0 || jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).siblings('.children-wrapper').find('.js__multilevel-field').length === 0) {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.js__add-children').removeClass('hidden');\n        }\n      });\n    };\n\n    var preventRemovingLastTopItem = function preventRemovingLastTopItem() {\n      var top_items = getTopItems(element);\n\n      if (top_items.length === 1) {\n        top_items.first().find('.js__remove-item').addClass('hidden');\n      }\n    };\n\n    hideButtons();\n    restoreAddSiblingButtons();\n    restoreAddChildrenButtons();\n    preventRemovingLastTopItem();\n  };\n\n  var changeAllOccurrencesInTree = function changeAllOccurrencesInTree($el, current_name, new_name) {\n    $el.parents('[data-grav-multilevel-field]').find('input').each(function () {\n      var $input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n\n      if ($input.attr('name')) {\n        $input.attr('name', $input.attr('name').replace(current_name, new_name));\n      }\n\n      if ($input.attr('data-attr-name')) {\n        $input.attr('data-attr-name', $input.attr('data-attr-name').replace(current_name, new_name));\n      }\n    });\n  };\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {\n    refreshControls();\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('mouseleave', '[data-grav-multilevel-field]', function (event) {\n    var top_items = getTopItems('[data-id=\"' + jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('id') + '\"]');\n    var has_top_items_without_children = false;\n    var element_content = '';\n    top_items.each(function () {\n      var item = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n\n      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(item).siblings('.children-wrapper').find('input').length === 0) {\n        has_top_items_without_children = true;\n        element_content = item.find('input').val();\n      }\n    });\n\n    if (has_top_items_without_children) {\n      if (element_content) {\n        alert('Warning: if you save now, the element ' + element_content + ', without children, will be removed, because it\\'s invalid YAML');\n      } else {\n        alert('Warning: if you save now, the top elements without children will be removed, because it\\'s invalid YAML');\n      }\n    }\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-grav-multilevel-field] .js__add-children', function (event) {\n    var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n    var unique_container_id = element.closest('.js__multilevel-field').data('id');\n    var level = element.data('level') + 1;\n\n    var getParentOfElement = function getParentOfElement(element) {\n      var parent = element.closest('.js__multilevel-field').parent().first();\n\n      if (parent.find('.children-wrapper').length === 0) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(parent).append('<div class=\"children-wrapper\"></div>');\n      }\n\n      parent = parent.find('.children-wrapper').first();\n      return parent;\n    };\n\n    var getNameFromParentInput = function getNameFromParentInput(parentInput, attr) {\n      if (parentInput.hasClass('children-wrapper')) {\n        parentInput = parentInput.siblings('.js__multilevel-field').first().find('input');\n      }\n\n      return parentInput.attr(attr) + '[' + parentInput.val() + ']';\n    };\n\n    var getInputFromChildrenWrapper = function getInputFromChildrenWrapper(parentChildrenWrapper) {\n      return parentChildrenWrapper.siblings('.js__multilevel-field').first().find('input');\n    };\n\n    var parentChildrenWrapper = getParentOfElement(element);\n    var parentInput = getInputFromChildrenWrapper(parentChildrenWrapper);\n    var attr = 'name';\n\n    if (parentInput.closest('.js__multilevel-field').hasClass('top')) {\n      attr = 'data-attr-name';\n    }\n\n    parentInput.attr(attr, parentInput.attr(attr).replace('[]', ''));\n    var name = getNameFromParentInput(parentInput, attr);\n    var field = getField(level, name);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentChildrenWrapper).append(field);\n    refreshControls(unique_container_id);\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-grav-multilevel-field] .js__add-sibling', function (event) {\n    var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n    var unique_container_id = element.closest('.js__multilevel-field').data('id');\n    var level = element.data('level');\n    element.closest('.children-wrapper').find('.js__add-sibling').addClass('hidden');\n    var sibling = null;\n    var is_top = false;\n\n    if (element.closest('.js__multilevel-field').hasClass('top')) {\n      is_top = true;\n    }\n\n    if (is_top) {\n      sibling = element.closest('.js__multilevel-field').first().find('input').last();\n    } else {\n      sibling = element.siblings('input').first();\n\n      if (!sibling) {\n        sibling = element.closest('.children-wrapper').first().find('input').last();\n      }\n    }\n\n    var getParentOfElement = function getParentOfElement(element) {\n      var parent = element.closest('.js__multilevel-field').parent().first();\n\n      if (!parent.hasClass('element-wrapper')) {\n        if (parent.find('.element-wrapper').length === 0) {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(parent).append('<div class=\"element-wrapper\"></div>');\n        }\n\n        parent = parent.find('.element-wrapper').first();\n      }\n\n      return parent;\n    };\n\n    var getNameFromSibling = function getNameFromSibling(parent, sibling) {\n      var is_top = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var name = sibling.attr('name');\n\n      if (hasChildInputs(sibling)) {\n        var val = sibling.data('attr-name') + '[]';\n        sibling.removeAttr('name');\n        return val;\n      }\n\n      var last_index = name.lastIndexOf('[');\n      var almost_there = name.substr(last_index + 1);\n      var last_tag = almost_there.substr(0, almost_there.length - 1);\n\n      if (jquery__WEBPACK_IMPORTED_MODULE_0___default().isNumeric(last_tag)) {\n        name = name.replace('[' + last_tag + ']', '[' + (parseInt(last_tag, 10) + 1) + ']');\n      } else {\n        if (is_top) {\n          name = name.replace('[' + last_tag + ']', '');\n        } else {\n          name = name + '[1]'; // change sibling name attr if necessary\n\n          if (sibling.attr('name').slice('-2') !== '[0]') {\n            changeAllOccurrencesInTree(sibling, sibling.attr('name'), sibling.attr('name') + '[0]');\n          }\n        }\n      }\n\n      return name;\n    };\n\n    var parent = getParentOfElement(element);\n    var name = getNameFromSibling(parent, sibling, is_top);\n    var field = getField(level, name);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(field).insertAfter(parent);\n    refreshControls(unique_container_id);\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-grav-multilevel-field] .js__remove-item', function (event) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parents('.element-wrapper').first().remove();\n    var unique_container_id = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('.js__multilevel-field').data('id');\n    refreshControls(unique_container_id);\n  }); // Store old value before editing a field\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('focusin', '[data-grav-multilevel-field] input', function (event) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('current-value', jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).val());\n  }); // Handle field edited event\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('change', '[data-grav-multilevel-field] input', function (event) {\n    var $el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n    var old_value = $el.data('current-value');\n    var new_value = $el.val();\n    var full_name = $el.attr('name') || $el.attr('data-attr-name'); // first-level items have `data-attr-name` instead of `name`\n\n    var old_name_attr = full_name + '[' + old_value + ']';\n    var new_name_attr = full_name + '[' + new_value + ']';\n    changeAllOccurrencesInTree($el, old_name_attr, new_name_attr);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/multilevel.js\n");

/***/ }),

/***/ "./app/forms/fields/parents.js":
/*!*************************************!*\
  !*** ./app/forms/fields/parents.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Instances\": () => (/* binding */ Instances),\n/* harmony export */   \"default\": () => (/* binding */ Parents),\n/* harmony export */   \"b64_encode_unicode\": () => (/* binding */ b64_encode_unicode),\n/* harmony export */   \"b64_decode_unicode\": () => (/* binding */ b64_decode_unicode)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_finderjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/finderjs */ \"./app/utils/finderjs.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_2__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar XHRUUID = 0;\nvar Instances = {};\n\nvar Parents = /*#__PURE__*/function () {\n  function Parents(container, field, data) {\n    var _this = this;\n\n    _classCallCheck(this, Parents);\n\n    this.container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n    this.fieldName = field.attr('name');\n    this.field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[name=\\\"\".concat(this.fieldName, \"\\\"]\"));\n    this.data = data;\n    this.parentLabel = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-parents-field-label=\\\"\".concat(this.fieldName, \"\\\"]\"));\n    this.parentName = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-parents-field-name=\\\"\".concat(this.fieldName, \"\\\"]\"));\n    var dataLoad = this.dataLoad;\n    this.finder = new _utils_finderjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.container, function (parent, callback) {\n      return dataLoad.call(_this, parent, callback);\n    }, {\n      labelKey: 'name',\n      defaultPath: this.field.val(),\n      createItemContent: function createItemContent(item) {\n        return Parents.createItemContent(this.config, item);\n      }\n    });\n    /*\n    this.finder.$emitter.on('leaf-selected', (item) => {\n        console.log('selected', item);\n        this.finder.emit('create-column', () => this.createSimpleColumn(item));\n    });\n     this.finder.$emitter.on('item-selected', (selected) => {\n        console.log('selected', selected);\n        // for future use only - create column-card creation for file with details like in macOS finder\n        // this.finder.$emitter('create-column', () => this.createSimpleColumn(selected));\n    }); */\n\n    this.finder.$emitter.on('column-created', function () {\n      _this.container[0].scrollLeft = _this.container[0].scrollWidth - _this.container[0].clientWidth;\n    });\n  }\n\n  _createClass(Parents, [{\n    key: \"createSimpleColumn\",\n    value: function createSimpleColumn(item) {}\n  }, {\n    key: \"dataLoad\",\n    value: function dataLoad(parent, callback) {\n      var _this2 = this;\n\n      if (!parent) {\n        return callback(this.data);\n      }\n\n      if (parent.type !== 'dir' || !parent['has-children']) {\n        return false;\n      }\n\n      var UUID = ++XHRUUID;\n      this.startLoader();\n      jquery__WEBPACK_IMPORTED_MODULE_0___default().ajax({\n        url: \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.config.current_url),\n        method: 'post',\n        data: Object.assign({}, getExtraFormData(this.container), {\n          route: b64_encode_unicode(parent.value),\n          field: this.field.data('fieldName'),\n          action: 'getLevelListing',\n          'admin-nonce': grav_config__WEBPACK_IMPORTED_MODULE_2__.config.admin_nonce\n        }),\n        success: function success(response) {\n          _this2.stopLoader();\n\n          if (response.status === 'error') {\n            _this2.finder.$emitter.emit('create-column', Parents.createErrorColumn(response.message)[0]);\n\n            return false;\n          } // stale request\n\n\n          if (UUID !== XHRUUID) {\n            return false;\n          }\n\n          return callback(response.data);\n        }\n      });\n    }\n  }, {\n    key: \"startLoader\",\n    value: function startLoader() {\n      this.loadingIndicator = Parents.createLoadingColumn();\n      this.finder.$emitter.emit('create-column', this.loadingIndicator[0]);\n      return this.loadingIndicator;\n    }\n  }, {\n    key: \"stopLoader\",\n    value: function stopLoader() {\n      return this.loadingIndicator && this.loadingIndicator.remove();\n    }\n  }], [{\n    key: \"createItemContent\",\n    value: function createItemContent(config, item) {\n      var frag = document.createDocumentFragment();\n      var label = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<span title=\\\"\".concat(item[config.labelKey], \"\\\" />\"));\n      var infoContainer = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<span class=\"info-container\" />');\n      var iconPrepend = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<i />');\n      var iconAppend = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<i />');\n      var badge = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<span class=\"badge\" />');\n      var prependClasses = ['fa'];\n      var appendClasses = ['fa']; // prepend icon\n\n      if (item.children || item.type === 'dir') {\n        prependClasses.push('fa-folder');\n      } else if (item.type === 'root') {\n        prependClasses.push('fa-sitemap');\n      } else if (item.type === 'file') {\n        prependClasses.push('fa-file-o');\n      }\n\n      iconPrepend.addClass(prependClasses.join(' ')); // text label\n\n      label.text(item[config.labelKey]).prepend(iconPrepend);\n      label.appendTo(frag); // append icon\n\n      if (item.children || item['has-children']) {\n        appendClasses.push('fa-caret-right');\n        badge.text(item.size || item.count || 0);\n        badge.appendTo(infoContainer);\n      }\n\n      iconAppend.addClass(appendClasses.join(' '));\n      iconAppend.appendTo(infoContainer);\n      infoContainer.appendTo(frag);\n      return frag;\n    }\n  }, {\n    key: \"createLoadingColumn\",\n    value: function createLoadingColumn() {\n      return jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"\\n            <div class=\\\"fjs-col leaf-col\\\" style=\\\"overflow: hidden;\\\">\\n                <div class=\\\"leaf-row\\\">\\n                    <div class=\\\"grav-loading\\\"><div class=\\\"grav-loader\\\">Loading...</div></div>\\n                </div>\\n            </div>\\n        \");\n    }\n  }, {\n    key: \"createErrorColumn\",\n    value: function createErrorColumn(error) {\n      return jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"\\n            <div class=\\\"fjs-col leaf-col\\\" style=\\\"overflow: hidden;\\\">\\n                <div class=\\\"leaf-row error\\\">\\n                    <i class=\\\"fa fa-fw fa-warning\\\"></i>\\n                    <span>\".concat(error, \"</span>\\n                </div>\\n            </div>\\n        \"));\n    }\n  }]);\n\n  return Parents;\n}();\n\n\nvar b64_encode_unicode = function b64_encode_unicode(str) {\n  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n    return String.fromCharCode('0x' + p1);\n  }));\n};\nvar b64_decode_unicode = function b64_decode_unicode(str) {\n  return decodeURIComponent(atob(str).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n};\n\nvar getExtraFormData = function getExtraFormData(container) {\n  var form = container.closest('form');\n\n  if (container.closest('[data-remodal-id]').length) {\n    form = jquery__WEBPACK_IMPORTED_MODULE_0___default()('form#blueprints');\n  }\n\n  var data = {};\n  var unique_id = form.find('[name=\"__unique_form_id__\"]');\n  data['__form-name__'] = form.find('[name=\"__form-name__\"]').val();\n  data['form-nonce'] = form.find('[name=\"form-nonce\"]').val();\n\n  if (unique_id.length) {\n    data['__unique_form_id__'] = unique_id.val();\n  }\n\n  return data;\n};\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-parents]', function (event) {\n  event.preventDefault();\n  event.stopPropagation();\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var field = target.closest('.parents-wrapper').find('input[name]');\n  var fieldName = field.attr('name');\n\n  if (!field.length) {\n    fieldName = target.data('parents');\n    field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[name=\\\"\".concat(target.data('parents'), \"\\\"]\")).first();\n  }\n\n  var modal = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-remodal-id=\\\"\".concat(target.data('remodalTarget') || 'parents', \"\\\"]\"));\n  var loader = modal.find('.grav-loading');\n  var content = modal.find('.parents-content');\n  loader.css('display', 'block');\n  content.html('');\n  jquery__WEBPACK_IMPORTED_MODULE_0___default().ajax({\n    url: \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.config.current_url),\n    method: 'post',\n    data: Object.assign({}, getExtraFormData(target), {\n      route: b64_encode_unicode(field.val()),\n      field: field.data('fieldName'),\n      action: 'getLevelListing',\n      'admin-nonce': grav_config__WEBPACK_IMPORTED_MODULE_2__.config.admin_nonce,\n      initial: true\n    }),\n    success: function success(response) {\n      loader.css('display', 'none');\n\n      if (response.status === 'error') {\n        content.html(response.message);\n        return true;\n      }\n\n      if (!Instances[\"\".concat(fieldName, \"-\").concat(modal.data('remodalId'))]) {\n        Instances[\"\".concat(fieldName, \"-\").concat(modal.data('remodalId'))] = new Parents(content, field, response.data);\n      } else {\n        Instances[\"\".concat(fieldName, \"-\").concat(modal.data('remodalId'))].finder.reload(response.data);\n      }\n\n      modal.data('parents', Instances[\"\".concat(fieldName, \"-\").concat(modal.data('remodalId'))]);\n      modal.data('parents-selectedField', field);\n    }\n  });\n}); // apply finder selection to field\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-remodal-id].parents-container [data-parents-select]', function (event) {\n  var modal = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).closest('[data-remodal-id]');\n  var parents = modal.data('parents');\n  var selectedField = modal.data('parentsSelectedField');\n  var finder = parents.finder;\n  var field = parents.field;\n  var parentLabel = parents.parentLabel;\n  var parentName = parents.parentName;\n  var selection = finder.findLastActive().item[0];\n  var value = selection._item[finder.config.valueKey];\n  var name = selection._item[finder.config.labelKey];\n\n  if (selectedField.closest('.remodal').length) {\n    var index = field.index(selectedField);\n    selectedField.val(value);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentLabel[index]).text(value);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(parentName[index]).text(name);\n  } else {\n    field.val(value);\n    parentLabel.text(value);\n    parentName.text(name);\n    finder.config.defaultPath = value;\n  }\n\n  var remodal = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-remodal-id=\\\"\".concat(modal.data('remodalId'), \"\\\"]\")).data('remodal')];\n  remodal.close();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/parents.js\n");

/***/ }),

/***/ "./app/forms/fields/permissions.js":
/*!*****************************************!*\
  !*** ./app/forms/fields/permissions.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nvar body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\nvar radioSelector = '.permission-container.parent-section input[type=\"radio\"]';\n\nvar handleParent = function handleParent(event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var value = target.val();\n  var container = target.closest('.parent-section');\n  var fieldset = container.next('fieldset');\n  var radios = fieldset.find(\"input[type=\\\"radio\\\"][value=\\\"\".concat(value, \"\\\"]\"));\n\n  if (container.data('isLocked') !== false) {\n    container.data('isUpdating', true);\n    radios.each(function (index, radio) {\n      var ID = radio.id;\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(radio).siblings(\"[for=\\\"\".concat(ID, \"\\\"]\")).trigger('click');\n    });\n    container.data('isUpdating', false);\n  }\n};\n\nvar boundHandleParent = handleParent.bind(handleParent);\nbody.on('click', '.permission-container.parent-section label', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var container = target.closest('.parent-section');\n  container.data('isLocked', true);\n});\nbody.on('input', radioSelector, boundHandleParent);\nbody.on('input', '.permissions-container input[type=\"radio\"][data-parent-id]', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var parent = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[for=\\\"\".concat(target.data('parentId'), \"\\\"]\"));\n  var container = target.closest('fieldset').prev('.permission-container.parent-section');\n\n  if (container.data('isUpdating') === true) {\n    return true;\n  }\n\n  body.off('input', radioSelector, boundHandleParent);\n  container.data('isLocked', false);\n  parent.trigger('click');\n  body.on('input', radioSelector, boundHandleParent);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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b3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL2Zvcm1zL2ZpZWxkcy9wZXJtaXNzaW9ucy5qcz9jODVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmNvbnN0IGJvZHkgPSAkKCdib2R5Jyk7XG5jb25zdCByYWRpb1NlbGVjdG9yID0gJy5wZXJtaXNzaW9uLWNvbnRhaW5lci5wYXJlbnQtc2VjdGlvbiBpbnB1dFt0eXBlPVwicmFkaW9cIl0nO1xuXG5jb25zdCBoYW5kbGVQYXJlbnQgPSAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0IHZhbHVlID0gdGFyZ2V0LnZhbCgpO1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IHRhcmdldC5jbG9zZXN0KCcucGFyZW50LXNlY3Rpb24nKTtcbiAgICBjb25zdCBmaWVsZHNldCA9IGNvbnRhaW5lci5uZXh0KCdmaWVsZHNldCcpO1xuICAgIGNvbnN0IHJhZGlvcyA9IGZpZWxkc2V0LmZpbmQoYGlucHV0W3R5cGU9XCJyYWRpb1wiXVt2YWx1ZT1cIiR7dmFsdWV9XCJdYCk7XG5cbiAgICBpZiAoY29udGFpbmVyLmRhdGEoJ2lzTG9ja2VkJykgIT09IGZhbHNlKSB7XG4gICAgICAgIGNvbnRhaW5lci5kYXRhKCdpc1VwZGF0aW5nJywgdHJ1ZSk7XG4gICAgICAgIHJhZGlvcy5lYWNoKChpbmRleCwgcmFkaW8pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IElEID0gcmFkaW8uaWQ7XG4gICAgICAgICAgICAkKHJhZGlvKS5zaWJsaW5ncyhgW2Zvcj1cIiR7SUR9XCJdYCkudHJpZ2dlcignY2xpY2snKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnRhaW5lci5kYXRhKCdpc1VwZGF0aW5nJywgZmFsc2UpO1xuICAgIH1cbn07XG5cbmNvbnN0IGJvdW5kSGFuZGxlUGFyZW50ID0gaGFuZGxlUGFyZW50LmJpbmQoaGFuZGxlUGFyZW50KTtcblxuYm9keS5vbignY2xpY2snLCAnLnBlcm1pc3Npb24tY29udGFpbmVyLnBhcmVudC1zZWN0aW9uIGxhYmVsJywgKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICBjb25zdCBjb250YWluZXIgPSB0YXJnZXQuY2xvc2VzdCgnLnBhcmVudC1zZWN0aW9uJyk7XG4gICAgY29udGFpbmVyLmRhdGEoJ2lzTG9ja2VkJywgdHJ1ZSk7XG59KTtcblxuYm9keS5vbignaW5wdXQnLCByYWRpb1NlbGVjdG9yLCBib3VuZEhhbmRsZVBhcmVudCk7XG5cbmJvZHkub24oJ2lucHV0JywgJy5wZXJtaXNzaW9ucy1jb250YWluZXIgaW5wdXRbdHlwZT1cInJhZGlvXCJdW2RhdGEtcGFyZW50LWlkXScsIChldmVudCkgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XG4gICAgY29uc3QgcGFyZW50ID0gJChgW2Zvcj1cIiR7dGFyZ2V0LmRhdGEoJ3BhcmVudElkJyl9XCJdYCk7XG4gICAgY29uc3QgY29udGFpbmVyID0gdGFyZ2V0LmNsb3Nlc3QoJ2ZpZWxkc2V0JykucHJldignLnBlcm1pc3Npb24tY29udGFpbmVyLnBhcmVudC1zZWN0aW9uJyk7XG5cbiAgICBpZiAoY29udGFpbmVyLmRhdGEoJ2lzVXBkYXRpbmcnKSA9PT0gdHJ1ZSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBib2R5Lm9mZignaW5wdXQnLCByYWRpb1NlbGVjdG9yLCBib3VuZEhhbmRsZVBhcmVudCk7XG4gICAgY29udGFpbmVyLmRhdGEoJ2lzTG9ja2VkJywgZmFsc2UpO1xuICAgIHBhcmVudC50cmlnZ2VyKCdjbGljaycpO1xuICAgIGJvZHkub24oJ2lucHV0JywgcmFkaW9TZWxlY3RvciwgYm91bmRIYW5kbGVQYXJlbnQpO1xufSk7XG4iXSwibmFtZXMiOlsiJCIsImJvZHkiLCJyYWRpb1NlbGVjdG9yIiwiaGFuZGxlUGFyZW50IiwiZXZlbnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwidmFsdWUiLCJ2YWwiLCJjb250YWluZXIiLCJjbG9zZXN0IiwiZmllbGRzZXQiLCJuZXh0IiwicmFkaW9zIiwiZmluZCIsImRhdGEiLCJlYWNoIiwiaW5kZXgiLCJyYWRpbyIsIklEIiwiaWQiLCJzaWJsaW5ncyIsInRyaWdnZXIiLCJib3VuZEhhbmRsZVBhcmVudCIsImJpbmQiLCJvbiIsInBhcmVudCIsInByZXYiLCJvZmYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/forms/fields/permissions.js\n");

/***/ }),

/***/ "./app/forms/fields/range.js":
/*!***********************************!*\
  !*** ./app/forms/fields/range.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('input', '[type=\"range\"].rangefield, [type=\"number\"].rangefield', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var type = target.attr('type').toLowerCase();\n  var sibling = type === 'range' ? 'number' : 'range';\n  var feedback = target.siblings(\"[type=\\\"\".concat(sibling, \"\\\"].rangefield\"));\n  feedback.val(target.val());\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZm9ybXMvZmllbGRzL3JhbmdlLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBRUFBLDZDQUFDLENBQUNDLFFBQUQsQ0FBRCxDQUFZQyxFQUFaLENBQWUsT0FBZixFQUF3Qix1REFBeEIsRUFBaUYsVUFBQ0MsS0FBRCxFQUFXO0FBQ3hGLE1BQU1DLE1BQU0sR0FBR0osNkNBQUMsQ0FBQ0csS0FBSyxDQUFDRSxhQUFQLENBQWhCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHRixNQUFNLENBQUNHLElBQVAsQ0FBWSxNQUFaLEVBQW9CQyxXQUFwQixFQUFiO0FBQ0EsTUFBTUMsT0FBTyxHQUFHSCxJQUFJLEtBQUssT0FBVCxHQUFtQixRQUFuQixHQUE4QixPQUE5QztBQUNBLE1BQU1JLFFBQVEsR0FBR04sTUFBTSxDQUFDTyxRQUFQLG1CQUEwQkYsT0FBMUIsb0JBQWpCO0FBRUFDLEVBQUFBLFFBQVEsQ0FBQ0UsR0FBVCxDQUFhUixNQUFNLENBQUNRLEdBQVAsRUFBYjtBQUNILENBUEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL2Zvcm1zL2ZpZWxkcy9yYW5nZS5qcz9mOWQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbiQoZG9jdW1lbnQpLm9uKCdpbnB1dCcsICdbdHlwZT1cInJhbmdlXCJdLnJhbmdlZmllbGQsIFt0eXBlPVwibnVtYmVyXCJdLnJhbmdlZmllbGQnLCAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGNvbnN0IHR5cGUgPSB0YXJnZXQuYXR0cigndHlwZScpLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3Qgc2libGluZyA9IHR5cGUgPT09ICdyYW5nZScgPyAnbnVtYmVyJyA6ICdyYW5nZSc7XG4gICAgY29uc3QgZmVlZGJhY2sgPSB0YXJnZXQuc2libGluZ3MoYFt0eXBlPVwiJHtzaWJsaW5nfVwiXS5yYW5nZWZpZWxkYCk7XG5cbiAgICBmZWVkYmFjay52YWwodGFyZ2V0LnZhbCgpKTtcbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsIm9uIiwiZXZlbnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwidHlwZSIsImF0dHIiLCJ0b0xvd2VyQ2FzZSIsInNpYmxpbmciLCJmZWVkYmFjayIsInNpYmxpbmdzIiwidmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/forms/fields/range.js\n");

/***/ }),

/***/ "./app/forms/fields/selectize.js":
/*!***************************************!*\
  !*** ./app/forms/fields/selectize.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SelectizeField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var selectize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! selectize */ \"./node_modules/selectize/dist/js/selectize.js\");\n/* harmony import */ var selectize__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(selectize__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_selectize_required_fix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/selectize-required-fix */ \"./app/utils/selectize-required-fix.js\");\n/* harmony import */ var _utils_selectize_option_click__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/selectize-option-click */ \"./app/utils/selectize-option-click.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar PagesRoute = {\n  option: function option(item, escape) {\n    var label = escape(item.text).split(' ');\n    var arrows = label.shift();\n    var slug = label.shift();\n    return \"<div class=\\\"selectize-route-option\\\">\\n            <span class=\\\"text-grey\\\">\".concat(arrows, \"</span>\\n            <span>\\n                <span class=\\\"text-update\\\">\").concat(slug.replace('(', '/').replace(')', ''), \"</span>\\n                <span>\").concat(label.join(' '), \"</span>\\n            </span>\\n        </div>\");\n  }\n};\n\nvar SelectizeField = /*#__PURE__*/function () {\n  function SelectizeField() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, SelectizeField);\n\n    this.options = Object.assign({}, options);\n    this.elements = [];\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-selectize]').each(function (index, element) {\n      return _this.add(element);\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('mutation._grav', this._onAddedNodes.bind(this));\n  }\n\n  _createClass(SelectizeField, [{\n    key: \"add\",\n    value: function add(element) {\n      element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n\n      if (element.closest('template').length) {\n        return false;\n      }\n\n      var tag = element.prop('tagName').toLowerCase();\n      var isInput = tag === 'input' || tag === 'select';\n      var data = (isInput ? element.closest('[data-grav-selectize]') : element).data('grav-selectize') || {};\n      var field = isInput ? element : element.find('input, select');\n\n      if (field.attr('name') === 'data[route]') {\n        data = jquery__WEBPACK_IMPORTED_MODULE_0___default().extend({}, data, {\n          render: PagesRoute\n        });\n      }\n\n      if (!field.length || field.get(0).selectize) {\n        return;\n      }\n\n      var plugins = jquery__WEBPACK_IMPORTED_MODULE_0___default().merge(data.plugins ? data.plugins : [], ['required-fix']);\n      field.selectize(jquery__WEBPACK_IMPORTED_MODULE_0___default().extend({}, data, {\n        plugins: plugins\n      }));\n      this.elements.push(field.data('selectize'));\n    }\n  }, {\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target\n    /* , record, instance */\n    ) {\n      var _this2 = this;\n\n      var fields = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('select.fancy, input.fancy, [data-grav-selectize]').filter(function (index, element) {\n        return !jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).closest('template').length;\n      });\n\n      if (!fields.length) {\n        return;\n      }\n\n      fields.each(function (index, field) {\n        return _this2.add(field);\n      });\n    }\n  }]);\n\n  return SelectizeField;\n}();\n\n\nvar Instance = new SelectizeField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUEsQ0FBUyxFQUFULEVBQWErQixJQUFiLEVBQW1CO0FBQUVRLFFBQUFBLE9BQU8sRUFBUEE7QUFBRixPQUFuQixDQUFoQjtBQUVBLFdBQUt0QixRQUFMLENBQWN3QixJQUFkLENBQW1CVCxLQUFLLENBQUNELElBQU4sQ0FBVyxXQUFYLENBQW5CO0FBQ0g7OztXQUVELHVCQUFjVyxLQUFkLEVBQXFCQztBQUFNO0FBQTNCLE1BQXFEO0FBQUE7O0FBQ2pELFVBQUlDLE1BQU0sR0FBRzVDLDZDQUFDLENBQUMyQyxNQUFELENBQUQsQ0FBVVYsSUFBVixDQUFlLGtEQUFmLEVBQW1FWSxNQUFuRSxDQUEwRSxVQUFDMUIsS0FBRCxFQUFRQyxPQUFSLEVBQW9CO0FBQ3ZHLGVBQU8sQ0FBQ3BCLDZDQUFDLENBQUNvQixPQUFELENBQUQsQ0FBV0ssT0FBWCxDQUFtQixVQUFuQixFQUErQkMsTUFBdkM7QUFDSCxPQUZZLENBQWI7O0FBSUEsVUFBSSxDQUFDa0IsTUFBTSxDQUFDbEIsTUFBWixFQUFvQjtBQUFFO0FBQVM7O0FBRS9Ca0IsTUFBQUEsTUFBTSxDQUFDMUIsSUFBUCxDQUFZLFVBQUNDLEtBQUQsRUFBUWEsS0FBUjtBQUFBLGVBQWtCLE1BQUksQ0FBQ1gsR0FBTCxDQUFTVyxLQUFULENBQWxCO0FBQUEsT0FBWjtBQUNIOzs7Ozs7O0FBR0UsSUFBSWMsUUFBUSxHQUFHLElBQUlqQyxjQUFKLEVBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL2Zvcm1zL2ZpZWxkcy9zZWxlY3RpemUuanM/NzM1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0ICdzZWxlY3RpemUnO1xuaW1wb3J0ICcuLi8uLi91dGlscy9zZWxlY3RpemUtcmVxdWlyZWQtZml4JztcbmltcG9ydCAnLi4vLi4vdXRpbHMvc2VsZWN0aXplLW9wdGlvbi1jbGljayc7XG5cbmNvbnN0IFBhZ2VzUm91dGUgPSB7XG4gICAgb3B0aW9uOiBmdW5jdGlvbihpdGVtLCBlc2NhcGUpIHtcbiAgICAgICAgY29uc3QgbGFiZWwgPSBlc2NhcGUoaXRlbS50ZXh0KS5zcGxpdCgnICcpO1xuICAgICAgICBjb25zdCBhcnJvd3MgPSBsYWJlbC5zaGlmdCgpO1xuICAgICAgICBjb25zdCBzbHVnID0gbGFiZWwuc2hpZnQoKTtcblxuICAgICAgICByZXR1cm4gYDxkaXYgY2xhc3M9XCJzZWxlY3RpemUtcm91dGUtb3B0aW9uXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtZ3JleVwiPiR7YXJyb3dzfTwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC11cGRhdGVcIj4ke3NsdWcucmVwbGFjZSgnKCcsICcvJykucmVwbGFjZSgnKScsICcnKX08L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4+JHtsYWJlbC5qb2luKCcgJyl9PC9zcGFuPlxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5gO1xuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlbGVjdGl6ZUZpZWxkIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30pIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcblxuICAgICAgICAkKCdbZGF0YS1ncmF2LXNlbGVjdGl6ZV0nKS5lYWNoKChpbmRleCwgZWxlbWVudCkgPT4gdGhpcy5hZGQoZWxlbWVudCkpO1xuICAgICAgICAkKCdib2R5Jykub24oJ211dGF0aW9uLl9ncmF2JywgdGhpcy5fb25BZGRlZE5vZGVzLmJpbmQodGhpcykpO1xuICAgIH1cblxuICAgIGFkZChlbGVtZW50KSB7XG4gICAgICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG4gICAgICAgIGlmIChlbGVtZW50LmNsb3Nlc3QoJ3RlbXBsYXRlJykubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgdGFnID0gZWxlbWVudC5wcm9wKCd0YWdOYW1lJykudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgbGV0IGlzSW5wdXQgPSB0YWcgPT09ICdpbnB1dCcgfHwgdGFnID09PSAnc2VsZWN0JztcblxuICAgICAgICBsZXQgZGF0YSA9IChpc0lucHV0ID8gZWxlbWVudC5jbG9zZXN0KCdbZGF0YS1ncmF2LXNlbGVjdGl6ZV0nKSA6IGVsZW1lbnQpLmRhdGEoJ2dyYXYtc2VsZWN0aXplJykgfHwge307XG4gICAgICAgIGxldCBmaWVsZCA9IChpc0lucHV0ID8gZWxlbWVudCA6IGVsZW1lbnQuZmluZCgnaW5wdXQsIHNlbGVjdCcpKTtcblxuICAgICAgICBpZiAoZmllbGQuYXR0cignbmFtZScpID09PSAnZGF0YVtyb3V0ZV0nKSB7XG4gICAgICAgICAgICBkYXRhID0gJC5leHRlbmQoe30sIGRhdGEsIHsgcmVuZGVyOiBQYWdlc1JvdXRlIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFmaWVsZC5sZW5ndGggfHwgZmllbGQuZ2V0KDApLnNlbGVjdGl6ZSkgeyByZXR1cm47IH1cbiAgICAgICAgY29uc3QgcGx1Z2lucyA9ICQubWVyZ2UoZGF0YS5wbHVnaW5zID8gZGF0YS5wbHVnaW5zIDogW10sIFsncmVxdWlyZWQtZml4J10pO1xuICAgICAgICBmaWVsZC5zZWxlY3RpemUoJC5leHRlbmQoe30sIGRhdGEsIHsgcGx1Z2lucyB9KSk7XG5cbiAgICAgICAgdGhpcy5lbGVtZW50cy5wdXNoKGZpZWxkLmRhdGEoJ3NlbGVjdGl6ZScpKTtcbiAgICB9XG5cbiAgICBfb25BZGRlZE5vZGVzKGV2ZW50LCB0YXJnZXQvKiAsIHJlY29yZCwgaW5zdGFuY2UgKi8pIHtcbiAgICAgICAgbGV0IGZpZWxkcyA9ICQodGFyZ2V0KS5maW5kKCdzZWxlY3QuZmFuY3ksIGlucHV0LmZhbmN5LCBbZGF0YS1ncmF2LXNlbGVjdGl6ZV0nKS5maWx0ZXIoKGluZGV4LCBlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gISQoZWxlbWVudCkuY2xvc2VzdCgndGVtcGxhdGUnKS5sZW5ndGg7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghZmllbGRzLmxlbmd0aCkgeyByZXR1cm47IH1cblxuICAgICAgICBmaWVsZHMuZWFjaCgoaW5kZXgsIGZpZWxkKSA9PiB0aGlzLmFkZChmaWVsZCkpO1xuICAgIH1cbn1cblxuZXhwb3J0IGxldCBJbnN0YW5jZSA9IG5ldyBTZWxlY3RpemVGaWVsZCgpO1xuIl0sIm5hbWVzIjpbIiQiLCJQYWdlc1JvdXRlIiwib3B0aW9uIiwiaXRlbSIsImVzY2FwZSIsImxhYmVsIiwidGV4dCIsInNwbGl0IiwiYXJyb3dzIiwic2hpZnQiLCJzbHVnIiwicmVwbGFjZSIsImpvaW4iLCJTZWxlY3RpemVGaWVsZCIsIm9wdGlvbnMiLCJPYmplY3QiLCJhc3NpZ24iLCJlbGVtZW50cyIsImVhY2giLCJpbmRleCIsImVsZW1lbnQiLCJhZGQiLCJvbiIsIl9vbkFkZGVkTm9kZXMiLCJiaW5kIiwiY2xvc2VzdCIsImxlbmd0aCIsInRhZyIsInByb3AiLCJ0b0xvd2VyQ2FzZSIsImlzSW5wdXQiLCJkYXRhIiwiZmllbGQiLCJmaW5kIiwiYXR0ciIsImV4dGVuZCIsInJlbmRlciIsImdldCIsInNlbGVjdGl6ZSIsInBsdWdpbnMiLCJtZXJnZSIsInB1c2giLCJldmVudCIsInRhcmdldCIsImZpZWxkcyIsImZpbHRlciIsIkluc3RhbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/forms/fields/selectize.js\n");

/***/ }),

/***/ "./app/forms/fields/selectunique.js":
/*!******************************************!*\
  !*** ./app/forms/fields/selectunique.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SelectUniqueField),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mout_object_forIn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mout/object/forIn */ \"./node_modules/mout/object/forIn.js\");\n/* harmony import */ var mout_object_forIn__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mout_object_forIn__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n // import { config } from 'grav-config';\n\nvar Data = {};\n\nvar SelectUniqueField = /*#__PURE__*/function () {\n  function SelectUniqueField(options) {\n    var _this = this;\n\n    _classCallCheck(this, SelectUniqueField);\n\n    var body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\n    this.items = jquery__WEBPACK_IMPORTED_MODULE_0___default()();\n    this.options = Object.assign({}, this.defaults, options);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-select-observe]').each(function (index, element) {\n      return _this.addSelect(element);\n    }).last().trigger('change', {\n      load: true\n    });\n    body.on('mutation._grav', this._onAddedNodes.bind(this));\n    body.on('mutation_removed._grav', this._onRemovedNodes.bind(this));\n  }\n\n  _createClass(SelectUniqueField, [{\n    key: \"_onAddedNodes\",\n    value: function _onAddedNodes(event, target, record, instance) {\n      var _this2 = this;\n\n      var fields = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).find('[data-select-observe]');\n\n      if (!fields.length) {\n        return;\n      }\n\n      fields.each(function (index, field) {\n        field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(field);\n\n        if (!~_this2.items.index(field)) {\n          _this2.addSelect(field);\n        }\n      });\n    }\n  }, {\n    key: \"_onRemovedNodes\",\n    value: function _onRemovedNodes(event, data\n    /* , instance */\n    ) {\n      var _this3 = this;\n\n      var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(data.target);\n      var holder = target.data('collectionHolder');\n\n      if (!holder) {\n        return false;\n      }\n\n      var node = jquery__WEBPACK_IMPORTED_MODULE_0___default()(data.mutation.removedNodes);\n      var value = node.find('[data-select-observe]').val();\n\n      if (value) {\n        Data[holder].state[value] = value;\n      }\n\n      target.find('[data-select-observe]').each(function (index, field) {\n        field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(field);\n\n        if (field.val() !== value) {\n          _this3.updateOptions(field);\n        }\n      });\n    }\n  }, {\n    key: \"addSelect\",\n    value: function addSelect(element) {\n      var _this4 = this;\n\n      this.items = this.items.add(element);\n      element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n      var value = element.attr('value');\n      var holder = element.closest('[data-collection-holder]').data('collectionHolder');\n      var options = element.closest('[data-select-unique]').data('selectUnique');\n\n      if (!Data[holder]) {\n        var data = {};\n\n        if (Array.isArray(options)) {\n          options.slice(0).map(function (item) {\n            data[item] = item;\n          });\n        } else {\n          data = Object.assign({}, options);\n        }\n\n        Data[holder] = {\n          original: null,\n          state: null\n        };\n        Data[holder].original = Object.assign({}, data);\n        Data[holder].state = Object.assign({}, data);\n      }\n\n      this.updateOptions(element);\n      element.data('originalValue', value);\n      element.on('change', function (event, extras) {\n        var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n\n        if (target.data('dummyChange')) {\n          target.data('dummyChange', false);\n          return false;\n        }\n\n        _this4.refreshOptions(target, extras && extras.load ? null : element.data('originalValue'));\n\n        element.data('originalValue', target.val());\n      });\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(element) {\n      element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n      var value = element.attr('value');\n      var holder = element.closest('[data-collection-holder]').data('collectionHolder');\n      mout_object_forIn__WEBPACK_IMPORTED_MODULE_1___default()(Data[holder].state, function (v, k) {\n        var selected = k === value ? 'selected=\"selected\"' : '';\n\n        if (element.get(0).selectize) {\n          var selectize = element.data('selectize');\n          selectize.removeOption(k);\n          selectize.addOption({\n            value: k,\n            text: v\n          });\n        } else {\n          element.append(\"<option value=\\\"\".concat(k, \"\\\" \").concat(selected, \">\").concat(v, \"</option>\"));\n        }\n\n        if (selected) {\n          if (element.get(0).selectize) {\n            var _selectize = element.data('selectize');\n\n            _selectize.setValue(k);\n          }\n\n          delete Data[holder].state[value];\n        }\n      });\n    }\n  }, {\n    key: \"refreshOptions\",\n    value: function refreshOptions(element, originalValue) {\n      var value = element.val();\n      var holder = element.closest('[data-collection-holder]').data('collectionHolder');\n      delete Data[holder].state[value];\n\n      if (originalValue && Data[holder].original[originalValue]) {\n        Data[holder].state[originalValue] = Data[holder].original[originalValue];\n      }\n\n      this.items.each(function (index, select) {\n        select = jquery__WEBPACK_IMPORTED_MODULE_0___default()(select);\n\n        if (select[0] === element[0]) {\n          return;\n        }\n\n        var selectedValue = select.val();\n        select.data('dummyChange', true);\n\n        if (select.get(0).selectize) {\n          var selectize = select.data('selectize');\n\n          if (selectize) {\n            selectize.clearOptions();\n\n            if (selectedValue) {\n              selectize.addOption({\n                value: selectedValue,\n                text: Data[holder].original[selectedValue] || selectedValue\n              });\n            }\n\n            mout_object_forIn__WEBPACK_IMPORTED_MODULE_1___default()(Data[holder].state, function (v, k) {\n              selectize.addOption({\n                value: k,\n                text: v\n              });\n            });\n            selectize.setValue(selectedValue, true);\n          }\n        } else {\n          select.empty();\n          mout_object_forIn__WEBPACK_IMPORTED_MODULE_1___default()(Data[holder].state, function (v, k) {\n            var selected = k === selectedValue ? 'selected=\"selected\"' : '';\n            select.append(\"<option value=\\\"\".concat(k, \"\\\" \").concat(selected, \">\").concat(v, \"</option>\"));\n          });\n        }\n\n        select.data('dummyChange', false);\n      });\n    }\n  }]);\n\n  return SelectUniqueField;\n}();\n\n\nvar Instance = new SelectUniqueField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/fields/selectunique.js\n");

/***/ }),

/***/ "./app/forms/fields/text.js":
/*!**********************************!*\
  !*** ./app/forms/fields/text.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.copy-to-clipboard').click(function (event) {\n    var $tempElement = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<input>');\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').append($tempElement);\n    $tempElement.val(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).prev('input').val()).select();\n    document.execCommand('Copy');\n    $tempElement.remove();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr('data-hint', 'Copied to clipboard!').addClass('hint--left');\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZm9ybXMvZmllbGRzL3RleHQuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFFQUEsNkNBQUMsQ0FBQ0MsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBVztBQUN6QkYsRUFBQUEsNkNBQUMsQ0FBQyxvQkFBRCxDQUFELENBQXdCRyxLQUF4QixDQUE4QixVQUFTQyxLQUFULEVBQWdCO0FBQzFDLFFBQUlDLFlBQVksR0FBR0wsNkNBQUMsQ0FBQyxTQUFELENBQXBCO0FBQ0FBLElBQUFBLDZDQUFDLENBQUMsTUFBRCxDQUFELENBQVVNLE1BQVYsQ0FBaUJELFlBQWpCO0FBQ0FBLElBQUFBLFlBQVksQ0FBQ0UsR0FBYixDQUFpQlAsNkNBQUMsQ0FBQyxJQUFELENBQUQsQ0FBUVEsSUFBUixDQUFhLE9BQWIsRUFBc0JELEdBQXRCLEVBQWpCLEVBQThDRSxNQUE5QztBQUNBUixJQUFBQSxRQUFRLENBQUNTLFdBQVQsQ0FBcUIsTUFBckI7QUFDQUwsSUFBQUEsWUFBWSxDQUFDTSxNQUFiO0FBRUFYLElBQUFBLDZDQUFDLENBQUMsSUFBRCxDQUFELENBQVFZLElBQVIsQ0FBYSxXQUFiLEVBQTBCLHNCQUExQixFQUFrREMsUUFBbEQsQ0FBMkQsWUFBM0Q7QUFDSCxHQVJEO0FBU0gsQ0FWRCIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvZm9ybXMvZmllbGRzL3RleHQuanM/OGUxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICAkKCcuY29weS10by1jbGlwYm9hcmQnKS5jbGljayhmdW5jdGlvbihldmVudCkge1xuICAgICAgICB2YXIgJHRlbXBFbGVtZW50ID0gJCgnPGlucHV0PicpO1xuICAgICAgICAkKCdib2R5JykuYXBwZW5kKCR0ZW1wRWxlbWVudCk7XG4gICAgICAgICR0ZW1wRWxlbWVudC52YWwoJCh0aGlzKS5wcmV2KCdpbnB1dCcpLnZhbCgpKS5zZWxlY3QoKTtcbiAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ0NvcHknKTtcbiAgICAgICAgJHRlbXBFbGVtZW50LnJlbW92ZSgpO1xuXG4gICAgICAgICQodGhpcykuYXR0cignZGF0YS1oaW50JywgJ0NvcGllZCB0byBjbGlwYm9hcmQhJykuYWRkQ2xhc3MoJ2hpbnQtLWxlZnQnKTtcbiAgICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsInJlYWR5IiwiY2xpY2siLCJldmVudCIsIiR0ZW1wRWxlbWVudCIsImFwcGVuZCIsInZhbCIsInByZXYiLCJzZWxlY3QiLCJleGVjQ29tbWFuZCIsInJlbW92ZSIsImF0dHIiLCJhZGRDbGFzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/forms/fields/text.js\n");

/***/ }),

/***/ "./app/forms/form.js":
/*!***************************!*\
  !*** ./app/forms/form.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Form),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n/* Dependencies for checking if changes happened since load on a form\nimport toastr from '../utils/toastr';\nimport { translations } from 'grav-config';\nimport { Instance as FormState } from './state';\n*/\n\nvar Form = /*#__PURE__*/function () {\n  function Form(form) {\n    var _this = this;\n\n    _classCallCheck(this, Form);\n\n    this.form = jquery__WEBPACK_IMPORTED_MODULE_0___default()(form);\n\n    if (!this.form.length || this.form.prop('tagName').toLowerCase() !== 'form') {\n      return;\n    }\n    /* Option for not saving while nothing in a form has changed\n     this.form.on('submit', (event) => {\n        if (FormState.equals()) {\n            event.preventDefault();\n            toastr.info(translations.PLUGIN_ADMIN.NOTHING_TO_SAVE);\n        }\n    }); */\n\n\n    this._attachShortcuts();\n\n    this._attachToggleables();\n\n    this._attachDisabledFields();\n\n    this._submitUncheckedFields();\n\n    this.observer = new MutationObserver(this.addedNodes);\n    this.form.each(function (index, form) {\n      return _this.observer.observe(form, {\n        subtree: true,\n        childList: true\n      });\n    });\n  }\n\n  _createClass(Form, [{\n    key: \"_attachShortcuts\",\n    value: function _attachShortcuts() {\n      // CTRL + S / CMD + S - shortcut for [Save] when available\n      var saveTask = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#titlebar [name=\"task\"][value=\"save\"][form=\"blueprints\"]');\n\n      if (saveTask.length) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).on('keydown', function (event) {\n          var key = String.fromCharCode(event.which).toLowerCase();\n\n          if (!event.shiftKey && (event.ctrlKey && !event.altKey || event.metaKey) && key === 's') {\n            event.preventDefault();\n            saveTask.click();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_attachToggleables\",\n    value: function _attachToggleables() {\n      var query = '[data-grav-field=\"toggleable\"] input[type=\"checkbox\"]';\n      this.form.on('change', query, function (event) {\n        var toggle = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n        var enabled = toggle.is(':checked');\n        var parent = toggle.closest('.form-field');\n        var label = parent.find('label.toggleable');\n        var fields = parent.find('.form-data');\n        var inputs = fields.find('input, select, textarea, button');\n        label.add(fields).css('opacity', enabled ? '' : 0.7);\n        inputs.map(function (index, input) {\n          var isSelectize = input.selectize;\n          input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input);\n\n          if (isSelectize) {\n            isSelectize[enabled ? 'enable' : 'disable']();\n          } else {\n            input.prop('disabled', !enabled);\n          }\n        });\n      });\n      this.form.find(query).trigger('change');\n    }\n  }, {\n    key: \"_attachDisabledFields\",\n    value: function _attachDisabledFields() {\n      var prefix = '.form-field-toggleable .form-data';\n      var query = [];\n      ['input', 'select', 'label[for]', 'textarea', '.selectize-control'].forEach(function (item) {\n        query.push(\"\".concat(prefix, \" \").concat(item));\n      });\n      this.form.on('mousedown', query.join(', '), function (event) {\n        var input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n        var isFor = input.prop('for');\n        var isSelectize = (input.hasClass('selectize-control') || input.parents('.selectize-control')).length;\n\n        if (isFor) {\n          input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[id=\\\"\".concat(isFor, \"\\\"]\"));\n        }\n\n        if (isSelectize) {\n          input = input.closest('.selectize-control').siblings('select[name]');\n        }\n\n        if (!input.prop('disabled')) {\n          return true;\n        }\n\n        var toggle = input.closest('.form-field').find('[data-grav-field=\"toggleable\"] input[type=\"checkbox\"]');\n        toggle.trigger('click');\n      });\n    }\n  }, {\n    key: \"_submitUncheckedFields\",\n    value: function _submitUncheckedFields() {\n      var submitted = false;\n      this.form.each(function (index, form) {\n        form = jquery__WEBPACK_IMPORTED_MODULE_0___default()(form);\n        form.on('submit', function () {\n          // workaround for MS Edge, submitting multiple forms at the same time\n          if (submitted) {\n            return false;\n          }\n\n          var formId = form.attr('id');\n          var unchecked = form.find('input[type=\"checkbox\"]:not(:checked):not(:disabled)');\n          var submit = form.find('[type=\"submit\"]').add(\"[form=\\\"\".concat(formId, \"\\\"][type=\\\"submit\\\"]\"));\n\n          if (!unchecked.length) {\n            return true;\n          }\n\n          submit.addClass('pointer-events-disabled');\n          unchecked.each(function (index, element) {\n            element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n            var name = element.prop('name');\n            var fake = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<input type=\\\"hidden\\\" name=\\\"\".concat(name, \"\\\" value=\\\"0\\\" />\"));\n            form.append(fake);\n          });\n          submitted = true;\n          return true;\n        });\n      });\n    }\n  }, {\n    key: \"addedNodes\",\n    value: function addedNodes(mutations) {\n      var _this2 = this;\n\n      mutations.forEach(function (mutation) {\n        if (mutation.type !== 'childList') {\n          return;\n        }\n\n        if (mutation.addedNodes) {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').trigger('mutation._grav', mutation.target, mutation, _this2);\n        }\n\n        if (mutation.removedNodes) {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').trigger('mutation_removed._grav', {\n            target: mutation.target,\n            mutation: mutation\n          }, _this2);\n        }\n      });\n    }\n  }]);\n\n  return Form;\n}();\n\n\nvar Instance = new Form('form#blueprints');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/form.js\n");

/***/ }),

/***/ "./app/forms/index.js":
/*!****************************!*\
  !*** ./app/forms/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./app/forms/state.js\");\n/* harmony import */ var _form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form */ \"./app/forms/form.js\");\n/* harmony import */ var _fields__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fields */ \"./app/forms/fields/index.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Form: {\n    Form: _form__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Instance: _form__WEBPACK_IMPORTED_MODULE_1__.Instance\n  },\n  Fields: _fields__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  FormState: {\n    FormState: _state__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    Instance: _state__WEBPACK_IMPORTED_MODULE_0__.Instance\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvZm9ybXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFFQTtBQUVBLGlFQUFlO0FBQ1hHLEVBQUFBLElBQUksRUFBRTtBQUNGQSxJQUFBQSxJQUFJLEVBQUpBLDZDQURFO0FBRUZGLElBQUFBLFFBQVEsRUFBRUcsMkNBQVlBO0FBRnBCLEdBREs7QUFLWEMsRUFBQUEsTUFBTSxFQUFOQSwrQ0FMVztBQU1YTCxFQUFBQSxTQUFTLEVBQUU7QUFDUEEsSUFBQUEsU0FBUyxFQUFUQSw4Q0FETztBQUVQQyxJQUFBQSxRQUFRLEVBQUVDLDRDQUFpQkE7QUFGcEI7QUFOQSxDQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC9mb3Jtcy9pbmRleC5qcz85MjczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGb3JtU3RhdGUsIHsgSW5zdGFuY2UgYXMgRm9ybVN0YXRlSW5zdGFuY2UgfSBmcm9tICcuL3N0YXRlJztcbmltcG9ydCBGb3JtLCB7IEluc3RhbmNlIGFzIEZvcm1JbnN0YW5jZSB9IGZyb20gJy4vZm9ybSc7XG5cbmltcG9ydCBGaWVsZHMgZnJvbSAnLi9maWVsZHMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgRm9ybToge1xuICAgICAgICBGb3JtLFxuICAgICAgICBJbnN0YW5jZTogRm9ybUluc3RhbmNlXG4gICAgfSxcbiAgICBGaWVsZHMsXG4gICAgRm9ybVN0YXRlOiB7XG4gICAgICAgIEZvcm1TdGF0ZSxcbiAgICAgICAgSW5zdGFuY2U6IEZvcm1TdGF0ZUluc3RhbmNlXG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJGb3JtU3RhdGUiLCJJbnN0YW5jZSIsIkZvcm1TdGF0ZUluc3RhbmNlIiwiRm9ybSIsIkZvcm1JbnN0YW5jZSIsIkZpZWxkcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/forms/index.js\n");

/***/ }),

/***/ "./app/forms/state.js":
/*!****************************!*\
  !*** ./app/forms/state.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FormState),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance),\n/* harmony export */   \"DOMBehaviors\": () => (/* binding */ DOMBehaviors)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.js\");\n/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(immutable__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var immutablediff__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutablediff */ \"./node_modules/immutablediff/src/diff.js\");\n/* harmony import */ var immutablediff__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(immutablediff__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_jquery_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/jquery-utils */ \"./app/utils/jquery-utils.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar FormLoadState = {};\nvar DOMBehaviors = {\n  attach: function attach() {\n    this.preventUnload();\n    this.preventClickAway();\n  },\n  preventUnload: function preventUnload() {\n    var selector = '[name=\"task\"][value^=\"save\"], [data-delete-action], [data-flex-safe-action]';\n\n    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()._data(window, 'events') && (jquery__WEBPACK_IMPORTED_MODULE_0___default()._data(window, 'events').beforeunload || []).filter(function (event) {\n      return event.namespace === '_grav';\n    }).length) {\n      return;\n    } // Allow some elements to leave the page without native confirmation\n\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(selector).on('click._grav', function (event) {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).off('beforeunload');\n    }); // Catch browser uri change / refresh attempt and stop it if the form state is dirty\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).on('beforeunload._grav', function () {\n      if (Instance.equals() === false) {\n        return 'You have made changes on this page that you have not yet confirmed. If you navigate away from this page you will lose your unsaved changes.';\n      }\n    });\n  },\n  preventClickAway: function preventClickAway() {\n    var selector = 'a[href]:not([href^=\"#\"]):not([target=\"_blank\"]):not([href^=\"javascript:\"])';\n\n    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()._data(jquery__WEBPACK_IMPORTED_MODULE_0___default()(selector).get(0), 'events') && (jquery__WEBPACK_IMPORTED_MODULE_0___default()._data(jquery__WEBPACK_IMPORTED_MODULE_0___default()(selector).get(0), 'events').click || []).filter(function (event) {\n      return event.namespace === '_grav';\n    })) {\n      return;\n    } // Prevent clicking away if the form state is dirty\n    // instead, display a confirmation before continuing\n\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(selector).on('click._grav', function (event) {\n      var isClean = Instance.equals();\n\n      if (isClean === null || isClean) {\n        return true;\n      }\n\n      event.preventDefault();\n      var destination = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr('href');\n      var modal = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=\"changes\"]');\n      var lookup = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[modal.data('remodal')];\n      var buttons = jquery__WEBPACK_IMPORTED_MODULE_0___default()('a.button', modal);\n\n      var handler = function handler(event) {\n        event.preventDefault();\n        var action = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('leave-action');\n        buttons.off('click', handler);\n        lookup.close();\n\n        if (action === 'continue') {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).off('beforeunload');\n          __webpack_require__.g.location.href = destination;\n        }\n      };\n\n      buttons.on('click', handler);\n      lookup.open();\n    });\n  }\n};\n\nvar FormState = /*#__PURE__*/function () {\n  function FormState() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      ignore: [],\n      form_id: 'blueprints'\n    };\n\n    _classCallCheck(this, FormState);\n\n    this.options = options;\n    this.refresh();\n\n    if (!this.form || !this.fields.length) {\n      return;\n    }\n\n    FormLoadState = this.collect();\n    this.loadState = FormLoadState;\n    DOMBehaviors.attach();\n  }\n\n  _createClass(FormState, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.form = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"form#\".concat(this.options.form_id)).filter(':noparents(.remodal)');\n      this.fields = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"form#\".concat(this.options.form_id, \" *, [form=\\\"\").concat(this.options.form_id, \"\\\"]\")).filter(':input:not(.no-form)').filter(':noparents(.remodal)');\n      return this;\n    }\n  }, {\n    key: \"collect\",\n    value: function collect() {\n      var _this = this;\n\n      if (!this.form || !this.fields.length) {\n        return;\n      }\n\n      var values = {};\n      this.refresh().fields.each(function (index, field) {\n        field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(field);\n        var name = field.prop('name');\n        var type = field.prop('type');\n        var tag = field.prop('tagName').toLowerCase();\n        var value;\n\n        if (name.startsWith('toggleable_') || name === 'data[lang]' || name === 'data[redirect]') {\n          return;\n        }\n\n        switch (type) {\n          case 'checkbox':\n            value = field.is(':checked');\n            break;\n\n          case 'radio':\n            if (!field.is(':checked')) {\n              return;\n            }\n\n            value = field.val();\n            break;\n\n          default:\n            value = field.val();\n        }\n\n        if (tag === 'select' && value === null) {\n          value = '';\n        }\n\n        if (Array.isArray(value)) {\n          value = value.join('|');\n        }\n\n        if (name && !~_this.options.ignore.indexOf(name)) {\n          values[name] = value;\n        }\n      });\n      return immutable__WEBPACK_IMPORTED_MODULE_1___default().OrderedMap(values);\n    }\n  }, {\n    key: \"diff\",\n    value: function diff() {\n      return immutablediff__WEBPACK_IMPORTED_MODULE_2___default()(FormLoadState, this.collect());\n    } // When the form doesn't exist or there are no fields, `equals` returns `null`\n    // for this reason, _NEVER_ check with !Instance.equals(), use Instance.equals() === false\n\n  }, {\n    key: \"equals\",\n    value: function equals() {\n      if (!this.form || !this.fields.length) {\n        return null;\n      }\n\n      return immutable__WEBPACK_IMPORTED_MODULE_1___default().is(FormLoadState, this.collect());\n    }\n  }]);\n\n  return FormState;\n}();\n\n\n;\nvar Instance = new FormState();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/forms/state.js\n");

/***/ }),

/***/ "./app/main.js":
/*!*********************!*\
  !*** ./app/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/polyfill */ \"./node_modules/@babel/polyfill/lib/index.js\");\n/* harmony import */ var _babel_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_polyfill__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_remodal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/remodal */ \"./app/utils/remodal.js\");\n/* harmony import */ var simplebar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! simplebar */ \"./node_modules/simplebar/dist/simplebar.esm.js\");\n/* harmony import */ var _utils_gpm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/gpm */ \"./app/utils/gpm.js\");\n/* harmony import */ var _utils_keepalive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/keepalive */ \"./app/utils/keepalive.js\");\n/* harmony import */ var _updates__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./updates */ \"./app/updates/index.js\");\n/* harmony import */ var _dashboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dashboard */ \"./app/dashboard/index.js\");\n/* harmony import */ var _pages__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pages */ \"./app/pages/index.js\");\n/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./forms */ \"./app/forms/index.js\");\n/* harmony import */ var _utils_cookies__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/cookies */ \"./app/utils/cookies.js\");\n/* harmony import */ var _plugins__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./plugins */ \"./app/plugins/index.js\");\n/* harmony import */ var _themes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./themes */ \"./app/themes/index.js\");\n/* harmony import */ var _media__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./media */ \"./app/media/index.js\");\n/* harmony import */ var _utils_toastr__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/toastr */ \"./app/utils/toastr.js\");\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/request */ \"./app/utils/request.js\");\n/* harmony import */ var _utils_2fa__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/2fa */ \"./app/utils/2fa.js\");\n/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./tools */ \"./app/tools/index.js\");\n/* harmony import */ var _whitelabel__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./whitelabel */ \"./app/whitelabel/index.js\");\n/* harmony import */ var _utils_bootstrap_transition__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./utils/bootstrap-transition */ \"./app/utils/bootstrap-transition.js\");\n/* harmony import */ var _utils_bootstrap_collapse__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./utils/bootstrap-collapse */ \"./app/utils/bootstrap-collapse.js\");\n/* harmony import */ var _utils_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./utils/bootstrap-dropdown */ \"./app/utils/bootstrap-dropdown.js\");\n/* harmony import */ var _utils_tabs_memory__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./utils/tabs-memory */ \"./app/utils/tabs-memory.js\");\n/* harmony import */ var _utils_changelog__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./utils/changelog */ \"./app/utils/changelog.js\");\n/* harmony import */ var _utils_sidebar__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./utils/sidebar */ \"./app/utils/sidebar.js\");\n// polyfills\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // bootstrap jQuery extensions\n\n\n\n // tabs memory\n\n // changelog\n\n // Main Sidebar\n\n // starts the keep alive, auto runs every X seconds\n\n_utils_keepalive__WEBPACK_IMPORTED_MODULE_5__[\"default\"].start(); // global event to catch sidebar_state changes\n\njquery__WEBPACK_IMPORTED_MODULE_1___default()(__webpack_require__.g).on('sidebar_state._grav', function () {\n  Object.keys(_dashboard__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Chart.Instances).forEach(function (chart) {\n    setTimeout(function () {\n      return _dashboard__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Chart.Instances[chart].chart.update();\n    }, 10);\n  });\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  GPM: {\n    GPM: _utils_gpm__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    Instance: _utils_gpm__WEBPACK_IMPORTED_MODULE_4__.Instance\n  },\n  KeepAlive: _utils_keepalive__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  Dashboard: _dashboard__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  Pages: _pages__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n  Forms: _forms__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n  Updates: {\n    Updates: _updates__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    Notifications: _updates__WEBPACK_IMPORTED_MODULE_6__.Notifications,\n    Feed: _updates__WEBPACK_IMPORTED_MODULE_6__.Feed,\n    Instance: _updates__WEBPACK_IMPORTED_MODULE_6__.Instance\n  },\n  Sidebar: {\n    Sidebar: _utils_sidebar__WEBPACK_IMPORTED_MODULE_24__[\"default\"],\n    Instance: _utils_sidebar__WEBPACK_IMPORTED_MODULE_24__.Instance\n  },\n  MediaFilter: {\n    MediaFilter: _media__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n    Instance: _media__WEBPACK_IMPORTED_MODULE_13__.Instance\n  },\n  Scrollbar: {\n    Scrollbar: {\n      deprecated: true\n    },\n    Instance: {\n      deprecated: true\n    }\n  },\n  Utils: {\n    request: _utils_request__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n    toastr: _utils_toastr__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n    Cookies: _utils_cookies__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvbWFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Q0FHQTs7QUFDQTtBQUNBO0NBR0E7O0NBR0E7O0NBR0E7O0NBR0E7O0FBQ0FJLDhEQUFBLElBRUE7O0FBQ0FKLDZDQUFDLENBQUNvQixxQkFBRCxDQUFELENBQVVDLEVBQVYsQ0FBYSxxQkFBYixFQUFvQyxZQUFNO0FBQ3RDQyxFQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWWQsa0VBQVosRUFBdUNpQixPQUF2QyxDQUErQyxVQUFDQyxLQUFELEVBQVc7QUFDdERDLElBQUFBLFVBQVUsQ0FBQztBQUFBLGFBQU1uQixrRUFBQSxDQUEwQmtCLEtBQTFCLEVBQWlDQSxLQUFqQyxDQUF1Q0UsTUFBdkMsRUFBTjtBQUFBLEtBQUQsRUFBd0QsRUFBeEQsQ0FBVjtBQUNILEdBRkQ7QUFHSCxDQUpEO0FBTUEsaUVBQWU7QUFDWDVCLEVBQUFBLEdBQUcsRUFBRTtBQUNEQSxJQUFBQSxHQUFHLEVBQUhBLGtEQURDO0FBRURDLElBQUFBLFFBQVEsRUFBRUMsZ0RBQUdBO0FBRlosR0FETTtBQUtYQyxFQUFBQSxTQUFTLEVBQVRBLHdEQUxXO0FBTVhLLEVBQUFBLFNBQVMsRUFBVEEsa0RBTlc7QUFPWEMsRUFBQUEsS0FBSyxFQUFMQSw4Q0FQVztBQVFYQyxFQUFBQSxLQUFLLEVBQUxBLDhDQVJXO0FBU1hOLEVBQUFBLE9BQU8sRUFBRTtBQUNMQSxJQUFBQSxPQUFPLEVBQVBBLGdEQURLO0FBRUxFLElBQUFBLGFBQWEsRUFBYkEsbURBRks7QUFHTEMsSUFBQUEsSUFBSSxFQUFKQSwwQ0FISztBQUlMTixJQUFBQSxRQUFRLEVBQUVJLDhDQUFPQTtBQUpaLEdBVEU7QUFlWFcsRUFBQUEsT0FBTyxFQUFFO0FBQ0xBLElBQUFBLE9BQU8sRUFBUEEsdURBREs7QUFFTGYsSUFBQUEsUUFBUSxFQUFFZ0IscURBQU9BO0FBRlosR0FmRTtBQW1CWEwsRUFBQUEsV0FBVyxFQUFFO0FBQ1RBLElBQUFBLFdBQVcsRUFBWEEsK0NBRFM7QUFFVFgsSUFBQUEsUUFBUSxFQUFFWSw2Q0FBbUJBO0FBRnBCLEdBbkJGO0FBdUJYZ0IsRUFBQUEsU0FBUyxFQUFFO0FBQUVBLElBQUFBLFNBQVMsRUFBRTtBQUFFQyxNQUFBQSxVQUFVLEVBQUU7QUFBZCxLQUFiO0FBQW1DN0IsSUFBQUEsUUFBUSxFQUFFO0FBQUU2QixNQUFBQSxVQUFVLEVBQUU7QUFBZDtBQUE3QyxHQXZCQTtBQXdCWEMsRUFBQUEsS0FBSyxFQUFFO0FBQUVoQixJQUFBQSxPQUFPLEVBQVBBLHVEQUFGO0FBQVdELElBQUFBLE1BQU0sRUFBTkEsc0RBQVg7QUFBbUJILElBQUFBLE9BQU8sRUFBUEEsdURBQU9BO0FBQTFCO0FBeEJJLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL21haW4uanM/ZjE2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwb2x5ZmlsbHNcbmltcG9ydCAnQGJhYmVsL3BvbHlmaWxsJztcblxuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCAnLi91dGlscy9yZW1vZGFsJztcbmltcG9ydCAnc2ltcGxlYmFyJztcbmltcG9ydCBHUE0sIHsgSW5zdGFuY2UgYXMgZ3BtIH0gZnJvbSAnLi91dGlscy9ncG0nO1xuaW1wb3J0IEtlZXBBbGl2ZSBmcm9tICcuL3V0aWxzL2tlZXBhbGl2ZSc7XG5pbXBvcnQgVXBkYXRlcywgeyBJbnN0YW5jZSBhcyB1cGRhdGVzLCBOb3RpZmljYXRpb25zLCBGZWVkIH0gZnJvbSAnLi91cGRhdGVzJztcbmltcG9ydCBEYXNoYm9hcmQgZnJvbSAnLi9kYXNoYm9hcmQnO1xuaW1wb3J0IFBhZ2VzIGZyb20gJy4vcGFnZXMnO1xuaW1wb3J0IEZvcm1zIGZyb20gJy4vZm9ybXMnO1xuaW1wb3J0IENvb2tpZXMgZnJvbSAnLi91dGlscy9jb29raWVzJztcbmltcG9ydCAnLi9wbHVnaW5zJztcbmltcG9ydCAnLi90aGVtZXMnO1xuaW1wb3J0IE1lZGlhRmlsdGVyLCB7IEluc3RhbmNlIGFzIE1lZGlhRmlsdGVySW5zdGFuY2V9IGZyb20gJy4vbWVkaWEnO1xuaW1wb3J0IHRvYXN0ciBmcm9tICcuL3V0aWxzL3RvYXN0cic7XG5pbXBvcnQgcmVxdWVzdCBmcm9tICcuL3V0aWxzL3JlcXVlc3QnO1xuaW1wb3J0ICcuL3V0aWxzLzJmYSc7XG5pbXBvcnQgJy4vdG9vbHMnO1xuaW1wb3J0ICcuL3doaXRlbGFiZWwnO1xuXG4vLyBib290c3RyYXAgalF1ZXJ5IGV4dGVuc2lvbnNcbmltcG9ydCAnLi91dGlscy9ib290c3RyYXAtdHJhbnNpdGlvbic7XG5pbXBvcnQgJy4vdXRpbHMvYm9vdHN0cmFwLWNvbGxhcHNlJztcbmltcG9ydCAnLi91dGlscy9ib290c3RyYXAtZHJvcGRvd24nO1xuXG4vLyB0YWJzIG1lbW9yeVxuaW1wb3J0ICcuL3V0aWxzL3RhYnMtbWVtb3J5JztcblxuLy8gY2hhbmdlbG9nXG5pbXBvcnQgJy4vdXRpbHMvY2hhbmdlbG9nJztcblxuLy8gTWFpbiBTaWRlYmFyXG5pbXBvcnQgU2lkZWJhciwgeyBJbnN0YW5jZSBhcyBzaWRlYmFyIH0gZnJvbSAnLi91dGlscy9zaWRlYmFyJztcblxuLy8gc3RhcnRzIHRoZSBrZWVwIGFsaXZlLCBhdXRvIHJ1bnMgZXZlcnkgWCBzZWNvbmRzXG5LZWVwQWxpdmUuc3RhcnQoKTtcblxuLy8gZ2xvYmFsIGV2ZW50IHRvIGNhdGNoIHNpZGViYXJfc3RhdGUgY2hhbmdlc1xuJChnbG9iYWwpLm9uKCdzaWRlYmFyX3N0YXRlLl9ncmF2JywgKCkgPT4ge1xuICAgIE9iamVjdC5rZXlzKERhc2hib2FyZC5DaGFydC5JbnN0YW5jZXMpLmZvckVhY2goKGNoYXJ0KSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gRGFzaGJvYXJkLkNoYXJ0Lkluc3RhbmNlc1tjaGFydF0uY2hhcnQudXBkYXRlKCksIDEwKTtcbiAgICB9KTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgR1BNOiB7XG4gICAgICAgIEdQTSxcbiAgICAgICAgSW5zdGFuY2U6IGdwbVxuICAgIH0sXG4gICAgS2VlcEFsaXZlLFxuICAgIERhc2hib2FyZCxcbiAgICBQYWdlcyxcbiAgICBGb3JtcyxcbiAgICBVcGRhdGVzOiB7XG4gICAgICAgIFVwZGF0ZXMsXG4gICAgICAgIE5vdGlmaWNhdGlvbnMsXG4gICAgICAgIEZlZWQsXG4gICAgICAgIEluc3RhbmNlOiB1cGRhdGVzXG4gICAgfSxcbiAgICBTaWRlYmFyOiB7XG4gICAgICAgIFNpZGViYXIsXG4gICAgICAgIEluc3RhbmNlOiBzaWRlYmFyXG4gICAgfSxcbiAgICBNZWRpYUZpbHRlcjoge1xuICAgICAgICBNZWRpYUZpbHRlcixcbiAgICAgICAgSW5zdGFuY2U6IE1lZGlhRmlsdGVySW5zdGFuY2VcbiAgICB9LFxuICAgIFNjcm9sbGJhcjogeyBTY3JvbGxiYXI6IHsgZGVwcmVjYXRlZDogdHJ1ZSB9LCBJbnN0YW5jZTogeyBkZXByZWNhdGVkOiB0cnVlIH0gfSxcbiAgICBVdGlsczogeyByZXF1ZXN0LCB0b2FzdHIsIENvb2tpZXMgfVxufTtcbiJdLCJuYW1lcyI6WyIkIiwiR1BNIiwiSW5zdGFuY2UiLCJncG0iLCJLZWVwQWxpdmUiLCJVcGRhdGVzIiwidXBkYXRlcyIsIk5vdGlmaWNhdGlvbnMiLCJGZWVkIiwiRGFzaGJvYXJkIiwiUGFnZXMiLCJGb3JtcyIsIkNvb2tpZXMiLCJNZWRpYUZpbHRlciIsIk1lZGlhRmlsdGVySW5zdGFuY2UiLCJ0b2FzdHIiLCJyZXF1ZXN0IiwiU2lkZWJhciIsInNpZGViYXIiLCJzdGFydCIsImdsb2JhbCIsIm9uIiwiT2JqZWN0Iiwia2V5cyIsIkNoYXJ0IiwiSW5zdGFuY2VzIiwiZm9yRWFjaCIsImNoYXJ0Iiwic2V0VGltZW91dCIsInVwZGF0ZSIsIlNjcm9sbGJhciIsImRlcHJlY2F0ZWQiLCJVdGlscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/main.js\n");

/***/ }),

/***/ "./app/media/index.js":
/*!****************************!*\
  !*** ./app/media/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Filter),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar Filter = /*#__PURE__*/function () {\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    this.URI = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/media-manager/\");\n  }\n\n  _createClass(Filter, [{\n    key: \"filter\",\n    value: function filter(name, value) {\n      var filtered = [];\n      var keys = Object.keys(grav_config__WEBPACK_IMPORTED_MODULE_1__.uri_params);\n\n      if (!~keys.indexOf(name)) {\n        keys.push(name);\n      }\n\n      keys.forEach(function (key) {\n        var filter = Filter.cleanValue(key === name ? value : grav_config__WEBPACK_IMPORTED_MODULE_1__.uri_params[key]);\n\n        if (filter !== '*') {\n          filtered.push(\"\".concat(key).concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep).concat(filter));\n        }\n      });\n      __webpack_require__.g.location = this.URI + filtered.join('/');\n    }\n  }], [{\n    key: \"cleanValue\",\n    value: function cleanValue(value) {\n      return encodeURIComponent(value.replace('/', '\\\\'));\n    }\n  }]);\n\n  return Filter;\n}();\n\n\nvar Instance = new Filter();\nvar isLoading = false;\nvar filters = {};\nvar global_index = 1;\nvar files_ended = false;\nvar MEDIA_PAGINATION_INTERVAL = 20;\n/* handle changing file type / date filter */\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('change', '.thumbs-list-container select.filter', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var filterName = target.data('name');\n  var filterValue = target.val();\n\n  if (filterValue) {\n    filters[filterName] = filterValue;\n  } else {\n    delete filters[filterName];\n  }\n\n  filterFiles();\n});\n/* initialize media uploader */\n\nif (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.thumbs-list-container .dropzone')[0]) {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.thumbs-list-container .dropzone')[0].dropzone.on('queuecomplete', function () {\n    var body = {};\n\n    if (filters.page) {\n      body.page = filters.page;\n    }\n\n    if (filters.date) {\n      body.date = filters.date;\n    }\n\n    if (filters.type) {\n      body.type = filters.type;\n    }\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.dropzone')[0].dropzone.files.forEach(function (file) {\n      file.previewElement.remove();\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.dropzone').first().removeClass('dz-started');\n    (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/media-manager.json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"clearMediaCache\"), {\n      method: 'post',\n      body: body\n    }, function () {\n      filterFiles();\n    });\n  });\n}\n/* handle loading media */\n\n\nvar loadMedia = function loadMedia(filters, callback) {\n  var url = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/media.json/tmpl\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"media-list-content/index\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep).concat(global_index);\n\n  if (filters.page) {\n    url += \"/page\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep).concat(filters.page.split('/').join('%5C'));\n  }\n\n  if (filters.type && filters.type !== '*') {\n    url += \"/type\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep).concat(filters.type);\n  }\n\n  if (filters.date && filters.date !== '*') {\n    url += \"/date\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep).concat(filters.date);\n  }\n\n  if (!isLoading) {\n    isLoading = true;\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.spinning-wheel').show();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default().get(url, function (content) {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__files').append(content);\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.spinning-wheel').hide();\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.media-container .media-range').trigger('change');\n      isLoading = false;\n      global_index++;\n      callback(content);\n    });\n  }\n};\n\nvar cleanFilesList = function cleanFilesList() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__files .card-item').remove();\n};\n\nvar resetActiveStateInSidebar = function resetActiveStateInSidebar() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.pages-list-container .row').removeClass('active'); // clear active state in sidebar\n};\n\nvar showEmptyState = function showEmptyState() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.thumbs-list-container').append('<p class=\"card-item empty-space\">No media found</p>');\n};\n\nvar filterFiles = function filterFiles() {\n  cleanFilesList();\n  global_index = 0;\n  files_ended = false;\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.empty-space').remove();\n  loadMedia(filters, function (content) {\n    if (!content.trim().length) {\n      showEmptyState();\n    } else {\n      if (!filters.page && (!filters.date || filters.date === '*') && (!filters.type || filters.type === '*')) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__files').trigger('fillView');\n      }\n    }\n  });\n};\n/* handle changing page */\n\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('click', '.pages-list-container .js__page-link', function (event) {\n  var page = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).data('page');\n  filters['page'] = page;\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.media-list-title .page-indicator').html(page); // set indication\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__reset-pages-filter').removeClass('hidden'); // activate reset pages icon\n\n  resetActiveStateInSidebar();\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).parents('.row').addClass('active'); // set active state in sidebar\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__file-uploader').removeClass('hidden'); // customize processing URL, as the page changes dynamically\n\n  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.dropzone')[0]) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.dropzone')[0].dropzone.on('processing', function (file) {\n      this.options.url = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/media-manager\").concat(page, \".json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"addmedia\");\n    });\n  }\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__button-clear-media-cache').addClass('hidden');\n  filterFiles();\n  disableInfiniteScrolling(); // only infinite scroll on main list, not inside single pages\n});\n/* handle clearing page filter */\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('click', '.js__reset-pages-filter', function (event) {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.media-list-title .page-indicator').html('All Pages'); // set indication\n\n  cleanFilesList();\n  resetActiveStateInSidebar();\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__reset-pages-filter').addClass('hidden'); // remove reset pages icon\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__file-uploader').addClass('hidden');\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__button-clear-media-cache').removeClass('hidden');\n  delete filters['page'];\n  filterFiles();\n});\n/* handle infinite loading */\n\nvar enableInfiniteScrolling = function enableInfiniteScrolling() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.spinning-wheel').hide();\n  var view = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.mediapicker-scroll').last();\n\n  if (!view.length) {\n    return;\n  }\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(view).on('scroll', function () {\n    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).scrollTop() + jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).innerHeight() + 100 >= jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)[0].scrollHeight) {\n      fillView();\n    }\n  });\n};\n\nvar loadNextBatch = function loadNextBatch(callback) {\n  if (files_ended) {\n    return;\n  }\n\n  loadMedia({}, function (content) {\n    if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(content).length || content.split('card-item').length - 1 < MEDIA_PAGINATION_INTERVAL) {\n      files_ended = true;\n    } else {\n      if (callback) {\n        callback();\n      }\n    }\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.media-container .media-range').trigger('input');\n  });\n};\n\nvar fillView = function fillView() {\n  if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__files').find('.card-item').last().offset()) {\n    setTimeout(function () {\n      // retry later\n      fillView();\n    }, 300);\n    return;\n  }\n\n  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__files').find('.card-item').last().offset().top - 1 <= jquery__WEBPACK_IMPORTED_MODULE_0___default()('.media-container').height()) {\n    loadNextBatch(function () {\n      fillView();\n    });\n  }\n};\n/* disable infinite loading */\n\n\nvar disableInfiniteScrolling = function disableInfiniteScrolling() {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.spinning-wheel').hide();\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.content-wrapper').unbind('scroll');\n};\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__files').on('fillView', function (event) {\n  // the first batch got the max number of media files, try loading more\n  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()('.js__files')[0].innerHTML.split('card-item').length - 1 === MEDIA_PAGINATION_INTERVAL) {\n    fillView();\n    enableInfiniteScrolling();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFBdEIsQ0FBNkIsUUFBN0I7QUFDSCxDQUhEOztBQUtBcEYsNkNBQUMsQ0FBQyxZQUFELENBQUQsQ0FBZ0I4QixFQUFoQixDQUFtQixVQUFuQixFQUErQixVQUFTQyxLQUFULEVBQWdCO0FBQzNDO0FBQ0EsTUFBSy9CLDZDQUFDLENBQUMsWUFBRCxDQUFELENBQWdCLENBQWhCLEVBQW1CcUYsU0FBbkIsQ0FBNkIvQixLQUE3QixDQUFtQyxXQUFuQyxFQUFnRFcsTUFBaEQsR0FBeUQsQ0FBMUQsS0FBaUVwQyx5QkFBckUsRUFBZ0c7QUFDNUZnRCxJQUFBQSxRQUFRO0FBQ1JOLElBQUFBLHVCQUF1QjtBQUMxQjtBQUNKLENBTkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL21lZGlhL2luZGV4LmpzPzE1NDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7IGNvbmZpZywgdXJpX3BhcmFtcyB9IGZyb20gJ2dyYXYtY29uZmlnJztcbmltcG9ydCByZXF1ZXN0IGZyb20gJy4uL3V0aWxzL3JlcXVlc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaWx0ZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLlVSSSA9IGAke2NvbmZpZy5iYXNlX3VybF9yZWxhdGl2ZX0vbWVkaWEtbWFuYWdlci9gO1xuICAgIH1cblxuICAgIGZpbHRlcihuYW1lLCB2YWx1ZSkge1xuICAgICAgICBsZXQgZmlsdGVyZWQgPSBbXTtcbiAgICAgICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyh1cmlfcGFyYW1zKTtcbiAgICAgICAgaWYgKCF+a2V5cy5pbmRleE9mKG5hbWUpKSB7IGtleXMucHVzaChuYW1lKTsgfVxuXG4gICAgICAgIGtleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgICBsZXQgZmlsdGVyID0gRmlsdGVyLmNsZWFuVmFsdWUoa2V5ID09PSBuYW1lID8gdmFsdWUgOiB1cmlfcGFyYW1zW2tleV0pO1xuICAgICAgICAgICAgaWYgKGZpbHRlciAhPT0gJyonKSB7XG4gICAgICAgICAgICAgICAgZmlsdGVyZWQucHVzaChgJHtrZXl9JHtjb25maWcucGFyYW1fc2VwfSR7ZmlsdGVyfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBnbG9iYWwubG9jYXRpb24gPSB0aGlzLlVSSSArIGZpbHRlcmVkLmpvaW4oJy8nKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgY2xlYW5WYWx1ZSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlLnJlcGxhY2UoJy8nLCAnXFxcXCcpKTtcbiAgICB9XG59XG5cbmV4cG9ydCBsZXQgSW5zdGFuY2UgPSBuZXcgRmlsdGVyKCk7XG52YXIgaXNMb2FkaW5nID0gZmFsc2U7XG5cbnZhciBmaWx0ZXJzID0ge307XG52YXIgZ2xvYmFsX2luZGV4ID0gMTtcbnZhciBmaWxlc19lbmRlZCA9IGZhbHNlO1xuY29uc3QgTUVESUFfUEFHSU5BVElPTl9JTlRFUlZBTCA9IDIwO1xuXG4vKiBoYW5kbGUgY2hhbmdpbmcgZmlsZSB0eXBlIC8gZGF0ZSBmaWx0ZXIgKi9cbiQoJ2JvZHknKS5vbignY2hhbmdlJywgJy50aHVtYnMtbGlzdC1jb250YWluZXIgc2VsZWN0LmZpbHRlcicsIChldmVudCkgPT4ge1xuICAgIGxldCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgIGxldCBmaWx0ZXJOYW1lID0gdGFyZ2V0LmRhdGEoJ25hbWUnKTtcbiAgICBsZXQgZmlsdGVyVmFsdWUgPSB0YXJnZXQudmFsKCk7XG5cbiAgICBpZiAoZmlsdGVyVmFsdWUpIHtcbiAgICAgICAgZmlsdGVyc1tmaWx0ZXJOYW1lXSA9IGZpbHRlclZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGRlbGV0ZSBmaWx0ZXJzW2ZpbHRlck5hbWVdO1xuICAgIH1cblxuICAgIGZpbHRlckZpbGVzKCk7XG59KTtcblxuLyogaW5pdGlhbGl6ZSBtZWRpYSB1cGxvYWRlciAqL1xuaWYgKCQoJy50aHVtYnMtbGlzdC1jb250YWluZXIgLmRyb3B6b25lJylbMF0pIHtcbiAgICAkKCcudGh1bWJzLWxpc3QtY29udGFpbmVyIC5kcm9wem9uZScpWzBdLmRyb3B6b25lLm9uKCdxdWV1ZWNvbXBsZXRlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCBib2R5ID0ge307XG4gICAgICAgIGlmIChmaWx0ZXJzLnBhZ2UpIHsgYm9keS5wYWdlID0gZmlsdGVycy5wYWdlOyB9XG4gICAgICAgIGlmIChmaWx0ZXJzLmRhdGUpIHsgYm9keS5kYXRlID0gZmlsdGVycy5kYXRlOyB9XG4gICAgICAgIGlmIChmaWx0ZXJzLnR5cGUpIHsgYm9keS50eXBlID0gZmlsdGVycy50eXBlOyB9XG5cbiAgICAgICAgJCgnLmRyb3B6b25lJylbMF0uZHJvcHpvbmUuZmlsZXMuZm9yRWFjaChmdW5jdGlvbihmaWxlKSB7IGZpbGUucHJldmlld0VsZW1lbnQucmVtb3ZlKCk7IH0pO1xuICAgICAgICAkKCcuZHJvcHpvbmUnKS5maXJzdCgpLnJlbW92ZUNsYXNzKCdkei1zdGFydGVkJyk7XG5cbiAgICAgICAgcmVxdWVzdChgJHtjb25maWcuYmFzZV91cmxfcmVsYXRpdmV9L21lZGlhLW1hbmFnZXIuanNvbi90YXNrJHtjb25maWcucGFyYW1fc2VwfWNsZWFyTWVkaWFDYWNoZWAsIHsgbWV0aG9kOiAncG9zdCcsIGJvZHkgfSwgKCkgPT4ge1xuICAgICAgICAgICAgZmlsdGVyRmlsZXMoKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5cbi8qIGhhbmRsZSBsb2FkaW5nIG1lZGlhICovXG52YXIgbG9hZE1lZGlhID0gZnVuY3Rpb24gbG9hZE1lZGlhKGZpbHRlcnMsIGNhbGxiYWNrKSB7XG4gICAgdmFyIHVybCA9IGAke2NvbmZpZy5iYXNlX3VybF9yZWxhdGl2ZX0vbWVkaWEuanNvbi90bXBsJHtjb25maWcucGFyYW1fc2VwfW1lZGlhLWxpc3QtY29udGVudC9pbmRleCR7Y29uZmlnLnBhcmFtX3NlcH0ke2dsb2JhbF9pbmRleH1gO1xuXG4gICAgaWYgKGZpbHRlcnMucGFnZSkge1xuICAgICAgICB1cmwgKz0gYC9wYWdlJHtjb25maWcucGFyYW1fc2VwfSR7KGZpbHRlcnMucGFnZSkuc3BsaXQoJy8nKS5qb2luKCclNUMnKX1gO1xuICAgIH1cbiAgICBpZiAoZmlsdGVycy50eXBlICYmIGZpbHRlcnMudHlwZSAhPT0gJyonKSB7XG4gICAgICAgIHVybCArPSBgL3R5cGUke2NvbmZpZy5wYXJhbV9zZXB9JHtmaWx0ZXJzLnR5cGV9YDtcbiAgICB9XG4gICAgaWYgKGZpbHRlcnMuZGF0ZSAmJiBmaWx0ZXJzLmRhdGUgIT09ICcqJykge1xuICAgICAgICB1cmwgKz0gYC9kYXRlJHtjb25maWcucGFyYW1fc2VwfSR7ZmlsdGVycy5kYXRlfWA7XG4gICAgfVxuXG4gICAgaWYgKCFpc0xvYWRpbmcpIHtcbiAgICAgICAgaXNMb2FkaW5nID0gdHJ1ZTtcblxuICAgICAgICAkKCcuc3Bpbm5pbmctd2hlZWwnKS5zaG93KCk7XG4gICAgICAgICQuZ2V0KHVybCwgZnVuY3Rpb24oY29udGVudCkge1xuICAgICAgICAgICAgJCgnLmpzX19maWxlcycpLmFwcGVuZChjb250ZW50KTtcbiAgICAgICAgICAgICQoJy5zcGlubmluZy13aGVlbCcpLmhpZGUoKTtcbiAgICAgICAgICAgICQoJy5tZWRpYS1jb250YWluZXIgLm1lZGlhLXJhbmdlJykudHJpZ2dlcignY2hhbmdlJyk7XG4gICAgICAgICAgICBpc0xvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIGdsb2JhbF9pbmRleCsrO1xuXG4gICAgICAgICAgICBjYWxsYmFjayhjb250ZW50KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxudmFyIGNsZWFuRmlsZXNMaXN0ID0gZnVuY3Rpb24gY2xlYW5GaWxlc0xpc3QoKSB7XG4gICAgJCgnLmpzX19maWxlcyAuY2FyZC1pdGVtJykucmVtb3ZlKCk7XG59O1xuXG52YXIgcmVzZXRBY3RpdmVTdGF0ZUluU2lkZWJhciA9IGZ1bmN0aW9uIHJlc2V0QWN0aXZlU3RhdGVJblNpZGViYXIoKSB7XG4gICAgJCgnLnBhZ2VzLWxpc3QtY29udGFpbmVyIC5yb3cnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7IC8vIGNsZWFyIGFjdGl2ZSBzdGF0ZSBpbiBzaWRlYmFyXG59O1xuXG52YXIgc2hvd0VtcHR5U3RhdGUgPSBmdW5jdGlvbiBzaG93RW1wdHlTdGF0ZSgpIHtcbiAgICAkKCcudGh1bWJzLWxpc3QtY29udGFpbmVyJykuYXBwZW5kKCc8cCBjbGFzcz1cImNhcmQtaXRlbSBlbXB0eS1zcGFjZVwiPk5vIG1lZGlhIGZvdW5kPC9wPicpO1xufTtcblxudmFyIGZpbHRlckZpbGVzID0gZnVuY3Rpb24gZmlsdGVyRmlsZXMoKSB7XG4gICAgY2xlYW5GaWxlc0xpc3QoKTtcbiAgICBnbG9iYWxfaW5kZXggPSAwO1xuICAgIGZpbGVzX2VuZGVkID0gZmFsc2U7XG4gICAgJCgnLmVtcHR5LXNwYWNlJykucmVtb3ZlKCk7XG4gICAgbG9hZE1lZGlhKGZpbHRlcnMsIGZ1bmN0aW9uKGNvbnRlbnQpIHtcbiAgICAgICAgaWYgKCFjb250ZW50LnRyaW0oKS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHNob3dFbXB0eVN0YXRlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoIWZpbHRlcnMucGFnZSAmJiAoIWZpbHRlcnMuZGF0ZSB8fCBmaWx0ZXJzLmRhdGUgPT09ICcqJykgJiYgKCFmaWx0ZXJzLnR5cGUgfHwgZmlsdGVycy50eXBlID09PSAnKicpKSB7XG4gICAgICAgICAgICAgICAgJCgnLmpzX19maWxlcycpLnRyaWdnZXIoJ2ZpbGxWaWV3Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbi8qIGhhbmRsZSBjaGFuZ2luZyBwYWdlICovXG4kKCdib2R5Jykub24oJ2NsaWNrJywgJy5wYWdlcy1saXN0LWNvbnRhaW5lciAuanNfX3BhZ2UtbGluaycsIChldmVudCkgPT4ge1xuICAgIHZhciBwYWdlID0gJChldmVudC50YXJnZXQpLmRhdGEoJ3BhZ2UnKTtcbiAgICBmaWx0ZXJzWydwYWdlJ10gPSBwYWdlO1xuXG4gICAgJCgnLm1lZGlhLWxpc3QtdGl0bGUgLnBhZ2UtaW5kaWNhdG9yJykuaHRtbChwYWdlKTsgLy8gc2V0IGluZGljYXRpb25cbiAgICAkKCcuanNfX3Jlc2V0LXBhZ2VzLWZpbHRlcicpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTsgLy8gYWN0aXZhdGUgcmVzZXQgcGFnZXMgaWNvblxuICAgIHJlc2V0QWN0aXZlU3RhdGVJblNpZGViYXIoKTtcbiAgICAkKGV2ZW50LnRhcmdldCkucGFyZW50cygnLnJvdycpLmFkZENsYXNzKCdhY3RpdmUnKTsgLy8gc2V0IGFjdGl2ZSBzdGF0ZSBpbiBzaWRlYmFyXG4gICAgJCgnLmpzX19maWxlLXVwbG9hZGVyJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuXG4gICAgLy8gY3VzdG9taXplIHByb2Nlc3NpbmcgVVJMLCBhcyB0aGUgcGFnZSBjaGFuZ2VzIGR5bmFtaWNhbGx5XG4gICAgaWYgKCQoJy5kcm9wem9uZScpWzBdKSB7XG4gICAgICAgICQoJy5kcm9wem9uZScpWzBdLmRyb3B6b25lLm9uKCdwcm9jZXNzaW5nJywgZnVuY3Rpb24oZmlsZSkge1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zLnVybCA9IGAke2NvbmZpZy5iYXNlX3VybF9yZWxhdGl2ZX0vbWVkaWEtbWFuYWdlciR7cGFnZX0uanNvbi90YXNrJHtjb25maWcucGFyYW1fc2VwfWFkZG1lZGlhYDtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgJCgnLmpzX19idXR0b24tY2xlYXItbWVkaWEtY2FjaGUnKS5hZGRDbGFzcygnaGlkZGVuJyk7XG4gICAgZmlsdGVyRmlsZXMoKTtcblxuICAgIGRpc2FibGVJbmZpbml0ZVNjcm9sbGluZygpOyAvLyBvbmx5IGluZmluaXRlIHNjcm9sbCBvbiBtYWluIGxpc3QsIG5vdCBpbnNpZGUgc2luZ2xlIHBhZ2VzXG59KTtcblxuLyogaGFuZGxlIGNsZWFyaW5nIHBhZ2UgZmlsdGVyICovXG4kKCdib2R5Jykub24oJ2NsaWNrJywgJy5qc19fcmVzZXQtcGFnZXMtZmlsdGVyJywgKGV2ZW50KSA9PiB7XG4gICAgJCgnLm1lZGlhLWxpc3QtdGl0bGUgLnBhZ2UtaW5kaWNhdG9yJykuaHRtbCgnQWxsIFBhZ2VzJyk7IC8vIHNldCBpbmRpY2F0aW9uXG4gICAgY2xlYW5GaWxlc0xpc3QoKTtcbiAgICByZXNldEFjdGl2ZVN0YXRlSW5TaWRlYmFyKCk7XG4gICAgJCgnLmpzX19yZXNldC1wYWdlcy1maWx0ZXInKS5hZGRDbGFzcygnaGlkZGVuJyk7IC8vIHJlbW92ZSByZXNldCBwYWdlcyBpY29uXG4gICAgJCgnLmpzX19maWxlLXVwbG9hZGVyJykuYWRkQ2xhc3MoJ2hpZGRlbicpO1xuICAgICQoJy5qc19fYnV0dG9uLWNsZWFyLW1lZGlhLWNhY2hlJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuICAgIGRlbGV0ZSBmaWx0ZXJzWydwYWdlJ107XG5cbiAgICBmaWx0ZXJGaWxlcygpO1xufSk7XG5cbi8qIGhhbmRsZSBpbmZpbml0ZSBsb2FkaW5nICovXG52YXIgZW5hYmxlSW5maW5pdGVTY3JvbGxpbmcgPSBmdW5jdGlvbiBlbmFibGVJbmZpbml0ZVNjcm9sbGluZygpIHtcbiAgICAkKCcuc3Bpbm5pbmctd2hlZWwnKS5oaWRlKCk7XG4gICAgdmFyIHZpZXcgPSAkKCcubWVkaWFwaWNrZXItc2Nyb2xsJykubGFzdCgpO1xuXG4gICAgaWYgKCF2aWV3Lmxlbmd0aCkgeyByZXR1cm47IH1cblxuICAgICQodmlldykub24oJ3Njcm9sbCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoKCQodGhpcykuc2Nyb2xsVG9wKCkgKyAkKHRoaXMpLmlubmVySGVpZ2h0KCkgKyAxMDApID49ICQodGhpcylbMF0uc2Nyb2xsSGVpZ2h0KSB7XG4gICAgICAgICAgICBmaWxsVmlldygpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuXG52YXIgbG9hZE5leHRCYXRjaCA9IGZ1bmN0aW9uIGxvYWROZXh0QmF0Y2goY2FsbGJhY2spIHtcbiAgICBpZiAoZmlsZXNfZW5kZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxvYWRNZWRpYSh7fSwgZnVuY3Rpb24oY29udGVudCkge1xuICAgICAgICBpZiAoISQoY29udGVudCkubGVuZ3RoIHx8ICgoY29udGVudC5zcGxpdCgnY2FyZC1pdGVtJykubGVuZ3RoIC0gMSkgPCBNRURJQV9QQUdJTkFUSU9OX0lOVEVSVkFMKSkge1xuICAgICAgICAgICAgZmlsZXNfZW5kZWQgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICQoJy5tZWRpYS1jb250YWluZXIgLm1lZGlhLXJhbmdlJykudHJpZ2dlcignaW5wdXQnKTtcbiAgICB9KTtcbn07XG5cbnZhciBmaWxsVmlldyA9IGZ1bmN0aW9uIGZpbGxWaWV3KCkge1xuICAgIGlmICghJCgnLmpzX19maWxlcycpLmZpbmQoJy5jYXJkLWl0ZW0nKS5sYXN0KCkub2Zmc2V0KCkpIHtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vIHJldHJ5IGxhdGVyXG4gICAgICAgICAgICBmaWxsVmlldygpO1xuICAgICAgICB9LCAzMDApO1xuXG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoJCgnLmpzX19maWxlcycpLmZpbmQoJy5jYXJkLWl0ZW0nKS5sYXN0KCkub2Zmc2V0KCkudG9wIC0gMSA8PSAkKCcubWVkaWEtY29udGFpbmVyJykuaGVpZ2h0KCkpIHtcbiAgICAgICAgbG9hZE5leHRCYXRjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGZpbGxWaWV3KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cbi8qIGRpc2FibGUgaW5maW5pdGUgbG9hZGluZyAqL1xudmFyIGRpc2FibGVJbmZpbml0ZVNjcm9sbGluZyA9IGZ1bmN0aW9uIGRpc2FibGVJbmZpbml0ZVNjcm9sbGluZygpIHtcbiAgICAkKCcuc3Bpbm5pbmctd2hlZWwnKS5oaWRlKCk7XG4gICAgJCgnLmNvbnRlbnQtd3JhcHBlcicpLnVuYmluZCgnc2Nyb2xsJyk7XG59O1xuXG4kKCcuanNfX2ZpbGVzJykub24oJ2ZpbGxWaWV3JywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAvLyB0aGUgZmlyc3QgYmF0Y2ggZ290IHRoZSBtYXggbnVtYmVyIG9mIG1lZGlhIGZpbGVzLCB0cnkgbG9hZGluZyBtb3JlXG4gICAgaWYgKCgkKCcuanNfX2ZpbGVzJylbMF0uaW5uZXJIVE1MLnNwbGl0KCdjYXJkLWl0ZW0nKS5sZW5ndGggLSAxKSA9PT0gTUVESUFfUEFHSU5BVElPTl9JTlRFUlZBTCkge1xuICAgICAgICBmaWxsVmlldygpO1xuICAgICAgICBlbmFibGVJbmZpbml0ZVNjcm9sbGluZygpO1xuICAgIH1cbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJjb25maWciLCJ1cmlfcGFyYW1zIiwicmVxdWVzdCIsIkZpbHRlciIsIlVSSSIsImJhc2VfdXJsX3JlbGF0aXZlIiwibmFtZSIsInZhbHVlIiwiZmlsdGVyZWQiLCJrZXlzIiwiT2JqZWN0IiwiaW5kZXhPZiIsInB1c2giLCJmb3JFYWNoIiwia2V5IiwiZmlsdGVyIiwiY2xlYW5WYWx1ZSIsInBhcmFtX3NlcCIsImdsb2JhbCIsImxvY2F0aW9uIiwiam9pbiIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJJbnN0YW5jZSIsImlzTG9hZGluZyIsImZpbHRlcnMiLCJnbG9iYWxfaW5kZXgiLCJmaWxlc19lbmRlZCIsIk1FRElBX1BBR0lOQVRJT05fSU5URVJWQUwiLCJvbiIsImV2ZW50IiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsImZpbHRlck5hbWUiLCJkYXRhIiwiZmlsdGVyVmFsdWUiLCJ2YWwiLCJmaWx0ZXJGaWxlcyIsImRyb3B6b25lIiwiYm9keSIsInBhZ2UiLCJkYXRlIiwidHlwZSIsImZpbGVzIiwiZmlsZSIsInByZXZpZXdFbGVtZW50IiwicmVtb3ZlIiwiZmlyc3QiLCJyZW1vdmVDbGFzcyIsIm1ldGhvZCIsImxvYWRNZWRpYSIsImNhbGxiYWNrIiwidXJsIiwic3BsaXQiLCJzaG93IiwiZ2V0IiwiY29udGVudCIsImFwcGVuZCIsImhpZGUiLCJ0cmlnZ2VyIiwiY2xlYW5GaWxlc0xpc3QiLCJyZXNldEFjdGl2ZVN0YXRlSW5TaWRlYmFyIiwic2hvd0VtcHR5U3RhdGUiLCJ0cmltIiwibGVuZ3RoIiwiaHRtbCIsInBhcmVudHMiLCJhZGRDbGFzcyIsIm9wdGlvbnMiLCJkaXNhYmxlSW5maW5pdGVTY3JvbGxpbmciLCJlbmFibGVJbmZpbml0ZVNjcm9sbGluZyIsInZpZXciLCJsYXN0Iiwic2Nyb2xsVG9wIiwiaW5uZXJIZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCJmaWxsVmlldyIsImxvYWROZXh0QmF0Y2giLCJmaW5kIiwib2Zmc2V0Iiwic2V0VGltZW91dCIsInRvcCIsImhlaWdodCIsInVuYmluZCIsImlubmVySFRNTCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/media/index.js\n");

/***/ }),

/***/ "./app/pages/filter.js":
/*!*****************************!*\
  !*** ./app/pages/filter.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PagesFilter),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\n/* harmony import */ var debounce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! debounce */ \"./node_modules/debounce/index.js\");\n/* harmony import */ var debounce__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(debounce__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tree */ \"./app/pages/tree.js\");\n/* harmony import */ var selectize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! selectize */ \"./node_modules/selectize/dist/js/selectize.js\");\n/* harmony import */ var selectize__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(selectize__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _utils_selectize_required_fix_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/selectize-required-fix.js */ \"./app/utils/selectize-required-fix.js\");\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/storage */ \"./app/utils/storage.js\");\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_utils_storage__WEBPACK_IMPORTED_MODULE_7__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n/* @formatter:off */\n\n/* eslint-disable */\n\nvar options = [{\n  flag: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.MODULE,\n  key: 'Module',\n  cat: 'mode'\n}, {\n  flag: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.VISIBLE,\n  key: 'Visible',\n  cat: 'mode'\n}, {\n  flag: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.ROUTABLE,\n  key: 'Routable',\n  cat: 'mode'\n}, {\n  flag: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.PUBLISHED,\n  key: 'Published',\n  cat: 'mode'\n}, {\n  flag: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.NON_MODULE,\n  key: 'NonModule',\n  cat: 'mode'\n}, {\n  flag: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.NON_VISIBLE,\n  key: 'NonVisible',\n  cat: 'mode'\n}, {\n  flag: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.NON_ROUTABLE,\n  key: 'NonRoutable',\n  cat: 'mode'\n}, {\n  flag: grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.NON_PUBLISHED,\n  key: 'NonPublished',\n  cat: 'mode'\n}];\n/* @formatter:on */\n\n/* eslint-enable */\n\nvar PagesFilter = /*#__PURE__*/function () {\n  function PagesFilter(filters, search) {\n    var _this = this;\n\n    _classCallCheck(this, PagesFilter);\n\n    this.filters = jquery__WEBPACK_IMPORTED_MODULE_0___default()(filters);\n    this.search = jquery__WEBPACK_IMPORTED_MODULE_0___default()(search);\n    this.options = options;\n    this.tree = _tree__WEBPACK_IMPORTED_MODULE_4__.Instance;\n    var storage = JSON.parse(localStorage.getItem('grav:admin:pages:filter') || '{}');\n\n    if (!this.filters.length || !this.search.length) {\n      return;\n    }\n\n    this.labels = this.filters.data('filter-labels');\n    this.search.on('input', debounce__WEBPACK_IMPORTED_MODULE_3___default()(function () {\n      return _this.filter();\n    }, 250));\n    this.filters.on('change', function () {\n      return _this.filter();\n    }); // restore state\n\n    if (storage.flags || storage.query) {\n      this.setValues(storage);\n      this.filter();\n    }\n\n    this._initSelectize();\n  }\n\n  _createClass(PagesFilter, [{\n    key: \"filter\",\n    value: function filter(value) {\n      var _this2 = this;\n\n      var data = {\n        flags: '',\n        query: ''\n      };\n\n      if (_typeof(value) === 'object') {\n        Object.assign(data, value);\n      }\n\n      if (typeof value === 'string') {\n        data.query = value;\n      }\n\n      if (typeof value === 'undefined') {\n        data.flags = this.filters.val();\n        data.query = this.search.val();\n      }\n\n      if (!Object.keys(data).filter(function (key) {\n        return data[key] !== '';\n      }).length) {\n        this.resetValues();\n        return;\n      }\n\n      data.flags = data.flags.replace(/(\\s{1,})?,(\\s{1,})?/g, ',');\n      this.setValues({\n        flags: data.flags,\n        query: data.query\n      }, 'silent');\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/pages-filter.json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"filterPages\"), {\n        method: 'post',\n        body: data\n      }, function (response) {\n        _this2.refreshDOM(response);\n      });\n    }\n  }, {\n    key: \"refreshDOM\",\n    value: function refreshDOM(response) {\n      var _this3 = this;\n\n      var items = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-nav-id]');\n\n      if (!response) {\n        items.removeClass('search-match').show();\n        this.tree.restore();\n        return;\n      }\n\n      items.removeClass('search-match').hide();\n      response.results.forEach(function (page) {\n        var match = items.filter(\"[data-nav-id=\\\"\".concat(page, \"\\\"]\")).addClass('search-match').show();\n        match.parents('[data-nav-id]').addClass('search-match').show();\n\n        _this3.tree.expand(page, 'no-store');\n      });\n    }\n  }, {\n    key: \"setValues\",\n    value: function setValues(_ref, silent) {\n      var _ref$flags = _ref.flags,\n          flags = _ref$flags === void 0 ? '' : _ref$flags,\n          _ref$query = _ref.query,\n          query = _ref$query === void 0 ? '' : _ref$query;\n      var flagsArray = flags.replace(/(\\s{1,})?,(\\s{1,})?/g, ',').split(',');\n\n      if (this.filters.val() !== flags) {\n        var selectize = this.filters.data('selectize');\n        this.filters[selectize ? 'setValue' : 'val'](flagsArray, silent);\n      }\n\n      if (this.search.val() !== query) {\n        this.search.val(query);\n      }\n\n      localStorage.setItem('grav:admin:pages:filter', JSON.stringify({\n        flags: flags,\n        query: query\n      }));\n    }\n  }, {\n    key: \"resetValues\",\n    value: function resetValues() {\n      this.setValues('', 'silent');\n      this.refreshDOM();\n    }\n  }, {\n    key: \"_initSelectize\",\n    value: function _initSelectize() {\n      var _this4 = this;\n\n      var extras = {\n        type: this.filters.data('filter-types') || {},\n        access: this.filters.data('filter-access-levels') || {}\n      };\n      Object.keys(extras).forEach(function (cat) {\n        Object.keys(extras[cat]).forEach(function (key) {\n          _this4.options.push({\n            cat: cat,\n            key: key,\n            flag: extras[cat][key]\n          });\n        });\n      });\n      this.filters.selectize({\n        maxItems: null,\n        valueField: 'key',\n        labelField: 'flag',\n        searchField: ['flag', 'key'],\n        options: this.options,\n        optgroups: this.labels,\n        optgroupField: 'cat',\n        optgroupLabelField: 'name',\n        optgroupValueField: 'id',\n        optgroupOrder: this.labels.map(function (item) {\n          return item.id;\n        }),\n        plugins: ['optgroup_columns', 'required-fix']\n      });\n    }\n  }]);\n\n  return PagesFilter;\n}();\n\n\nvar Instance = new PagesFilter('input[name=\"page-filter\"]', 'input[name=\"page-search\"]');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RCxZQUFBQSxHQUFHLEVBQUhBLEdBRGM7QUFFZEQsWUFBQUEsR0FBRyxFQUFIQSxHQUZjO0FBR2RILFlBQUFBLElBQUksRUFBRTZELE1BQU0sQ0FBQ3pELEdBQUQsQ0FBTixDQUFZRCxHQUFaO0FBSFEsV0FBbEI7QUFLSCxTQU5EO0FBT0gsT0FSRDtBQVVBLFdBQUtVLE9BQUwsQ0FBYTZDLFNBQWIsQ0FBdUI7QUFDbkJPLFFBQUFBLFFBQVEsRUFBRSxJQURTO0FBRW5CQyxRQUFBQSxVQUFVLEVBQUUsS0FGTztBQUduQkMsUUFBQUEsVUFBVSxFQUFFLE1BSE87QUFJbkJDLFFBQUFBLFdBQVcsRUFBRSxDQUFDLE1BQUQsRUFBUyxLQUFULENBSk07QUFLbkJyRSxRQUFBQSxPQUFPLEVBQUUsS0FBS0EsT0FMSztBQU1uQnNFLFFBQUFBLFNBQVMsRUFBRSxLQUFLL0MsTUFORztBQU9uQmdELFFBQUFBLGFBQWEsRUFBRSxLQVBJO0FBUW5CQyxRQUFBQSxrQkFBa0IsRUFBRSxNQVJEO0FBU25CQyxRQUFBQSxrQkFBa0IsRUFBRSxJQVREO0FBVW5CQyxRQUFBQSxhQUFhLEVBQUUsS0FBS25ELE1BQUwsQ0FBWW9ELEdBQVosQ0FBZ0IsVUFBQ0MsSUFBRDtBQUFBLGlCQUFVQSxJQUFJLENBQUNDLEVBQWY7QUFBQSxTQUFoQixDQVZJO0FBV25CQyxRQUFBQSxPQUFPLEVBQUUsQ0FBQyxrQkFBRCxFQUFxQixjQUFyQjtBQVhVLE9BQXZCO0FBYUg7Ozs7Ozs7QUFHTCxJQUFJaEYsUUFBUSxHQUFHLElBQUllLFdBQUosQ0FBZ0IsMkJBQWhCLEVBQTZDLDJCQUE3QyxDQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC9wYWdlcy9maWx0ZXIuanM/NDc0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgY29uZmlnLCB0cmFuc2xhdGlvbnMgfSBmcm9tICdncmF2LWNvbmZpZyc7XG5pbXBvcnQgcmVxdWVzdCBmcm9tICcuLi91dGlscy9yZXF1ZXN0JztcbmltcG9ydCBkZWJvdW5jZSBmcm9tICdkZWJvdW5jZSc7XG5pbXBvcnQgeyBJbnN0YW5jZSBhcyBwYWdlc1RyZWUgfSBmcm9tICcuL3RyZWUnO1xuaW1wb3J0ICdzZWxlY3RpemUnO1xuaW1wb3J0ICcuLi91dGlscy9zZWxlY3RpemUtcmVxdWlyZWQtZml4LmpzJztcbmltcG9ydCAnLi4vdXRpbHMvc3RvcmFnZSc7XG5cbi8qIEBmb3JtYXR0ZXI6b2ZmICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuY29uc3Qgb3B0aW9ucyA9IFtcbiAgICB7IGZsYWc6IHRyYW5zbGF0aW9ucy5QTFVHSU5fQURNSU4uTU9EVUxFLCAgICAgICAga2V5OiAnTW9kdWxlJywgICAgICBjYXQ6ICdtb2RlJyB9LFxuICAgIHsgZmxhZzogdHJhbnNsYXRpb25zLlBMVUdJTl9BRE1JTi5WSVNJQkxFLCAgICAgICBrZXk6ICdWaXNpYmxlJywgICAgICBjYXQ6ICdtb2RlJyB9LFxuICAgIHsgZmxhZzogdHJhbnNsYXRpb25zLlBMVUdJTl9BRE1JTi5ST1VUQUJMRSwgICAgICBrZXk6ICdSb3V0YWJsZScsICAgICBjYXQ6ICdtb2RlJyB9LFxuICAgIHsgZmxhZzogdHJhbnNsYXRpb25zLlBMVUdJTl9BRE1JTi5QVUJMSVNIRUQsICAgICBrZXk6ICdQdWJsaXNoZWQnLCAgICBjYXQ6ICdtb2RlJyB9LFxuICAgIHsgZmxhZzogdHJhbnNsYXRpb25zLlBMVUdJTl9BRE1JTi5OT05fTU9EVUxFLCAgICBrZXk6ICdOb25Nb2R1bGUnLCAgIGNhdDogJ21vZGUnIH0sXG4gICAgeyBmbGFnOiB0cmFuc2xhdGlvbnMuUExVR0lOX0FETUlOLk5PTl9WSVNJQkxFLCAgIGtleTogJ05vblZpc2libGUnLCAgIGNhdDogJ21vZGUnIH0sXG4gICAgeyBmbGFnOiB0cmFuc2xhdGlvbnMuUExVR0lOX0FETUlOLk5PTl9ST1VUQUJMRSwgIGtleTogJ05vblJvdXRhYmxlJywgIGNhdDogJ21vZGUnIH0sXG4gICAgeyBmbGFnOiB0cmFuc2xhdGlvbnMuUExVR0lOX0FETUlOLk5PTl9QVUJMSVNIRUQsIGtleTogJ05vblB1Ymxpc2hlZCcsIGNhdDogJ21vZGUnIH1cbl07XG4vKiBAZm9ybWF0dGVyOm9uICovXG4vKiBlc2xpbnQtZW5hYmxlICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhZ2VzRmlsdGVyIHtcbiAgICBjb25zdHJ1Y3RvcihmaWx0ZXJzLCBzZWFyY2gpIHtcbiAgICAgICAgdGhpcy5maWx0ZXJzID0gJChmaWx0ZXJzKTtcbiAgICAgICAgdGhpcy5zZWFyY2ggPSAkKHNlYXJjaCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMudHJlZSA9IHBhZ2VzVHJlZTtcbiAgICAgICAgbGV0IHN0b3JhZ2UgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdncmF2OmFkbWluOnBhZ2VzOmZpbHRlcicpIHx8ICd7fScpO1xuXG4gICAgICAgIGlmICghdGhpcy5maWx0ZXJzLmxlbmd0aCB8fCAhdGhpcy5zZWFyY2gubGVuZ3RoKSB7IHJldHVybjsgfVxuXG4gICAgICAgIHRoaXMubGFiZWxzID0gdGhpcy5maWx0ZXJzLmRhdGEoJ2ZpbHRlci1sYWJlbHMnKTtcblxuICAgICAgICB0aGlzLnNlYXJjaC5vbignaW5wdXQnLCBkZWJvdW5jZSgoKSA9PiB0aGlzLmZpbHRlcigpLCAyNTApKTtcbiAgICAgICAgdGhpcy5maWx0ZXJzLm9uKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmZpbHRlcigpKTtcblxuICAgICAgICAvLyByZXN0b3JlIHN0YXRlXG4gICAgICAgIGlmIChzdG9yYWdlLmZsYWdzIHx8IHN0b3JhZ2UucXVlcnkpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0VmFsdWVzKHN0b3JhZ2UpO1xuICAgICAgICAgICAgdGhpcy5maWx0ZXIoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2luaXRTZWxlY3RpemUoKTtcbiAgICB9XG5cbiAgICBmaWx0ZXIodmFsdWUpIHtcbiAgICAgICAgbGV0IGRhdGEgPSB7IGZsYWdzOiAnJywgcXVlcnk6ICcnIH07XG5cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oZGF0YSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBkYXRhLnF1ZXJ5ID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGRhdGEuZmxhZ3MgPSB0aGlzLmZpbHRlcnMudmFsKCk7XG4gICAgICAgICAgICBkYXRhLnF1ZXJ5ID0gdGhpcy5zZWFyY2gudmFsKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIU9iamVjdC5rZXlzKGRhdGEpLmZpbHRlcigoa2V5KSA9PiBkYXRhW2tleV0gIT09ICcnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMucmVzZXRWYWx1ZXMoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGRhdGEuZmxhZ3MgPSBkYXRhLmZsYWdzLnJlcGxhY2UoLyhcXHN7MSx9KT8sKFxcc3sxLH0pPy9nLCAnLCcpO1xuICAgICAgICB0aGlzLnNldFZhbHVlcyh7IGZsYWdzOiBkYXRhLmZsYWdzLCBxdWVyeTogZGF0YS5xdWVyeSB9LCAnc2lsZW50Jyk7XG5cbiAgICAgICAgcmVxdWVzdChgJHtjb25maWcuYmFzZV91cmxfcmVsYXRpdmV9L3BhZ2VzLWZpbHRlci5qc29uL3Rhc2ske2NvbmZpZy5wYXJhbV9zZXB9ZmlsdGVyUGFnZXNgLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgICAgICAgIGJvZHk6IGRhdGFcbiAgICAgICAgfSwgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlZnJlc2hET00ocmVzcG9uc2UpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZWZyZXNoRE9NKHJlc3BvbnNlKSB7XG4gICAgICAgIGxldCBpdGVtcyA9ICQoJ1tkYXRhLW5hdi1pZF0nKTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlKSB7XG4gICAgICAgICAgICBpdGVtcy5yZW1vdmVDbGFzcygnc2VhcmNoLW1hdGNoJykuc2hvdygpO1xuICAgICAgICAgICAgdGhpcy50cmVlLnJlc3RvcmUoKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaXRlbXMucmVtb3ZlQ2xhc3MoJ3NlYXJjaC1tYXRjaCcpLmhpZGUoKTtcblxuICAgICAgICByZXNwb25zZS5yZXN1bHRzLmZvckVhY2goKHBhZ2UpID0+IHtcbiAgICAgICAgICAgIGxldCBtYXRjaCA9IGl0ZW1zLmZpbHRlcihgW2RhdGEtbmF2LWlkPVwiJHtwYWdlfVwiXWApLmFkZENsYXNzKCdzZWFyY2gtbWF0Y2gnKS5zaG93KCk7XG4gICAgICAgICAgICBtYXRjaC5wYXJlbnRzKCdbZGF0YS1uYXYtaWRdJykuYWRkQ2xhc3MoJ3NlYXJjaC1tYXRjaCcpLnNob3coKTtcblxuICAgICAgICAgICAgdGhpcy50cmVlLmV4cGFuZChwYWdlLCAnbm8tc3RvcmUnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgc2V0VmFsdWVzKHsgZmxhZ3MgPSAnJywgcXVlcnkgPSAnJ30sIHNpbGVudCkge1xuICAgICAgICBsZXQgZmxhZ3NBcnJheSA9IGZsYWdzLnJlcGxhY2UoLyhcXHN7MSx9KT8sKFxcc3sxLH0pPy9nLCAnLCcpLnNwbGl0KCcsJyk7XG4gICAgICAgIGlmICh0aGlzLmZpbHRlcnMudmFsKCkgIT09IGZsYWdzKSB7XG4gICAgICAgICAgICBsZXQgc2VsZWN0aXplID0gdGhpcy5maWx0ZXJzLmRhdGEoJ3NlbGVjdGl6ZScpO1xuICAgICAgICAgICAgdGhpcy5maWx0ZXJzW3NlbGVjdGl6ZSA/ICdzZXRWYWx1ZScgOiAndmFsJ10oZmxhZ3NBcnJheSwgc2lsZW50KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zZWFyY2gudmFsKCkgIT09IHF1ZXJ5KSB7IHRoaXMuc2VhcmNoLnZhbChxdWVyeSk7IH1cblxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZ3JhdjphZG1pbjpwYWdlczpmaWx0ZXInLCBKU09OLnN0cmluZ2lmeSh7IGZsYWdzLCBxdWVyeSB9KSk7XG4gICAgfVxuXG4gICAgcmVzZXRWYWx1ZXMoKSB7XG4gICAgICAgIHRoaXMuc2V0VmFsdWVzKCcnLCAnc2lsZW50Jyk7XG4gICAgICAgIHRoaXMucmVmcmVzaERPTSgpO1xuICAgIH1cblxuICAgIF9pbml0U2VsZWN0aXplKCkge1xuICAgICAgICBsZXQgZXh0cmFzID0ge1xuICAgICAgICAgICAgdHlwZTogdGhpcy5maWx0ZXJzLmRhdGEoJ2ZpbHRlci10eXBlcycpIHx8IHt9LFxuICAgICAgICAgICAgYWNjZXNzOiB0aGlzLmZpbHRlcnMuZGF0YSgnZmlsdGVyLWFjY2Vzcy1sZXZlbHMnKSB8fCB7fVxuICAgICAgICB9O1xuXG4gICAgICAgIE9iamVjdC5rZXlzKGV4dHJhcykuZm9yRWFjaCgoY2F0KSA9PiB7XG4gICAgICAgICAgICBPYmplY3Qua2V5cyhleHRyYXNbY2F0XSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBjYXQsXG4gICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgZmxhZzogZXh0cmFzW2NhdF1ba2V5XVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuZmlsdGVycy5zZWxlY3RpemUoe1xuICAgICAgICAgICAgbWF4SXRlbXM6IG51bGwsXG4gICAgICAgICAgICB2YWx1ZUZpZWxkOiAna2V5JyxcbiAgICAgICAgICAgIGxhYmVsRmllbGQ6ICdmbGFnJyxcbiAgICAgICAgICAgIHNlYXJjaEZpZWxkOiBbJ2ZsYWcnLCAna2V5J10sXG4gICAgICAgICAgICBvcHRpb25zOiB0aGlzLm9wdGlvbnMsXG4gICAgICAgICAgICBvcHRncm91cHM6IHRoaXMubGFiZWxzLFxuICAgICAgICAgICAgb3B0Z3JvdXBGaWVsZDogJ2NhdCcsXG4gICAgICAgICAgICBvcHRncm91cExhYmVsRmllbGQ6ICduYW1lJyxcbiAgICAgICAgICAgIG9wdGdyb3VwVmFsdWVGaWVsZDogJ2lkJyxcbiAgICAgICAgICAgIG9wdGdyb3VwT3JkZXI6IHRoaXMubGFiZWxzLm1hcCgoaXRlbSkgPT4gaXRlbS5pZCksXG4gICAgICAgICAgICBwbHVnaW5zOiBbJ29wdGdyb3VwX2NvbHVtbnMnLCAncmVxdWlyZWQtZml4J11cbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5sZXQgSW5zdGFuY2UgPSBuZXcgUGFnZXNGaWx0ZXIoJ2lucHV0W25hbWU9XCJwYWdlLWZpbHRlclwiXScsICdpbnB1dFtuYW1lPVwicGFnZS1zZWFyY2hcIl0nKTtcbmV4cG9ydCB7IEluc3RhbmNlIH07XG4iXSwibmFtZXMiOlsiJCIsImNvbmZpZyIsInRyYW5zbGF0aW9ucyIsInJlcXVlc3QiLCJkZWJvdW5jZSIsIkluc3RhbmNlIiwicGFnZXNUcmVlIiwib3B0aW9ucyIsImZsYWciLCJQTFVHSU5fQURNSU4iLCJNT0RVTEUiLCJrZXkiLCJjYXQiLCJWSVNJQkxFIiwiUk9VVEFCTEUiLCJQVUJMSVNIRUQiLCJOT05fTU9EVUxFIiwiTk9OX1ZJU0lCTEUiLCJOT05fUk9VVEFCTEUiLCJOT05fUFVCTElTSEVEIiwiUGFnZXNGaWx0ZXIiLCJmaWx0ZXJzIiwic2VhcmNoIiwidHJlZSIsInN0b3JhZ2UiLCJKU09OIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwibGVuZ3RoIiwibGFiZWxzIiwiZGF0YSIsIm9uIiwiZmlsdGVyIiwiZmxhZ3MiLCJxdWVyeSIsInNldFZhbHVlcyIsIl9pbml0U2VsZWN0aXplIiwidmFsdWUiLCJPYmplY3QiLCJhc3NpZ24iLCJ2YWwiLCJrZXlzIiwicmVzZXRWYWx1ZXMiLCJyZXBsYWNlIiwiYmFzZV91cmxfcmVsYXRpdmUiLCJwYXJhbV9zZXAiLCJtZXRob2QiLCJib2R5IiwicmVzcG9uc2UiLCJyZWZyZXNoRE9NIiwiaXRlbXMiLCJyZW1vdmVDbGFzcyIsInNob3ciLCJyZXN0b3JlIiwiaGlkZSIsInJlc3VsdHMiLCJmb3JFYWNoIiwicGFnZSIsIm1hdGNoIiwiYWRkQ2xhc3MiLCJwYXJlbnRzIiwiZXhwYW5kIiwic2lsZW50IiwiZmxhZ3NBcnJheSIsInNwbGl0Iiwic2VsZWN0aXplIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsImV4dHJhcyIsInR5cGUiLCJhY2Nlc3MiLCJwdXNoIiwibWF4SXRlbXMiLCJ2YWx1ZUZpZWxkIiwibGFiZWxGaWVsZCIsInNlYXJjaEZpZWxkIiwib3B0Z3JvdXBzIiwib3B0Z3JvdXBGaWVsZCIsIm9wdGdyb3VwTGFiZWxGaWVsZCIsIm9wdGdyb3VwVmFsdWVGaWVsZCIsIm9wdGdyb3VwT3JkZXIiLCJtYXAiLCJpdGVtIiwiaWQiLCJwbHVnaW5zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/pages/filter.js\n");

/***/ }),

/***/ "./app/pages/index.js":
/*!****************************!*\
  !*** ./app/pages/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sortablejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sortablejs */ \"./node_modules/sortablejs/modular/sortable.esm.js\");\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./filter */ \"./app/pages/filter.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page */ \"./app/pages/page/index.js\");\n\n\n\n\n\nvar pad = function pad(n, s) {\n  return \"000\".concat(n).substr(-s);\n}; // Pages Ordering\n\n\nvar Ordering = null;\nvar orderingElement = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#ordering');\n\nif (orderingElement.length) {\n  Ordering = new sortablejs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](orderingElement.get(0), {\n    filter: '.ignore',\n    onUpdate: function onUpdate() {\n      /* Old single page index behavior\n       let item = $(event.item);\n      let index = orderingElement.children().index(item) + 1;\n      $('[data-order]').val(index);\n      */\n      var indexes = [];\n      var children = orderingElement.children();\n      var padZero = (children.length + '').split('').length;\n      children.each(function (index, item) {\n        item = jquery__WEBPACK_IMPORTED_MODULE_0___default()(item);\n        indexes.push(item.data('id'));\n        item.find('.page-order').text(\"\".concat(pad(index + 1, padZero), \".\"));\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-order]').val(indexes.join(','));\n    }\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('input', '[name=\"data[folder]\"]', function (event) {\n    var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n    var activeOrder = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-id][data-active-id]');\n    activeOrder.data('id', target.val());\n    Ordering.options.onUpdate();\n  });\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Ordering: Ordering,\n  Page: _page__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  PageFilters: {\n    PageFilters: _filter__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    Instance: _filter__WEBPACK_IMPORTED_MODULE_2__.Instance\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvcGFnZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBTU0sR0FBRyxHQUFHLFNBQU5BLEdBQU0sQ0FBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsU0FBVSxhQUFPRCxDQUFQLEVBQVlFLE1BQVosQ0FBbUIsQ0FBQ0QsQ0FBcEIsQ0FBVjtBQUFBLENBQVosRUFFQTs7O0FBQ0EsSUFBSUUsUUFBUSxHQUFHLElBQWY7QUFDQSxJQUFJQyxlQUFlLEdBQUdYLDZDQUFDLENBQUMsV0FBRCxDQUF2Qjs7QUFDQSxJQUFJVyxlQUFlLENBQUNDLE1BQXBCLEVBQTRCO0FBQ3hCRixFQUFBQSxRQUFRLEdBQUcsSUFBSVQsa0RBQUosQ0FBYVUsZUFBZSxDQUFDRSxHQUFoQixDQUFvQixDQUFwQixDQUFiLEVBQXFDO0FBQzVDQyxJQUFBQSxNQUFNLEVBQUUsU0FEb0M7QUFFNUNDLElBQUFBLFFBQVEsRUFBRSxvQkFBVztBQUNqQjtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBR1ksVUFBSUMsT0FBTyxHQUFHLEVBQWQ7QUFDQSxVQUFNQyxRQUFRLEdBQUdOLGVBQWUsQ0FBQ00sUUFBaEIsRUFBakI7QUFDQSxVQUFNQyxPQUFPLEdBQUcsQ0FBQ0QsUUFBUSxDQUFDTCxNQUFULEdBQWtCLEVBQW5CLEVBQXVCTyxLQUF2QixDQUE2QixFQUE3QixFQUFpQ1AsTUFBakQ7QUFDQUssTUFBQUEsUUFBUSxDQUFDRyxJQUFULENBQWMsVUFBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWlCO0FBQzNCQSxRQUFBQSxJQUFJLEdBQUd0Qiw2Q0FBQyxDQUFDc0IsSUFBRCxDQUFSO0FBQ0FOLFFBQUFBLE9BQU8sQ0FBQ08sSUFBUixDQUFhRCxJQUFJLENBQUNFLElBQUwsQ0FBVSxJQUFWLENBQWI7QUFDQUYsUUFBQUEsSUFBSSxDQUFDRyxJQUFMLENBQVUsYUFBVixFQUF5QkMsSUFBekIsV0FBaUNwQixHQUFHLENBQUNlLEtBQUssR0FBRyxDQUFULEVBQVlILE9BQVosQ0FBcEM7QUFDSCxPQUpEO0FBTUFsQixNQUFBQSw2Q0FBQyxDQUFDLGNBQUQsQ0FBRCxDQUFrQjJCLEdBQWxCLENBQXNCWCxPQUFPLENBQUNZLElBQVIsQ0FBYSxHQUFiLENBQXRCO0FBQ0g7QUFwQjJDLEdBQXJDLENBQVg7QUF1QkE1QixFQUFBQSw2Q0FBQyxDQUFDNkIsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLHVCQUF4QixFQUFpRCxVQUFDQyxLQUFELEVBQVc7QUFDeEQsUUFBTUMsTUFBTSxHQUFHaEMsNkNBQUMsQ0FBQytCLEtBQUssQ0FBQ0UsYUFBUCxDQUFoQjtBQUNBLFFBQU1DLFdBQVcsR0FBR2xDLDZDQUFDLENBQUMsMkJBQUQsQ0FBckI7QUFFQWtDLElBQUFBLFdBQVcsQ0FBQ1YsSUFBWixDQUFpQixJQUFqQixFQUF1QlEsTUFBTSxDQUFDTCxHQUFQLEVBQXZCO0FBRUFqQixJQUFBQSxRQUFRLENBQUN5QixPQUFULENBQWlCcEIsUUFBakI7QUFDSCxHQVBEO0FBU0g7O0FBRUQsaUVBQWU7QUFDWEwsRUFBQUEsUUFBUSxFQUFSQSxRQURXO0FBRVhMLEVBQUFBLElBQUksRUFBSkEsNkNBRlc7QUFHWEgsRUFBQUEsV0FBVyxFQUFFO0FBQ1RBLElBQUFBLFdBQVcsRUFBWEEsK0NBRFM7QUFFVEMsSUFBQUEsUUFBUSxFQUFFQyw2Q0FBbUJBO0FBRnBCO0FBSEYsQ0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvcGFnZXMvaW5kZXguanM/N2EzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IFNvcnRhYmxlIGZyb20gJ3NvcnRhYmxlanMnO1xuaW1wb3J0IFBhZ2VGaWx0ZXJzLCB7IEluc3RhbmNlIGFzIFBhZ2VGaWx0ZXJzSW5zdGFuY2UgfSBmcm9tICcuL2ZpbHRlcic7XG5pbXBvcnQgUGFnZSBmcm9tICcuL3BhZ2UnO1xuXG5jb25zdCBwYWQgPSAobiwgcykgPT4gKGAwMDAke259YCkuc3Vic3RyKC1zKTtcblxuLy8gUGFnZXMgT3JkZXJpbmdcbmxldCBPcmRlcmluZyA9IG51bGw7XG5sZXQgb3JkZXJpbmdFbGVtZW50ID0gJCgnI29yZGVyaW5nJyk7XG5pZiAob3JkZXJpbmdFbGVtZW50Lmxlbmd0aCkge1xuICAgIE9yZGVyaW5nID0gbmV3IFNvcnRhYmxlKG9yZGVyaW5nRWxlbWVudC5nZXQoMCksIHtcbiAgICAgICAgZmlsdGVyOiAnLmlnbm9yZScsXG4gICAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8qIE9sZCBzaW5nbGUgcGFnZSBpbmRleCBiZWhhdmlvclxuXG4gICAgICAgICAgICBsZXQgaXRlbSA9ICQoZXZlbnQuaXRlbSk7XG4gICAgICAgICAgICBsZXQgaW5kZXggPSBvcmRlcmluZ0VsZW1lbnQuY2hpbGRyZW4oKS5pbmRleChpdGVtKSArIDE7XG4gICAgICAgICAgICAkKCdbZGF0YS1vcmRlcl0nKS52YWwoaW5kZXgpO1xuICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgbGV0IGluZGV4ZXMgPSBbXTtcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkcmVuID0gb3JkZXJpbmdFbGVtZW50LmNoaWxkcmVuKCk7XG4gICAgICAgICAgICBjb25zdCBwYWRaZXJvID0gKGNoaWxkcmVuLmxlbmd0aCArICcnKS5zcGxpdCgnJykubGVuZ3RoO1xuICAgICAgICAgICAgY2hpbGRyZW4uZWFjaCgoaW5kZXgsIGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtID0gJChpdGVtKTtcbiAgICAgICAgICAgICAgICBpbmRleGVzLnB1c2goaXRlbS5kYXRhKCdpZCcpKTtcbiAgICAgICAgICAgICAgICBpdGVtLmZpbmQoJy5wYWdlLW9yZGVyJykudGV4dChgJHtwYWQoaW5kZXggKyAxLCBwYWRaZXJvKX0uYCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJCgnW2RhdGEtb3JkZXJdJykudmFsKGluZGV4ZXMuam9pbignLCcpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgJChkb2N1bWVudCkub24oJ2lucHV0JywgJ1tuYW1lPVwiZGF0YVtmb2xkZXJdXCJdJywgKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XG4gICAgICAgIGNvbnN0IGFjdGl2ZU9yZGVyID0gJCgnW2RhdGEtaWRdW2RhdGEtYWN0aXZlLWlkXScpO1xuXG4gICAgICAgIGFjdGl2ZU9yZGVyLmRhdGEoJ2lkJywgdGFyZ2V0LnZhbCgpKTtcblxuICAgICAgICBPcmRlcmluZy5vcHRpb25zLm9uVXBkYXRlKCk7XG4gICAgfSk7XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIE9yZGVyaW5nLFxuICAgIFBhZ2UsXG4gICAgUGFnZUZpbHRlcnM6IHtcbiAgICAgICAgUGFnZUZpbHRlcnMsXG4gICAgICAgIEluc3RhbmNlOiBQYWdlRmlsdGVyc0luc3RhbmNlXG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyIkIiwiU29ydGFibGUiLCJQYWdlRmlsdGVycyIsIkluc3RhbmNlIiwiUGFnZUZpbHRlcnNJbnN0YW5jZSIsIlBhZ2UiLCJwYWQiLCJuIiwicyIsInN1YnN0ciIsIk9yZGVyaW5nIiwib3JkZXJpbmdFbGVtZW50IiwibGVuZ3RoIiwiZ2V0IiwiZmlsdGVyIiwib25VcGRhdGUiLCJpbmRleGVzIiwiY2hpbGRyZW4iLCJwYWRaZXJvIiwic3BsaXQiLCJlYWNoIiwiaW5kZXgiLCJpdGVtIiwicHVzaCIsImRhdGEiLCJmaW5kIiwidGV4dCIsInZhbCIsImpvaW4iLCJkb2N1bWVudCIsIm9uIiwiZXZlbnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiYWN0aXZlT3JkZXIiLCJvcHRpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/pages/index.js\n");

/***/ }),

/***/ "./app/pages/page/add.js":
/*!*******************************!*\
  !*** ./app/pages/page/add.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_jquery_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/jquery-utils */ \"./app/utils/jquery-utils.js\");\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/request */ \"./app/utils/request.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nvar custom = false;\nvar folder = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=\"modal\"] input[name=\"data[folder]\"], [data-remodal-id=\"module\"] input[name=\"data[folder]\"], [data-remodal-id=\"modal-page-copy\"] input[name=\"data[folder]\"]');\nvar title = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=\"modal\"] input[name=\"data[title]\"], [data-remodal-id=\"module\"] input[name=\"data[title]\"], [data-remodal-id=\"modal-page-copy\"] input[name=\"data[title]\"]');\n\nvar getFields = function getFields(type, target) {\n  target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target);\n  var query = \"[data-remodal-id=\\\"\".concat(target.closest('[data-remodal-id]').data('remodal-id'), \"\\\"]\");\n  return {\n    title: type === 'title' ? jquery__WEBPACK_IMPORTED_MODULE_0___default()(target) : jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"\".concat(query, \" input[name=\\\"data[title]\\\"]\")),\n    folder: type === 'folder' ? jquery__WEBPACK_IMPORTED_MODULE_0___default()(target) : jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"\".concat(query, \" input[name=\\\"data[folder]\\\"]\"))\n  };\n};\n\ntitle.on('input focus blur', function (event) {\n  if (custom) {\n    return true;\n  }\n\n  var elements = getFields('title', event.currentTarget);\n  var slug = jquery__WEBPACK_IMPORTED_MODULE_0___default().slugify(elements.title.val(), {\n    custom: {\n      \"'\": '',\n      '‘': '',\n      '’': ''\n    }\n  });\n  elements.folder.val(slug);\n});\nfolder.on('input', function (event) {\n  var elements = getFields('folder', event.currentTarget);\n  var input = elements.folder.get(0);\n  var value = elements.folder.val();\n  var selection = {\n    start: input.selectionStart,\n    end: input.selectionEnd\n  };\n  value = value.toLowerCase().replace(/\\s/g, '-').replace(/[^a-z0-9_\\-]/g, '');\n  elements.folder.val(value);\n  custom = !!value; // restore cursor position\n\n  input.setSelectionRange(selection.start, selection.end);\n});\nfolder.on('focus blur', function (event) {\n  return getFields('title', event.currentTarget).title.trigger('input');\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('change', '[name=\"data[route]\"]', function (event) {\n  var rawroute = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).val();\n  var pageTemplate = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[name=\"data[name]\"]');\n  var URI = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.config.base_url_relative, \"/ajax.json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.config.param_sep, \"getChildTypes\");\n\n  if (pageTemplate.length === 0) {\n    return;\n  }\n\n  (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(URI, {\n    method: 'post',\n    body: {\n      rawroute: rawroute\n    }\n  }, function (response) {\n    var type = response.child_type;\n\n    if (type !== '' && type !== 'default') {\n      pageTemplate.val(type);\n      pageTemplate.data('selectize').setValue(type);\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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OUMsQ0FBc0QsT0FBdEQsQ0FBWDtBQUFBLENBQXhCO0FBRUE5Qiw2Q0FBQyxDQUFDK0IsUUFBRCxDQUFELENBQVluQixFQUFaLENBQWUsUUFBZixFQUF5QixzQkFBekIsRUFBaUQsVUFBQ0MsS0FBRCxFQUFXO0FBQ3hELE1BQU1tQixRQUFRLEdBQUdoQyw2Q0FBQyxDQUFDYSxLQUFLLENBQUNFLGFBQVAsQ0FBRCxDQUF1QkcsR0FBdkIsRUFBakI7QUFDQSxNQUFNZSxZQUFZLEdBQUdqQyw2Q0FBQyxDQUFDLHFCQUFELENBQXRCO0FBQ0EsTUFBTWtDLEdBQUcsYUFBTWhDLGlFQUFOLDRCQUFnREEseURBQWhELGtCQUFUOztBQUVBLE1BQUkrQixZQUFZLENBQUNJLE1BQWIsS0FBd0IsQ0FBNUIsRUFBK0I7QUFDM0I7QUFDSDs7QUFFRHBDLEVBQUFBLDBEQUFPLENBQUNpQyxHQUFELEVBQU07QUFDVEksSUFBQUEsTUFBTSxFQUFFLE1BREM7QUFFVEMsSUFBQUEsSUFBSSxFQUFFO0FBQUVQLE1BQUFBLFFBQVEsRUFBUkE7QUFBRjtBQUZHLEdBQU4sRUFHSixVQUFDUSxRQUFELEVBQWM7QUFDYixRQUFNakMsSUFBSSxHQUFHaUMsUUFBUSxDQUFDQyxVQUF0Qjs7QUFDQSxRQUFJbEMsSUFBSSxLQUFLLEVBQVQsSUFBZUEsSUFBSSxLQUFLLFNBQTVCLEVBQXVDO0FBQ25DMEIsTUFBQUEsWUFBWSxDQUFDZixHQUFiLENBQWlCWCxJQUFqQjtBQUNBMEIsTUFBQUEsWUFBWSxDQUFDdEIsSUFBYixDQUFrQixXQUFsQixFQUErQitCLFFBQS9CLENBQXdDbkMsSUFBeEM7QUFDSDtBQUNKLEdBVE0sQ0FBUDtBQVVILENBbkJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC9wYWdlcy9wYWdlL2FkZC5qcz9iMjI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgJy4uLy4uL3V0aWxzL2pxdWVyeS11dGlscyc7XG5pbXBvcnQgcmVxdWVzdCBmcm9tICcuLi8uLi91dGlscy9yZXF1ZXN0JztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJ2dyYXYtY29uZmlnJztcblxubGV0IGN1c3RvbSA9IGZhbHNlO1xubGV0IGZvbGRlciA9ICQoJ1tkYXRhLXJlbW9kYWwtaWQ9XCJtb2RhbFwiXSBpbnB1dFtuYW1lPVwiZGF0YVtmb2xkZXJdXCJdLCBbZGF0YS1yZW1vZGFsLWlkPVwibW9kdWxlXCJdIGlucHV0W25hbWU9XCJkYXRhW2ZvbGRlcl1cIl0sIFtkYXRhLXJlbW9kYWwtaWQ9XCJtb2RhbC1wYWdlLWNvcHlcIl0gaW5wdXRbbmFtZT1cImRhdGFbZm9sZGVyXVwiXScpO1xubGV0IHRpdGxlID0gJCgnW2RhdGEtcmVtb2RhbC1pZD1cIm1vZGFsXCJdIGlucHV0W25hbWU9XCJkYXRhW3RpdGxlXVwiXSwgW2RhdGEtcmVtb2RhbC1pZD1cIm1vZHVsZVwiXSBpbnB1dFtuYW1lPVwiZGF0YVt0aXRsZV1cIl0sIFtkYXRhLXJlbW9kYWwtaWQ9XCJtb2RhbC1wYWdlLWNvcHlcIl0gaW5wdXRbbmFtZT1cImRhdGFbdGl0bGVdXCJdJyk7XG5sZXQgZ2V0RmllbGRzID0gKHR5cGUsIHRhcmdldCkgPT4ge1xuICAgIHRhcmdldCA9ICQodGFyZ2V0KTtcbiAgICBsZXQgcXVlcnkgPSBgW2RhdGEtcmVtb2RhbC1pZD1cIiR7dGFyZ2V0LmNsb3Nlc3QoJ1tkYXRhLXJlbW9kYWwtaWRdJykuZGF0YSgncmVtb2RhbC1pZCcpfVwiXWA7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZTogdHlwZSA9PT0gJ3RpdGxlJyA/ICQodGFyZ2V0KSA6ICQoYCR7cXVlcnl9IGlucHV0W25hbWU9XCJkYXRhW3RpdGxlXVwiXWApLFxuICAgICAgICBmb2xkZXI6IHR5cGUgPT09ICdmb2xkZXInID8gJCh0YXJnZXQpIDogJChgJHtxdWVyeX0gaW5wdXRbbmFtZT1cImRhdGFbZm9sZGVyXVwiXWApXG4gICAgfTtcbn07XG5cbnRpdGxlLm9uKCdpbnB1dCBmb2N1cyBibHVyJywgKGV2ZW50KSA9PiB7XG4gICAgaWYgKGN1c3RvbSkgeyByZXR1cm4gdHJ1ZTsgfVxuICAgIGxldCBlbGVtZW50cyA9IGdldEZpZWxkcygndGl0bGUnLCBldmVudC5jdXJyZW50VGFyZ2V0KTtcblxuICAgIGxldCBzbHVnID0gJC5zbHVnaWZ5KGVsZW1lbnRzLnRpdGxlLnZhbCgpLCB7Y3VzdG9tOiB7IFwiJ1wiOiAnJywgJ+KAmCc6ICcnLCAn4oCZJzogJycgfX0pO1xuICAgIGVsZW1lbnRzLmZvbGRlci52YWwoc2x1Zyk7XG59KTtcblxuZm9sZGVyLm9uKCdpbnB1dCcsIChldmVudCkgPT4ge1xuICAgIGxldCBlbGVtZW50cyA9IGdldEZpZWxkcygnZm9sZGVyJywgZXZlbnQuY3VycmVudFRhcmdldCk7XG5cbiAgICBsZXQgaW5wdXQgPSBlbGVtZW50cy5mb2xkZXIuZ2V0KDApO1xuICAgIGxldCB2YWx1ZSA9IGVsZW1lbnRzLmZvbGRlci52YWwoKTtcbiAgICBsZXQgc2VsZWN0aW9uID0ge1xuICAgICAgICBzdGFydDogaW5wdXQuc2VsZWN0aW9uU3RhcnQsXG4gICAgICAgIGVuZDogaW5wdXQuc2VsZWN0aW9uRW5kXG4gICAgfTtcblxuICAgIHZhbHVlID0gdmFsdWUudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXHMvZywgJy0nKS5yZXBsYWNlKC9bXmEtejAtOV9cXC1dL2csICcnKTtcbiAgICBlbGVtZW50cy5mb2xkZXIudmFsKHZhbHVlKTtcbiAgICBjdXN0b20gPSAhIXZhbHVlO1xuXG4gICAgLy8gcmVzdG9yZSBjdXJzb3IgcG9zaXRpb25cbiAgICBpbnB1dC5zZXRTZWxlY3Rpb25SYW5nZShzZWxlY3Rpb24uc3RhcnQsIHNlbGVjdGlvbi5lbmQpO1xuXG59KTtcblxuZm9sZGVyLm9uKCdmb2N1cyBibHVyJywgKGV2ZW50KSA9PiBnZXRGaWVsZHMoJ3RpdGxlJywgZXZlbnQuY3VycmVudFRhcmdldCkudGl0bGUudHJpZ2dlcignaW5wdXQnKSk7XG5cbiQoZG9jdW1lbnQpLm9uKCdjaGFuZ2UnLCAnW25hbWU9XCJkYXRhW3JvdXRlXVwiXScsIChldmVudCkgPT4ge1xuICAgIGNvbnN0IHJhd3JvdXRlID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS52YWwoKTtcbiAgICBjb25zdCBwYWdlVGVtcGxhdGUgPSAkKCdbbmFtZT1cImRhdGFbbmFtZV1cIl0nKTtcbiAgICBjb25zdCBVUkkgPSBgJHtjb25maWcuYmFzZV91cmxfcmVsYXRpdmV9L2FqYXguanNvbi90YXNrJHtjb25maWcucGFyYW1fc2VwfWdldENoaWxkVHlwZXNgO1xuXG4gICAgaWYgKHBhZ2VUZW1wbGF0ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHJlcXVlc3QoVVJJLCB7XG4gICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICBib2R5OiB7IHJhd3JvdXRlIH1cbiAgICB9LCAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHJlc3BvbnNlLmNoaWxkX3R5cGU7XG4gICAgICAgIGlmICh0eXBlICE9PSAnJyAmJiB0eXBlICE9PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIHBhZ2VUZW1wbGF0ZS52YWwodHlwZSk7XG4gICAgICAgICAgICBwYWdlVGVtcGxhdGUuZGF0YSgnc2VsZWN0aXplJykuc2V0VmFsdWUodHlwZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJyZXF1ZXN0IiwiY29uZmlnIiwiY3VzdG9tIiwiZm9sZGVyIiwidGl0bGUiLCJnZXRGaWVsZHMiLCJ0eXBlIiwidGFyZ2V0IiwicXVlcnkiLCJjbG9zZXN0IiwiZGF0YSIsIm9uIiwiZXZlbnQiLCJlbGVtZW50cyIsImN1cnJlbnRUYXJnZXQiLCJzbHVnIiwic2x1Z2lmeSIsInZhbCIsImlucHV0IiwiZ2V0IiwidmFsdWUiLCJzZWxlY3Rpb24iLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJ0cmlnZ2VyIiwiZG9jdW1lbnQiLCJyYXdyb3V0ZSIsInBhZ2VUZW1wbGF0ZSIsIlVSSSIsImJhc2VfdXJsX3JlbGF0aXZlIiwicGFyYW1fc2VwIiwibGVuZ3RoIiwibWV0aG9kIiwiYm9keSIsInJlc3BvbnNlIiwiY2hpbGRfdHlwZSIsInNldFZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/pages/page/add.js\n");

/***/ }),

/***/ "./app/pages/page/delete.js":
/*!**********************************!*\
  !*** ./app/pages/page/delete.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-remodal-target=\"delete\"]', function () {\n  var confirm = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=\"delete\"] [data-delete-action]');\n  var link = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('delete-url');\n  confirm.data('delete-action', link);\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-delete-action]', function () {\n  var remodal = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=\"delete\"]').data('remodal')];\n  __webpack_require__.g.location.href = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data('delete-action');\n  remodal.close();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvcGFnZXMvcGFnZS9kZWxldGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFFQUEsNkNBQUMsQ0FBQ0MsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLGdDQUF4QixFQUEwRCxZQUFXO0FBQ2pFLE1BQUlDLE9BQU8sR0FBR0gsNkNBQUMsQ0FBQyxpREFBRCxDQUFmO0FBQ0EsTUFBSUksSUFBSSxHQUFHSiw2Q0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRSyxJQUFSLENBQWEsWUFBYixDQUFYO0FBRUFGLEVBQUFBLE9BQU8sQ0FBQ0UsSUFBUixDQUFhLGVBQWIsRUFBOEJELElBQTlCO0FBQ0gsQ0FMRDtBQU9BSiw2Q0FBQyxDQUFDQyxRQUFELENBQUQsQ0FBWUMsRUFBWixDQUFlLE9BQWYsRUFBd0Isc0JBQXhCLEVBQWdELFlBQVc7QUFDdkQsTUFBSUksT0FBTyxHQUFHTiw4REFBQSxDQUFpQkEsNkNBQUMsQ0FBQyw0QkFBRCxDQUFELENBQWdDSyxJQUFoQyxDQUFxQyxTQUFyQyxDQUFqQixDQUFkO0FBRUFHLEVBQUFBLHFCQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLElBQWhCLEdBQXVCViw2Q0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRSyxJQUFSLENBQWEsZUFBYixDQUF2QjtBQUNBQyxFQUFBQSxPQUFPLENBQUNLLEtBQVI7QUFDSCxDQUxEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC9wYWdlcy9wYWdlL2RlbGV0ZS5qcz8xMDE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbiQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdbZGF0YS1yZW1vZGFsLXRhcmdldD1cImRlbGV0ZVwiXScsIGZ1bmN0aW9uKCkge1xuICAgIGxldCBjb25maXJtID0gJCgnW2RhdGEtcmVtb2RhbC1pZD1cImRlbGV0ZVwiXSBbZGF0YS1kZWxldGUtYWN0aW9uXScpO1xuICAgIGxldCBsaW5rID0gJCh0aGlzKS5kYXRhKCdkZWxldGUtdXJsJyk7XG5cbiAgICBjb25maXJtLmRhdGEoJ2RlbGV0ZS1hY3Rpb24nLCBsaW5rKTtcbn0pO1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCAnW2RhdGEtZGVsZXRlLWFjdGlvbl0nLCBmdW5jdGlvbigpIHtcbiAgICBsZXQgcmVtb2RhbCA9ICQucmVtb2RhbC5sb29rdXBbJCgnW2RhdGEtcmVtb2RhbC1pZD1cImRlbGV0ZVwiXScpLmRhdGEoJ3JlbW9kYWwnKV07XG5cbiAgICBnbG9iYWwubG9jYXRpb24uaHJlZiA9ICQodGhpcykuZGF0YSgnZGVsZXRlLWFjdGlvbicpO1xuICAgIHJlbW9kYWwuY2xvc2UoKTtcbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsIm9uIiwiY29uZmlybSIsImxpbmsiLCJkYXRhIiwicmVtb2RhbCIsImxvb2t1cCIsImdsb2JhbCIsImxvY2F0aW9uIiwiaHJlZiIsImNsb3NlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/pages/page/delete.js\n");

/***/ }),

/***/ "./app/pages/page/disable-buttons.js":
/*!*******************************************!*\
  !*** ./app/pages/page/disable-buttons.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('.disable-after-click').on('click', function () {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).addClass('pointer-events-disabled');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvcGFnZXMvcGFnZS9kaXNhYmxlLWJ1dHRvbnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFFQUEsNkNBQUMsQ0FBQyxzQkFBRCxDQUFELENBQTBCQyxFQUExQixDQUE2QixPQUE3QixFQUFzQyxZQUFXO0FBQzdDRCxFQUFBQSw2Q0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRRSxRQUFSLENBQWlCLHlCQUFqQjtBQUNILENBRkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3BhZ2VzL3BhZ2UvZGlzYWJsZS1idXR0b25zLmpzPzZiODEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcblxuJCgnLmRpc2FibGUtYWZ0ZXItY2xpY2snKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAkKHRoaXMpLmFkZENsYXNzKCdwb2ludGVyLWV2ZW50cy1kaXNhYmxlZCcpO1xufSk7XG4iXSwibmFtZXMiOlsiJCIsIm9uIiwiYWRkQ2xhc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/pages/page/disable-buttons.js\n");

/***/ }),

/***/ "./app/pages/page/index.js":
/*!*********************************!*\
  !*** ./app/pages/page/index.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add */ \"./app/pages/page/add.js\");\n/* harmony import */ var _move__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./move */ \"./app/pages/page/move.js\");\n/* harmony import */ var _delete__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./delete */ \"./app/pages/page/delete.js\");\n/* harmony import */ var _unset__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./unset */ \"./app/pages/page/unset.js\");\n/* harmony import */ var _disable_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./disable-buttons */ \"./app/pages/page/disable-buttons.js\");\n/* harmony import */ var _media__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./media */ \"./app/pages/page/media.js\");\n/* harmony import */ var _multilang__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./multilang */ \"./app/pages/page/multilang.js\");\n\n\n\n\n\n\n\n\nvar switcher = jquery__WEBPACK_IMPORTED_MODULE_0___default()('input[type=\"radio\"][name=\"mode-switch\"]');\n\nif (switcher) {\n  var link = switcher.closest(':checked').data('leave-url');\n  var fakeLink = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<a href=\\\"\".concat(link, \"\\\" />\"));\n  switcher.parent().append(fakeLink);\n  switcher.siblings('label').on('mousedown touchdown', function (event) {\n    event.preventDefault(); // let remodal = $.remodal.lookup[$('[data-remodal-id=\"changes\"]').data('remodal')];\n\n    var confirm = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=\"changes\"] [data-leave-action=\"continue\"]');\n    confirm.one('click', function () {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).on('beforeunload._grav');\n      fakeLink.off('click._grav');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).trigger('click');\n    });\n    fakeLink.trigger('click._grav');\n  });\n  switcher.on('change', function (event) {\n    var radio = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n    link = radio.data('leave-url');\n    setTimeout(function () {\n      return fakeLink.attr('href', link).get(0).click();\n    }, 5);\n  });\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Media: {\n    PageMedia: _media__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    PageMediaInstances: _media__WEBPACK_IMPORTED_MODULE_6__.Instance\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvcGFnZXMvcGFnZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQU1JLFFBQVEsR0FBR0osNkNBQUMsQ0FBQyx5Q0FBRCxDQUFsQjs7QUFFQSxJQUFJSSxRQUFKLEVBQWM7QUFDVixNQUFJQyxJQUFJLEdBQUdELFFBQVEsQ0FBQ0UsT0FBVCxDQUFpQixVQUFqQixFQUE2QkMsSUFBN0IsQ0FBa0MsV0FBbEMsQ0FBWDtBQUNBLE1BQUlDLFFBQVEsR0FBR1IsNkNBQUMscUJBQWFLLElBQWIsV0FBaEI7QUFFQUQsRUFBQUEsUUFBUSxDQUFDSyxNQUFULEdBQWtCQyxNQUFsQixDQUF5QkYsUUFBekI7QUFFQUosRUFBQUEsUUFBUSxDQUFDTyxRQUFULENBQWtCLE9BQWxCLEVBQTJCQyxFQUEzQixDQUE4QixxQkFBOUIsRUFBcUQsVUFBQ0MsS0FBRCxFQUFXO0FBQzVEQSxJQUFBQSxLQUFLLENBQUNDLGNBQU4sR0FENEQsQ0FHNUQ7O0FBQ0EsUUFBSUMsT0FBTyxHQUFHZiw2Q0FBQyxDQUFDLDREQUFELENBQWY7QUFFQWUsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWixFQUFxQixZQUFNO0FBQ3ZCaEIsTUFBQUEsNkNBQUMsQ0FBQ2lCLHFCQUFELENBQUQsQ0FBVUwsRUFBVixDQUFhLG9CQUFiO0FBQ0FKLE1BQUFBLFFBQVEsQ0FBQ1UsR0FBVCxDQUFhLGFBQWI7QUFFQWxCLE1BQUFBLDZDQUFDLENBQUNhLEtBQUssQ0FBQ00sTUFBUCxDQUFELENBQWdCQyxPQUFoQixDQUF3QixPQUF4QjtBQUNILEtBTEQ7QUFPQVosSUFBQUEsUUFBUSxDQUFDWSxPQUFULENBQWlCLGFBQWpCO0FBQ0gsR0FkRDtBQWdCQWhCLEVBQUFBLFFBQVEsQ0FBQ1EsRUFBVCxDQUFZLFFBQVosRUFBc0IsVUFBQ0MsS0FBRCxFQUFXO0FBQzdCLFFBQUlRLEtBQUssR0FBR3JCLDZDQUFDLENBQUNhLEtBQUssQ0FBQ00sTUFBUCxDQUFiO0FBQ0FkLElBQUFBLElBQUksR0FBR2dCLEtBQUssQ0FBQ2QsSUFBTixDQUFXLFdBQVgsQ0FBUDtBQUVBZSxJQUFBQSxVQUFVLENBQUM7QUFBQSxhQUFNZCxRQUFRLENBQUNlLElBQVQsQ0FBYyxNQUFkLEVBQXNCbEIsSUFBdEIsRUFBNEJtQixHQUE1QixDQUFnQyxDQUFoQyxFQUFtQ0MsS0FBbkMsRUFBTjtBQUFBLEtBQUQsRUFBbUQsQ0FBbkQsQ0FBVjtBQUNILEdBTEQ7QUFNSDs7QUFFRCxpRUFBZTtBQUNYQyxFQUFBQSxLQUFLLEVBQUU7QUFDSHpCLElBQUFBLFNBQVMsRUFBVEEsOENBREc7QUFFSEUsSUFBQUEsa0JBQWtCLEVBQWxCQSw0Q0FBa0JBO0FBRmY7QUFESSxDQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC9wYWdlcy9wYWdlL2luZGV4LmpzP2MwMWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCAnLi9hZGQnO1xuaW1wb3J0ICcuL21vdmUnO1xuaW1wb3J0ICcuL2RlbGV0ZSc7XG5pbXBvcnQgJy4vdW5zZXQnO1xuaW1wb3J0ICcuL2Rpc2FibGUtYnV0dG9ucyc7XG5pbXBvcnQgUGFnZU1lZGlhLCB7IEluc3RhbmNlIGFzIFBhZ2VNZWRpYUluc3RhbmNlcyB9IGZyb20gJy4vbWVkaWEnO1xuaW1wb3J0ICcuL211bHRpbGFuZyc7XG5cbmNvbnN0IHN3aXRjaGVyID0gJCgnaW5wdXRbdHlwZT1cInJhZGlvXCJdW25hbWU9XCJtb2RlLXN3aXRjaFwiXScpO1xuXG5pZiAoc3dpdGNoZXIpIHtcbiAgICBsZXQgbGluayA9IHN3aXRjaGVyLmNsb3Nlc3QoJzpjaGVja2VkJykuZGF0YSgnbGVhdmUtdXJsJyk7XG4gICAgbGV0IGZha2VMaW5rID0gJChgPGEgaHJlZj1cIiR7bGlua31cIiAvPmApO1xuXG4gICAgc3dpdGNoZXIucGFyZW50KCkuYXBwZW5kKGZha2VMaW5rKTtcblxuICAgIHN3aXRjaGVyLnNpYmxpbmdzKCdsYWJlbCcpLm9uKCdtb3VzZWRvd24gdG91Y2hkb3duJywgKGV2ZW50KSA9PiB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgLy8gbGV0IHJlbW9kYWwgPSAkLnJlbW9kYWwubG9va3VwWyQoJ1tkYXRhLXJlbW9kYWwtaWQ9XCJjaGFuZ2VzXCJdJykuZGF0YSgncmVtb2RhbCcpXTtcbiAgICAgICAgbGV0IGNvbmZpcm0gPSAkKCdbZGF0YS1yZW1vZGFsLWlkPVwiY2hhbmdlc1wiXSBbZGF0YS1sZWF2ZS1hY3Rpb249XCJjb250aW51ZVwiXScpO1xuXG4gICAgICAgIGNvbmZpcm0ub25lKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICQoZ2xvYmFsKS5vbignYmVmb3JldW5sb2FkLl9ncmF2Jyk7XG4gICAgICAgICAgICBmYWtlTGluay5vZmYoJ2NsaWNrLl9ncmF2Jyk7XG5cbiAgICAgICAgICAgICQoZXZlbnQudGFyZ2V0KS50cmlnZ2VyKCdjbGljaycpO1xuICAgICAgICB9KTtcblxuICAgICAgICBmYWtlTGluay50cmlnZ2VyKCdjbGljay5fZ3JhdicpO1xuICAgIH0pO1xuXG4gICAgc3dpdGNoZXIub24oJ2NoYW5nZScsIChldmVudCkgPT4ge1xuICAgICAgICBsZXQgcmFkaW8gPSAkKGV2ZW50LnRhcmdldCk7XG4gICAgICAgIGxpbmsgPSByYWRpby5kYXRhKCdsZWF2ZS11cmwnKTtcblxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IGZha2VMaW5rLmF0dHIoJ2hyZWYnLCBsaW5rKS5nZXQoMCkuY2xpY2soKSwgNSk7XG4gICAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBNZWRpYToge1xuICAgICAgICBQYWdlTWVkaWEsXG4gICAgICAgIFBhZ2VNZWRpYUluc3RhbmNlc1xuICAgIH1cbn07XG4iXSwibmFtZXMiOlsiJCIsIlBhZ2VNZWRpYSIsIkluc3RhbmNlIiwiUGFnZU1lZGlhSW5zdGFuY2VzIiwic3dpdGNoZXIiLCJsaW5rIiwiY2xvc2VzdCIsImRhdGEiLCJmYWtlTGluayIsInBhcmVudCIsImFwcGVuZCIsInNpYmxpbmdzIiwib24iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiY29uZmlybSIsIm9uZSIsImdsb2JhbCIsIm9mZiIsInRhcmdldCIsInRyaWdnZXIiLCJyYWRpbyIsInNldFRpbWVvdXQiLCJhdHRyIiwiZ2V0IiwiY2xpY2siLCJNZWRpYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/pages/page/index.js\n");

/***/ }),

/***/ "./app/pages/page/media.js":
/*!*********************************!*\
  !*** ./app/pages/page/media.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PageMedia),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/request */ \"./app/utils/request.js\");\n/* harmony import */ var _forms_fields_files__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../forms/fields/files */ \"./app/forms/fields/files.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _forms_fields_editor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../forms/fields/editor */ \"./app/forms/fields/editor.js\");\n/* harmony import */ var sortablejs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sortablejs */ \"./node_modules/sortablejs/modular/sortable.esm.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar previewTemplate = \"\\n    <div class=\\\"dz-preview dz-file-preview\\\">\\n      <div class=\\\"dz-details\\\">\\n        <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n        <div class=\\\"dz-size\\\" data-dz-size></div>\\n        <img data-dz-thumbnail />\\n      </div>\\n      <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n      <div class=\\\"dz-success-mark\\\"><span>\\u2714</span></div>\\n      <div class=\\\"dz-error-mark\\\"><span>\\u2718</span></div>\\n      <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n      <a class=\\\"dz-remove\\\" title=\\\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DELETE, \"\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.DELETE, \"</a>\\n      <a class=\\\"dz-metadata\\\" title=\\\"\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.METADATA, \"\\\" href=\\\"#\\\" target=\\\"_blank\\\" data-dz-metadata>\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.METADATA, \"</a>\\n      <a class=\\\"dz-view\\\" title=\\\"\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.VIEW, \"\\\" href=\\\"#\\\" target=\\\"_blank\\\" data-dz-view>\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.VIEW, \"</a>\\n      <a class=\\\"dz-insert\\\" title=\\\"\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.INSERT, \"\\\" href=\\\"javascript:undefined;\\\" data-dz-insert>\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.translations.PLUGIN_ADMIN.INSERT, \"</a>\\n    </div>\").trim();\n\nvar PageMedia = /*#__PURE__*/function (_FilesField) {\n  _inherits(PageMedia, _FilesField);\n\n  var _super = _createSuper(PageMedia);\n\n  function PageMedia() {\n    var _this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$container = _ref.container,\n        container = _ref$container === void 0 ? '#grav-dropzone' : _ref$container,\n        _ref$options = _ref.options,\n        options = _ref$options === void 0 ? {} : _ref$options;\n\n    _classCallCheck(this, PageMedia);\n\n    options = Object.assign(options, {\n      previewTemplate: previewTemplate\n    });\n    _this = _super.call(this, {\n      container: container,\n      options: options\n    });\n\n    if (!_this.container.length) {\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this.urls = {\n      fetch: \"\".concat(_this.container.data('media-url'), \"/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.config.param_sep, \"listmedia\"),\n      add: \"\".concat(_this.container.data('media-url'), \"/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.config.param_sep, \"addmedia\"),\n      \"delete\": \"\".concat(_this.container.data('media-url'), \"/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_3__.config.param_sep, \"delmedia\")\n    };\n    _this.dropzone.options.url = _this.urls.add;\n\n    if (typeof _this.options.fetchMedia === 'undefined' || _this.options.fetchMedia) {\n      _this.fetchMedia();\n    }\n\n    if (typeof _this.options.attachDragDrop === 'undefined' || _this.options.attachDragDrop) {\n      _this.attachDragDrop();\n    }\n\n    var field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[name=\\\"\".concat(_this.container.data('dropzone-field'), \"\\\"]\"));\n\n    if (field.length) {\n      _this.sortable = new sortablejs__WEBPACK_IMPORTED_MODULE_5__[\"default\"](_this.container.get(0), {\n        animation: 150,\n        // forceFallback: true,\n        setData: function setData(dataTransfer, target) {\n          target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(target);\n          var uri = encodeURI(target.find('.dz-filename').text());\n          var shortcode = (0,_forms_fields_files__WEBPACK_IMPORTED_MODULE_2__.UriToMarkdown)(uri);\n\n          _this.dropzone.disable();\n\n          target.addClass('hide-backface');\n          dataTransfer.effectAllowed = 'copy';\n          dataTransfer.setData('text', shortcode);\n        },\n        onSort: function onSort() {\n          var names = [];\n\n          _this.container.find('[data-dz-name]').each(function (index, file) {\n            file = jquery__WEBPACK_IMPORTED_MODULE_0___default()(file);\n            var name = file.text().trim();\n            names.push(name);\n          });\n\n          field.val(names.join(','));\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(PageMedia, [{\n    key: \"fetchMedia\",\n    value: function fetchMedia() {\n      var _this2 = this;\n\n      var order = this.container.closest('.form-field').find('[name=\"data[header][media_order]\"]').val();\n      var body = {\n        uri: this.getURI(),\n        order: order\n      };\n      var url = this.urls.fetch;\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(url, {\n        method: 'post',\n        body: body\n      }, function (response) {\n        var results = response.results;\n        Object.keys(results).forEach(function (name) {\n          var data = results[name];\n          var mock = {\n            name: name,\n            size: data.size,\n            accepted: true,\n            extras: data\n          };\n\n          _this2.dropzone.files.push(mock);\n\n          _this2.dropzone.options.addedfile.call(_this2.dropzone, mock);\n\n          _this2.dropzone.options.thumbnail.call(_this2.dropzone, mock, data.url);\n        });\n\n        _this2.container.find('.dz-preview').prop('draggable', 'true');\n      });\n    }\n  }, {\n    key: \"onDropzoneSending\",\n    value: function onDropzoneSending(file, xhr, formData) {\n      /*\n      // Cannot call super because Safari and IE API don't implement `delete`\n      super.onDropzoneSending(file, xhr, formData);\n      formData.delete('task');\n      */\n      formData.append('name', this.options.dotNotation || file.name);\n      formData.append('admin-nonce', grav_config__WEBPACK_IMPORTED_MODULE_3__.config.admin_nonce);\n      formData.append('uri', this.getURI());\n    }\n  }, {\n    key: \"onDropzoneComplete\",\n    value: function onDropzoneComplete(file) {\n      _get(_getPrototypeOf(PageMedia.prototype), \"onDropzoneComplete\", this).call(this, file);\n\n      if (this.sortable) {\n        this.sortable.options.onSort();\n      } // accepted\n\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.dz-preview').prop('draggable', 'true');\n    }\n  }, {\n    key: \"onDropzoneRemovedFile\",\n    value: function onDropzoneRemovedFile(file) {\n      var _get2;\n\n      for (var _len = arguments.length, extra = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        extra[_key - 1] = arguments[_key];\n      }\n\n      (_get2 = _get(_getPrototypeOf(PageMedia.prototype), \"onDropzoneRemovedFile\", this)).call.apply(_get2, [this, file].concat(extra));\n\n      if (this.sortable) {\n        this.sortable.options.onSort();\n      }\n    }\n  }, {\n    key: \"attachDragDrop\",\n    value: function attachDragDrop() {\n      var _this3 = this;\n\n      this.container.delegate('[data-dz-insert]', 'click', function (e) {\n        var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget).parent('.dz-preview').find('.dz-filename');\n        var editor = _forms_fields_editor__WEBPACK_IMPORTED_MODULE_4__.Instance.editors.filter(function (index, editor) {\n          return jquery__WEBPACK_IMPORTED_MODULE_0___default()(editor).attr('name') === 'data[content]';\n        });\n\n        if (editor.length) {\n          editor = editor.data('codemirror');\n          editor.focus();\n          var filename = encodeURI(target.text());\n          var shortcode = (0,_forms_fields_files__WEBPACK_IMPORTED_MODULE_2__.UriToMarkdown)(filename);\n          editor.doc.replaceSelection(shortcode);\n        }\n      });\n      this.container.delegate('[data-dz-view]', 'mouseenter', function (e) {\n        var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget);\n        var file = target.parent('.dz-preview').find('.dz-filename');\n        var filename = encodeURI(file.text());\n        var URL = target.closest('[data-media-path]').data('media-path');\n\n        var original = _this3.dropzone.files.filter(function (file) {\n          return encodeURI(file.name) === filename;\n        }).shift();\n\n        original = original && (original.extras && original.extras.original || encodeURI(original.name));\n        target.attr('href', \"\".concat(URL, \"/\").concat(original));\n      });\n      this.container.delegate('[data-dz-metadata]', 'click', function (e) {\n        e.preventDefault();\n        var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget);\n        var file = target.parent('.dz-preview').find('.dz-filename');\n        var filename = encodeURI(file.text());\n        var fileObj = _this3.dropzone.files.filter(function (file) {\n          return file.name === __webpack_require__.g.decodeURI(filename);\n        }).shift() || {};\n\n        if (!fileObj.extras) {\n          fileObj.extras = {\n            metadata: []\n          };\n        }\n\n        if (Array.isArray(fileObj.extras.metadata) && !fileObj.extras.metadata.length) {\n          fileObj.extras.metadata = {\n            '': \"\".concat(__webpack_require__.g.decodeURI(filename), \".meta.yaml doesn't exist\")\n          };\n        }\n\n        fileObj = fileObj.extras;\n        var modal_element = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').find('[data-remodal-id=\"metadata\"]');\n        var modal = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[modal_element.data('remodal')];\n        modal_element.find('h1 strong').html(filename);\n\n        if (fileObj.url) {\n          modal_element.find('.meta-preview').html(\"<img src=\\\"\".concat(fileObj.url, \"\\\" />\"));\n        }\n\n        var container = modal_element.find('.meta-content').html('<ul />').find('ul');\n        Object.keys(fileObj.metadata).forEach(function (meta) {\n          container.append(\"<li><strong>\".concat(meta ? meta + ':' : '', \"</strong> \").concat(fileObj.metadata[meta], \"</li>\"));\n        });\n        modal.open();\n      });\n      this.container.delegate('.dz-preview', 'dragstart', function (e) {\n        var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget);\n        var uri = encodeURI(target.find('.dz-filename').text());\n        var shortcode = (0,_forms_fields_files__WEBPACK_IMPORTED_MODULE_2__.UriToMarkdown)(uri);\n\n        _this3.dropzone.disable();\n\n        target.addClass('hide-backface');\n        e.originalEvent.dataTransfer.effectAllowed = 'copy';\n        e.originalEvent.dataTransfer.setData('text', shortcode);\n      });\n      this.container.delegate('.dz-preview', 'dragend', function (e) {\n        var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.currentTarget);\n\n        _this3.dropzone.enable();\n\n        target.removeClass('hide-backface');\n      });\n    }\n  }]);\n\n  return PageMedia;\n}(_forms_fields_files__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n\n\nvar Instance = new PageMedia();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/pages/page/media.js\n");

/***/ }),

/***/ "./app/pages/page/move.js":
/*!********************************!*\
  !*** ./app/pages/page/move.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-page-move] button[name=\"task\"][value=\"save\"]', function (event) {\n  /* let route = $('form#blueprints:first select[name=\"data[route]\"]');\n  let moveTo = $('[data-page-move] select').val();\n   if (route.length && route.val() !== moveTo) {\n      let selectize = route.data('selectize');\n      route.val(moveTo);\n       if (selectize) selectize.setValue(moveTo);\n  }*/\n  var modal = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).closest('[data-remodal-id]');\n  var parents = modal.data('parents') || {};\n  var finder = parents.finder;\n\n  if (!parents || !finder) {\n    return true;\n  }\n\n  var field = parents.field;\n  var parentLabel = parents.parentLabel;\n  var parentName = parents.parentName;\n  var selection = finder.findLastActive().item[0];\n  var value = selection._item[finder.config.valueKey];\n  var name = selection._item[finder.config.labelKey];\n  field.val(value);\n  parentLabel.text(value);\n  parentName.text(name);\n  finder.config.defaultPath = value;\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />').css({\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    zIndex: 15000\n  }).appendTo(jquery__WEBPACK_IMPORTED_MODULE_0___default()('body'));\n});\n/*\n$(document).on('click', '[data-remodal-id=\"parents\"] [data-parents-select]', (event) => {\n    const modal = $(event.currentTarget).closest('[data-remodal-id]');\n    const parents = modal.data('parents');\n    const finder = parents.finder;\n    const field = parents.field;\n    const parentLabel = parents.parentLabel;\n    const parentName = parents.parentName;\n    const selection = finder.findLastActive().item[0];\n    const value = selection._item[finder.config.valueKey];\n    const name = selection._item[finder.config.labelKey];\n\n    field.val(value);\n    parentLabel.text(value);\n    parentName.text(name);\n    finder.config.defaultPath = value;\n\n    const remodal = $.remodal.lookup[$(`[data-remodal-id=\"${modal.data('remodalId')}\"]`).data('remodal')];\n    remodal.close();\n});\n*///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvcGFnZXMvcGFnZS9tb3ZlLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBRUFBLDZDQUFDLENBQUNDLFFBQUQsQ0FBRCxDQUFZQyxFQUFaLENBQWUsT0FBZixFQUF3QixvREFBeEIsRUFBOEUsVUFBQ0MsS0FBRCxFQUFXO0FBQ3JGO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUksTUFBTUMsS0FBSyxHQUFHSiw2Q0FBQyxDQUFDRyxLQUFLLENBQUNFLGFBQVAsQ0FBRCxDQUF1QkMsT0FBdkIsQ0FBK0IsbUJBQS9CLENBQWQ7QUFDQSxNQUFNQyxPQUFPLEdBQUdILEtBQUssQ0FBQ0ksSUFBTixDQUFXLFNBQVgsS0FBeUIsRUFBekM7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0UsTUFBdkI7O0FBRUEsTUFBSSxDQUFDRixPQUFELElBQVksQ0FBQ0UsTUFBakIsRUFBeUI7QUFBRSxXQUFPLElBQVA7QUFBYzs7QUFFekMsTUFBTUMsS0FBSyxHQUFHSCxPQUFPLENBQUNHLEtBQXRCO0FBQ0EsTUFBTUMsV0FBVyxHQUFHSixPQUFPLENBQUNJLFdBQTVCO0FBQ0EsTUFBTUMsVUFBVSxHQUFHTCxPQUFPLENBQUNLLFVBQTNCO0FBQ0EsTUFBTUMsU0FBUyxHQUFHSixNQUFNLENBQUNLLGNBQVAsR0FBd0JDLElBQXhCLENBQTZCLENBQTdCLENBQWxCO0FBQ0EsTUFBTUMsS0FBSyxHQUFHSCxTQUFTLENBQUNJLEtBQVYsQ0FBZ0JSLE1BQU0sQ0FBQ1MsTUFBUCxDQUFjQyxRQUE5QixDQUFkO0FBQ0EsTUFBTUMsSUFBSSxHQUFHUCxTQUFTLENBQUNJLEtBQVYsQ0FBZ0JSLE1BQU0sQ0FBQ1MsTUFBUCxDQUFjRyxRQUE5QixDQUFiO0FBRUFYLEVBQUFBLEtBQUssQ0FBQ1ksR0FBTixDQUFVTixLQUFWO0FBQ0FMLEVBQUFBLFdBQVcsQ0FBQ1ksSUFBWixDQUFpQlAsS0FBakI7QUFDQUosRUFBQUEsVUFBVSxDQUFDVyxJQUFYLENBQWdCSCxJQUFoQjtBQUNBWCxFQUFBQSxNQUFNLENBQUNTLE1BQVAsQ0FBY00sV0FBZCxHQUE0QlIsS0FBNUI7QUFFQWhCLEVBQUFBLDZDQUFDLENBQUMsU0FBRCxDQUFELENBQWF5QixHQUFiLENBQWlCO0FBQ2JDLElBQUFBLGVBQWUsRUFBRSwwQkFESjtBQUViQyxJQUFBQSxRQUFRLEVBQUUsT0FGRztBQUdiQyxJQUFBQSxHQUFHLEVBQUUsQ0FIUTtBQUliQyxJQUFBQSxJQUFJLEVBQUUsQ0FKTztBQUtiQyxJQUFBQSxLQUFLLEVBQUUsT0FMTTtBQU1iQyxJQUFBQSxNQUFNLEVBQUUsT0FOSztBQU9iQyxJQUFBQSxNQUFNLEVBQUU7QUFQSyxHQUFqQixFQVFHQyxRQVJILENBUVlqQyw2Q0FBQyxDQUFDLE1BQUQsQ0FSYjtBQVNILENBdENEO0FBd0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvcGFnZXMvcGFnZS9tb3ZlLmpzPzIwNWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ1tkYXRhLXBhZ2UtbW92ZV0gYnV0dG9uW25hbWU9XCJ0YXNrXCJdW3ZhbHVlPVwic2F2ZVwiXScsIChldmVudCkgPT4ge1xuICAgIC8qIGxldCByb3V0ZSA9ICQoJ2Zvcm0jYmx1ZXByaW50czpmaXJzdCBzZWxlY3RbbmFtZT1cImRhdGFbcm91dGVdXCJdJyk7XG4gICAgbGV0IG1vdmVUbyA9ICQoJ1tkYXRhLXBhZ2UtbW92ZV0gc2VsZWN0JykudmFsKCk7XG5cbiAgICBpZiAocm91dGUubGVuZ3RoICYmIHJvdXRlLnZhbCgpICE9PSBtb3ZlVG8pIHtcbiAgICAgICAgbGV0IHNlbGVjdGl6ZSA9IHJvdXRlLmRhdGEoJ3NlbGVjdGl6ZScpO1xuICAgICAgICByb3V0ZS52YWwobW92ZVRvKTtcblxuICAgICAgICBpZiAoc2VsZWN0aXplKSBzZWxlY3RpemUuc2V0VmFsdWUobW92ZVRvKTtcbiAgICB9Ki9cblxuICAgIGNvbnN0IG1vZGFsID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS5jbG9zZXN0KCdbZGF0YS1yZW1vZGFsLWlkXScpO1xuICAgIGNvbnN0IHBhcmVudHMgPSBtb2RhbC5kYXRhKCdwYXJlbnRzJykgfHwge307XG4gICAgY29uc3QgZmluZGVyID0gcGFyZW50cy5maW5kZXI7XG5cbiAgICBpZiAoIXBhcmVudHMgfHwgIWZpbmRlcikgeyByZXR1cm4gdHJ1ZTsgfVxuXG4gICAgY29uc3QgZmllbGQgPSBwYXJlbnRzLmZpZWxkO1xuICAgIGNvbnN0IHBhcmVudExhYmVsID0gcGFyZW50cy5wYXJlbnRMYWJlbDtcbiAgICBjb25zdCBwYXJlbnROYW1lID0gcGFyZW50cy5wYXJlbnROYW1lO1xuICAgIGNvbnN0IHNlbGVjdGlvbiA9IGZpbmRlci5maW5kTGFzdEFjdGl2ZSgpLml0ZW1bMF07XG4gICAgY29uc3QgdmFsdWUgPSBzZWxlY3Rpb24uX2l0ZW1bZmluZGVyLmNvbmZpZy52YWx1ZUtleV07XG4gICAgY29uc3QgbmFtZSA9IHNlbGVjdGlvbi5faXRlbVtmaW5kZXIuY29uZmlnLmxhYmVsS2V5XTtcblxuICAgIGZpZWxkLnZhbCh2YWx1ZSk7XG4gICAgcGFyZW50TGFiZWwudGV4dCh2YWx1ZSk7XG4gICAgcGFyZW50TmFtZS50ZXh0KG5hbWUpO1xuICAgIGZpbmRlci5jb25maWcuZGVmYXVsdFBhdGggPSB2YWx1ZTtcblxuICAgICQoJzxkaXYgLz4nKS5jc3Moe1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSknLFxuICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgICAgdG9wOiAwLFxuICAgICAgICBsZWZ0OiAwLFxuICAgICAgICB3aWR0aDogJzEwMHZ3JyxcbiAgICAgICAgaGVpZ2h0OiAnMTAwdmgnLFxuICAgICAgICB6SW5kZXg6IDE1MDAwXG4gICAgfSkuYXBwZW5kVG8oJCgnYm9keScpKTtcbn0pO1xuXG4vKlxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ1tkYXRhLXJlbW9kYWwtaWQ9XCJwYXJlbnRzXCJdIFtkYXRhLXBhcmVudHMtc2VsZWN0XScsIChldmVudCkgPT4ge1xuICAgIGNvbnN0IG1vZGFsID0gJChldmVudC5jdXJyZW50VGFyZ2V0KS5jbG9zZXN0KCdbZGF0YS1yZW1vZGFsLWlkXScpO1xuICAgIGNvbnN0IHBhcmVudHMgPSBtb2RhbC5kYXRhKCdwYXJlbnRzJyk7XG4gICAgY29uc3QgZmluZGVyID0gcGFyZW50cy5maW5kZXI7XG4gICAgY29uc3QgZmllbGQgPSBwYXJlbnRzLmZpZWxkO1xuICAgIGNvbnN0IHBhcmVudExhYmVsID0gcGFyZW50cy5wYXJlbnRMYWJlbDtcbiAgICBjb25zdCBwYXJlbnROYW1lID0gcGFyZW50cy5wYXJlbnROYW1lO1xuICAgIGNvbnN0IHNlbGVjdGlvbiA9IGZpbmRlci5maW5kTGFzdEFjdGl2ZSgpLml0ZW1bMF07XG4gICAgY29uc3QgdmFsdWUgPSBzZWxlY3Rpb24uX2l0ZW1bZmluZGVyLmNvbmZpZy52YWx1ZUtleV07XG4gICAgY29uc3QgbmFtZSA9IHNlbGVjdGlvbi5faXRlbVtmaW5kZXIuY29uZmlnLmxhYmVsS2V5XTtcblxuICAgIGZpZWxkLnZhbCh2YWx1ZSk7XG4gICAgcGFyZW50TGFiZWwudGV4dCh2YWx1ZSk7XG4gICAgcGFyZW50TmFtZS50ZXh0KG5hbWUpO1xuICAgIGZpbmRlci5jb25maWcuZGVmYXVsdFBhdGggPSB2YWx1ZTtcblxuICAgIGNvbnN0IHJlbW9kYWwgPSAkLnJlbW9kYWwubG9va3VwWyQoYFtkYXRhLXJlbW9kYWwtaWQ9XCIke21vZGFsLmRhdGEoJ3JlbW9kYWxJZCcpfVwiXWApLmRhdGEoJ3JlbW9kYWwnKV07XG4gICAgcmVtb2RhbC5jbG9zZSgpO1xufSk7XG4qL1xuIl0sIm5hbWVzIjpbIiQiLCJkb2N1bWVudCIsIm9uIiwiZXZlbnQiLCJtb2RhbCIsImN1cnJlbnRUYXJnZXQiLCJjbG9zZXN0IiwicGFyZW50cyIsImRhdGEiLCJmaW5kZXIiLCJmaWVsZCIsInBhcmVudExhYmVsIiwicGFyZW50TmFtZSIsInNlbGVjdGlvbiIsImZpbmRMYXN0QWN0aXZlIiwiaXRlbSIsInZhbHVlIiwiX2l0ZW0iLCJjb25maWciLCJ2YWx1ZUtleSIsIm5hbWUiLCJsYWJlbEtleSIsInZhbCIsInRleHQiLCJkZWZhdWx0UGF0aCIsImNzcyIsImJhY2tncm91bmRDb2xvciIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsIndpZHRoIiwiaGVpZ2h0IiwiekluZGV4IiwiYXBwZW5kVG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/pages/page/move.js\n");

/***/ }),

/***/ "./app/pages/page/multilang.js":
/*!*************************************!*\
  !*** ./app/pages/page/multilang.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('[name=\"task\"][value=\"saveas\"], [name=\"task\"][value=\"switchlanguage\"]').on('mousedown touchstart', function (event) {\n  var fields = ['lang', 'redirect'];\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var form = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#\".concat(element.attr('form')));\n\n  if (!form.length) {\n    return;\n  }\n\n  fields.forEach(function (field) {\n    var value = element.attr(field);\n\n    if (!value) {\n      return;\n    }\n\n    var input = form.find(\"[name=\\\"data[\".concat(field, \"]\\\"]\"));\n\n    if (!input.length) {\n      input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<input type=\\\"hidden\\\" name=\\\"data[\".concat(field, \"]\\\" value=\\\"\\\" />\"));\n      form.append(input);\n    }\n\n    input.val(value);\n  });\n  return true;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvcGFnZXMvcGFnZS9tdWx0aWxhbmcuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFFQUEsNkNBQUMsQ0FBQyxzRUFBRCxDQUFELENBQTBFQyxFQUExRSxDQUE2RSxzQkFBN0UsRUFBcUcsVUFBQ0MsS0FBRCxFQUFXO0FBQzVHLE1BQUlDLE1BQU0sR0FBRyxDQUFDLE1BQUQsRUFBUyxVQUFULENBQWI7QUFDQSxNQUFJQyxPQUFPLEdBQUdKLDZDQUFDLENBQUNFLEtBQUssQ0FBQ0csYUFBUCxDQUFmO0FBQ0EsTUFBSUMsSUFBSSxHQUFHTiw2Q0FBQyxZQUFLSSxPQUFPLENBQUNHLElBQVIsQ0FBYSxNQUFiLENBQUwsRUFBWjs7QUFFQSxNQUFJLENBQUNELElBQUksQ0FBQ0UsTUFBVixFQUFrQjtBQUFFO0FBQVM7O0FBQzdCTCxFQUFBQSxNQUFNLENBQUNNLE9BQVAsQ0FBZSxVQUFDQyxLQUFELEVBQVc7QUFDdEIsUUFBSUMsS0FBSyxHQUFHUCxPQUFPLENBQUNHLElBQVIsQ0FBYUcsS0FBYixDQUFaOztBQUNBLFFBQUksQ0FBQ0MsS0FBTCxFQUFZO0FBQUU7QUFBUzs7QUFDdkIsUUFBSUMsS0FBSyxHQUFHTixJQUFJLENBQUNPLElBQUwsd0JBQXlCSCxLQUF6QixVQUFaOztBQUNBLFFBQUksQ0FBQ0UsS0FBSyxDQUFDSixNQUFYLEVBQW1CO0FBQ2ZJLE1BQUFBLEtBQUssR0FBR1osNkNBQUMsOENBQW9DVSxLQUFwQyx1QkFBVDtBQUNBSixNQUFBQSxJQUFJLENBQUNRLE1BQUwsQ0FBWUYsS0FBWjtBQUNIOztBQUVEQSxJQUFBQSxLQUFLLENBQUNHLEdBQU4sQ0FBVUosS0FBVjtBQUNILEdBVkQ7QUFZQSxTQUFPLElBQVA7QUFDSCxDQW5CRCIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvcGFnZXMvcGFnZS9tdWx0aWxhbmcuanM/MGMwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuXG4kKCdbbmFtZT1cInRhc2tcIl1bdmFsdWU9XCJzYXZlYXNcIl0sIFtuYW1lPVwidGFza1wiXVt2YWx1ZT1cInN3aXRjaGxhbmd1YWdlXCJdJykub24oJ21vdXNlZG93biB0b3VjaHN0YXJ0JywgKGV2ZW50KSA9PiB7XG4gICAgbGV0IGZpZWxkcyA9IFsnbGFuZycsICdyZWRpcmVjdCddO1xuICAgIGxldCBlbGVtZW50ID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICBsZXQgZm9ybSA9ICQoYCMke2VsZW1lbnQuYXR0cignZm9ybScpfWApO1xuXG4gICAgaWYgKCFmb3JtLmxlbmd0aCkgeyByZXR1cm47IH1cbiAgICBmaWVsZHMuZm9yRWFjaCgoZmllbGQpID0+IHtcbiAgICAgICAgbGV0IHZhbHVlID0gZWxlbWVudC5hdHRyKGZpZWxkKTtcbiAgICAgICAgaWYgKCF2YWx1ZSkgeyByZXR1cm47IH1cbiAgICAgICAgbGV0IGlucHV0ID0gZm9ybS5maW5kKGBbbmFtZT1cImRhdGFbJHtmaWVsZH1dXCJdYCk7XG4gICAgICAgIGlmICghaW5wdXQubGVuZ3RoKSB7XG4gICAgICAgICAgICBpbnB1dCA9ICQoYDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImRhdGFbJHtmaWVsZH1dXCIgdmFsdWU9XCJcIiAvPmApO1xuICAgICAgICAgICAgZm9ybS5hcHBlbmQoaW5wdXQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5wdXQudmFsKHZhbHVlKTtcbiAgICB9KTtcblxuICAgIHJldHVybiB0cnVlO1xufSk7XG4iXSwibmFtZXMiOlsiJCIsIm9uIiwiZXZlbnQiLCJmaWVsZHMiLCJlbGVtZW50IiwiY3VycmVudFRhcmdldCIsImZvcm0iLCJhdHRyIiwibGVuZ3RoIiwiZm9yRWFjaCIsImZpZWxkIiwidmFsdWUiLCJpbnB1dCIsImZpbmQiLCJhcHBlbmQiLCJ2YWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/pages/page/multilang.js\n");

/***/ }),

/***/ "./app/pages/page/unset.js":
/*!*********************************!*\
  !*** ./app/pages/page/unset.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.dz-unset', function () {\n  var file_upload = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('.files-upload');\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('.dz-image-preview').remove();\n  var unset_image = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).closest('.dz-image-preview').find('[data-dz-name]').text().trim();\n  var images = JSON.parse(file_upload.find('input[data-grav-field=\"hidden\"]').val()) || {};\n  var image_array = {};\n  jquery__WEBPACK_IMPORTED_MODULE_0___default().each(images, function (ind, obj) {\n    if (!ind.endsWith(unset_image)) {\n      image_array[ind] = obj;\n    }\n  });\n  file_upload.find('input[data-grav-field=\"hidden\"]').val(JSON.stringify(image_array));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvcGFnZXMvcGFnZS91bnNldC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUVBQSw2Q0FBQyxDQUFDQyxRQUFELENBQUQsQ0FBWUMsRUFBWixDQUFlLE9BQWYsRUFBd0IsV0FBeEIsRUFBcUMsWUFBVztBQUU1QyxNQUFNQyxXQUFXLEdBQUdILDZDQUFDLENBQUMsSUFBRCxDQUFELENBQVFJLE9BQVIsQ0FBZ0IsZUFBaEIsQ0FBcEI7QUFDQUosRUFBQUEsNkNBQUMsQ0FBQyxJQUFELENBQUQsQ0FBUUksT0FBUixDQUFnQixtQkFBaEIsRUFBcUNDLE1BQXJDO0FBQ0EsTUFBTUMsV0FBVyxHQUFHTiw2Q0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRSSxPQUFSLENBQWdCLG1CQUFoQixFQUFxQ0csSUFBckMsQ0FBMEMsZ0JBQTFDLEVBQTREQyxJQUE1RCxHQUFtRUMsSUFBbkUsRUFBcEI7QUFDQSxNQUFNQyxNQUFNLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXVCxXQUFXLENBQUNJLElBQVosQ0FBaUIsaUNBQWpCLEVBQW9ETSxHQUFwRCxFQUFYLEtBQXlFLEVBQXhGO0FBQ0EsTUFBSUMsV0FBVyxHQUFHLEVBQWxCO0FBRUFkLEVBQUFBLGtEQUFBLENBQU9VLE1BQVAsRUFBZSxVQUFTTSxHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDOUIsUUFBSSxDQUFDRCxHQUFHLENBQUNFLFFBQUosQ0FBYVosV0FBYixDQUFMLEVBQWdDO0FBQzVCUSxNQUFBQSxXQUFXLENBQUNFLEdBQUQsQ0FBWCxHQUFtQkMsR0FBbkI7QUFDSDtBQUNKLEdBSkQ7QUFNQWQsRUFBQUEsV0FBVyxDQUFDSSxJQUFaLENBQWlCLGlDQUFqQixFQUFvRE0sR0FBcEQsQ0FBd0RGLElBQUksQ0FBQ1EsU0FBTCxDQUFlTCxXQUFmLENBQXhEO0FBQ0gsQ0FmRCIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvcGFnZXMvcGFnZS91bnNldC5qcz85ZmJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbiQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuZHotdW5zZXQnLCBmdW5jdGlvbigpIHtcblxuICAgIGNvbnN0IGZpbGVfdXBsb2FkID0gJCh0aGlzKS5jbG9zZXN0KCcuZmlsZXMtdXBsb2FkJyk7XG4gICAgJCh0aGlzKS5jbG9zZXN0KCcuZHotaW1hZ2UtcHJldmlldycpLnJlbW92ZSgpO1xuICAgIGNvbnN0IHVuc2V0X2ltYWdlID0gJCh0aGlzKS5jbG9zZXN0KCcuZHotaW1hZ2UtcHJldmlldycpLmZpbmQoJ1tkYXRhLWR6LW5hbWVdJykudGV4dCgpLnRyaW0oKTtcbiAgICBjb25zdCBpbWFnZXMgPSBKU09OLnBhcnNlKGZpbGVfdXBsb2FkLmZpbmQoJ2lucHV0W2RhdGEtZ3Jhdi1maWVsZD1cImhpZGRlblwiXScpLnZhbCgpKSB8fCB7fTtcbiAgICBsZXQgaW1hZ2VfYXJyYXkgPSB7fTtcblxuICAgICQuZWFjaChpbWFnZXMsIGZ1bmN0aW9uKGluZCwgb2JqKSB7XG4gICAgICAgIGlmICghaW5kLmVuZHNXaXRoKHVuc2V0X2ltYWdlKSkge1xuICAgICAgICAgICAgaW1hZ2VfYXJyYXlbaW5kXSA9IG9iajtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgZmlsZV91cGxvYWQuZmluZCgnaW5wdXRbZGF0YS1ncmF2LWZpZWxkPVwiaGlkZGVuXCJdJykudmFsKEpTT04uc3RyaW5naWZ5KGltYWdlX2FycmF5KSk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJvbiIsImZpbGVfdXBsb2FkIiwiY2xvc2VzdCIsInJlbW92ZSIsInVuc2V0X2ltYWdlIiwiZmluZCIsInRleHQiLCJ0cmltIiwiaW1hZ2VzIiwiSlNPTiIsInBhcnNlIiwidmFsIiwiaW1hZ2VfYXJyYXkiLCJlYWNoIiwiaW5kIiwib2JqIiwiZW5kc1dpdGgiLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/pages/page/unset.js\n");

/***/ }),

/***/ "./app/pages/tree.js":
/*!***************************!*\
  !*** ./app/pages/tree.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PagesTree),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/storage */ \"./app/utils/storage.js\");\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utils_storage__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\nvar sessionKey = 'grav:admin:pages';\n\nif (!sessionStorage.getItem(sessionKey)) {\n  sessionStorage.setItem(sessionKey, '{}');\n}\n\nvar PagesTree = /*#__PURE__*/function () {\n  function PagesTree(query) {\n    var _this = this;\n\n    var elements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    _classCallCheck(this, PagesTree);\n\n    this.query = query;\n    this.elements = jquery__WEBPACK_IMPORTED_MODULE_0___default()(elements !== undefined ? elements : this.query);\n    this.session = JSON.parse(sessionStorage.getItem(sessionKey) || '{}');\n\n    if (!this.elements.length) {\n      return;\n    }\n\n    this.restore();\n    this.elements.find('.page-icon').on('click', function (event) {\n      return _this.toggle(event.target);\n    });\n    this.elements.data('tree_init', 1);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-page-toggleall]').on('click', function (event) {\n      var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).closest('[data-page-toggleall]');\n      var action = element.data('page-toggleall');\n\n      _this[action]();\n    });\n  }\n\n  _createClass(PagesTree, [{\n    key: \"reload\",\n    value: function reload() {\n      var elements = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this.query).filter(function (index, element) {\n        return !jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).data('tree_init');\n      });\n\n      if (!elements.length) {\n        return;\n      }\n\n      this.constructor(this.query, elements);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(elements) {\n      var _this2 = this;\n\n      var dontStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (typeof elements === 'string') {\n        elements = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-nav-id=\\\"\".concat(elements, \"\\\"]\")).find('[data-toggle=\"children\"]');\n      }\n\n      elements = jquery__WEBPACK_IMPORTED_MODULE_0___default()(elements || this.elements);\n      elements.each(function (index, element) {\n        element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n\n        var state = _this2.getState(element.closest('[data-toggle=\"children\"]'));\n\n        _this2[state.isOpen ? 'collapse' : 'expand'](state.id, dontStore);\n      });\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse(elements) {\n      var _this3 = this;\n\n      var dontStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (typeof elements === 'string') {\n        elements = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-nav-id=\\\"\".concat(elements, \"\\\"]\")).find('[data-toggle=\"children\"]');\n      }\n\n      elements = jquery__WEBPACK_IMPORTED_MODULE_0___default()(elements || this.elements);\n      elements.each(function (index, element) {\n        element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n\n        var state = _this3.getState(element);\n\n        if (state.isOpen) {\n          state.children.hide();\n          state.icon.removeClass('children-open').addClass('children-closed');\n\n          if (!dontStore) {\n            delete _this3.session[state.id];\n          }\n        }\n      });\n\n      if (!dontStore) {\n        this.save();\n      }\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(elements) {\n      var _this4 = this;\n\n      var dontStore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (typeof elements === 'string') {\n        var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-nav-id=\\\"\".concat(elements, \"\\\"]\"));\n        var parents = element.parents('[data-nav-id]'); // loop back through parents, we don't want to expand an hidden child\n\n        if (parents.length) {\n          parents = parents.find('[data-toggle=\"children\"]:first');\n          parents = parents.add(element.find('[data-toggle=\"children\"]:first'));\n          return this.expand(parents, dontStore);\n        }\n\n        elements = element.find('[data-toggle=\"children\"]:first');\n      }\n\n      elements = jquery__WEBPACK_IMPORTED_MODULE_0___default()(elements || this.elements);\n      elements.each(function (index, element) {\n        element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n\n        var state = _this4.getState(element);\n\n        if (!state.isOpen) {\n          state.children.show();\n          state.icon.removeClass('children-closed').addClass('children-open');\n\n          if (!dontStore) {\n            _this4.session[state.id] = 1;\n          }\n        }\n      });\n\n      if (!dontStore) {\n        this.save();\n      }\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      var _this5 = this;\n\n      this.collapse(null, true);\n      Object.keys(this.session).forEach(function (key) {\n        _this5.expand(key, 'no-store');\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      return sessionStorage.setItem(sessionKey, JSON.stringify(this.session));\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(element) {\n      element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n      return {\n        id: element.closest('[data-nav-id]').data('nav-id'),\n        children: element.closest('li.page-item').find('ul:first'),\n        icon: element.find('.page-icon'),\n\n        get isOpen() {\n          return this.icon.hasClass('children-open');\n        }\n\n      };\n    }\n  }]);\n\n  return PagesTree;\n}();\n\n\nvar Instance = new PagesTree('[data-toggle=\"children\"]');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/pages/tree.js\n");

/***/ }),

/***/ "./app/plugins/index.js":
/*!******************************!*\
  !*** ./app/plugins/index.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_packages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/packages */ \"./app/utils/packages.js\");\n/* harmony import */ var mout_string_camelCase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mout/string/camelCase */ \"./node_modules/mout/string/camelCase.js\");\n/* harmony import */ var mout_string_camelCase__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mout_string_camelCase__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var debounce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! debounce */ \"./node_modules/debounce/index.js\");\n/* harmony import */ var debounce__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(debounce__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var mout_string_contains__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mout/string/contains */ \"./node_modules/mout/string/contains.js\");\n/* harmony import */ var mout_string_contains__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(mout_string_contains__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n // Plugins sliders details\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('.gpm-name, .gpm-actions').on('click', function (e) {\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.target);\n  var tag = target.prop('tagName').toLowerCase();\n\n  if (tag === 'a' || element.parent('a').length || target.parent('a').length) {\n    return true;\n  }\n\n  var wrapper = element.siblings('.gpm-details').find('.table-wrapper');\n  wrapper.slideToggle({\n    duration: 350,\n    complete: function complete() {\n      var visible = wrapper.is(':visible');\n      wrapper.closest('tr').find('.gpm-details-expand i').removeClass('fa-chevron-' + (visible ? 'down' : 'up')).addClass('fa-chevron-' + (visible ? 'up' : 'down'));\n    }\n  });\n}); // Removing plugin\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-plugin-action=\"remove-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleRemovingPackage('plugin', event);\n}); // Reinstall plugin\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-plugin-action=\"reinstall-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleReinstallPackage('plugin', event);\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-plugin-action=\"remove-dependency-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleRemovingDependency('plugin', event);\n}); // Trigger the add new plugin / update plugin modal\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-plugin-action=\"start-package-installation\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleGettingPackageDependencies('plugin', event, 'install');\n}); // Trigger the update all plugins modal\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-plugin-action=\"start-packages-update\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleGettingPackageDependencies('plugin', event);\n}); // Install a plugin dependencies and the plugin\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-plugin-action=\"install-dependencies-and-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleInstallingDependenciesAndPackage('plugin', event);\n}); // Install a plugin\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-plugin-action=\"install-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleInstallingPackage('plugin', event);\n}); // Sort plugins/themes dropdown\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('change', '.sort-actions select', function (event) {\n  var direction = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.sort-actions .sort-icon .fa').hasClass('fa-sort-amount-desc') ? 'desc' : 'asc';\n  var sorting = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).val();\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Sort[mout_string_camelCase__WEBPACK_IMPORTED_MODULE_2___default()(\"by-\".concat(sorting))](direction);\n}); // Sort plugins/themes icon\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '.sort-icon', function (event) {\n  var icon = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).find('.fa');\n  var current = icon.hasClass('fa-sort-amount-asc') ? 'asc' : 'desc';\n  var opposite = current === 'asc' ? 'desc' : 'asc';\n  icon.removeClass(\"fa-sort-amount-\".concat(current)).addClass(\"fa-sort-amount-\".concat(opposite));\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.sort-actions select').trigger('change');\n}); // Filter plugin/theme\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('input', '[data-gpm-filter]', debounce__WEBPACK_IMPORTED_MODULE_3___default()(function (event) {\n  var value = jquery__WEBPACK_IMPORTED_MODULE_0___default()(jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget)).val();\n  var items = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-gpm-plugin], [data-gpm-theme]');\n  items.hide().filter(function (index, item) {\n    item = jquery__WEBPACK_IMPORTED_MODULE_0___default()(item);\n    return mout_string_contains__WEBPACK_IMPORTED_MODULE_4___default()(item.data('gpm-plugin'), value) || mout_string_contains__WEBPACK_IMPORTED_MODULE_4___default()(item.data('gpm-theme'), value) || mout_string_contains__WEBPACK_IMPORTED_MODULE_4___default()(item.data('gpm-name').toLowerCase(), value.toLowerCase());\n  }).show();\n}, 250));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/plugins/index.js\n");

/***/ }),

/***/ "./app/themes/index.js":
/*!*****************************!*\
  !*** ./app/themes/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_packages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/packages */ \"./app/utils/packages.js\");\n\n // Themes Switcher Warning\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('mousedown', '[data-remodal-target=\"theme-switch-warn\"]', function (event) {\n  var name = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).closest('[data-gpm-theme]').find('.gpm-name a:first').text();\n  var remodal = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.remodal.theme-switcher');\n  remodal.find('strong').text(name);\n  remodal.find('.button.continue').attr('href', jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).attr('href'));\n}); // Removing theme\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-theme-action=\"remove-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleRemovingPackage('theme', event);\n}); // Reinstall theme\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-theme-action=\"reinstall-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleReinstallPackage('theme', event);\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-theme-action=\"remove-dependency-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleRemovingDependency('theme', event);\n}); // Opened the add new theme / update theme modal\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-theme-action=\"start-package-installation\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleGettingPackageDependencies('theme', event, 'install');\n}); // Trigger the update all themes modal\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-theme-action=\"start-packages-update\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleGettingPackageDependencies('theme', event);\n}); // Install a theme dependencies and the theme\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-theme-action=\"install-dependencies-and-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleInstallingDependenciesAndPackage('theme', event);\n}); // Install a theme\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-theme-action=\"install-package\"]', function (event) {\n  _utils_packages__WEBPACK_IMPORTED_MODULE_1__[\"default\"].handleInstallingPackage('theme', event);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdGhlbWVzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtDQUdBOztBQUNBQSw2Q0FBQyxDQUFDRSxRQUFELENBQUQsQ0FBWUMsRUFBWixDQUFlLFdBQWYsRUFBNEIsMkNBQTVCLEVBQXlFLFVBQUNDLEtBQUQsRUFBVztBQUNoRixNQUFJQyxJQUFJLEdBQUdMLDZDQUFDLENBQUNJLEtBQUssQ0FBQ0UsTUFBUCxDQUFELENBQWdCQyxPQUFoQixDQUF3QixrQkFBeEIsRUFBNENDLElBQTVDLENBQWlELG1CQUFqRCxFQUFzRUMsSUFBdEUsRUFBWDtBQUNBLE1BQUlDLE9BQU8sR0FBR1YsNkNBQUMsQ0FBQyx5QkFBRCxDQUFmO0FBRUFVLEVBQUFBLE9BQU8sQ0FBQ0YsSUFBUixDQUFhLFFBQWIsRUFBdUJDLElBQXZCLENBQTRCSixJQUE1QjtBQUNBSyxFQUFBQSxPQUFPLENBQUNGLElBQVIsQ0FBYSxrQkFBYixFQUFpQ0csSUFBakMsQ0FBc0MsTUFBdEMsRUFBOENYLDZDQUFDLENBQUNJLEtBQUssQ0FBQ0UsTUFBUCxDQUFELENBQWdCSyxJQUFoQixDQUFxQixNQUFyQixDQUE5QztBQUNILENBTkQsR0FRQTs7QUFDQVgsNkNBQUMsQ0FBQ0UsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLHNDQUF4QixFQUFnRSxVQUFDQyxLQUFELEVBQVc7QUFDdkVILEVBQUFBLDZFQUFBLENBQStCLE9BQS9CLEVBQXdDRyxLQUF4QztBQUNILENBRkQsR0FJQTs7QUFDQUosNkNBQUMsQ0FBQ0UsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLHlDQUF4QixFQUFtRSxVQUFDQyxLQUFELEVBQVc7QUFDMUVILEVBQUFBLDhFQUFBLENBQWdDLE9BQWhDLEVBQXlDRyxLQUF6QztBQUNILENBRkQ7QUFJQUosNkNBQUMsQ0FBQ0UsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLGlEQUF4QixFQUEyRSxVQUFDQyxLQUFELEVBQVc7QUFDbEZILEVBQUFBLGdGQUFBLENBQWtDLE9BQWxDLEVBQTJDRyxLQUEzQztBQUNILENBRkQsR0FJQTs7QUFDQUosNkNBQUMsQ0FBQ0UsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLGtEQUF4QixFQUE0RSxVQUFDQyxLQUFELEVBQVc7QUFDbkZILEVBQUFBLHdGQUFBLENBQTBDLE9BQTFDLEVBQW1ERyxLQUFuRCxFQUEwRCxTQUExRDtBQUNILENBRkQsR0FJQTs7QUFDQUosNkNBQUMsQ0FBQ0UsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLDZDQUF4QixFQUF1RSxVQUFDQyxLQUFELEVBQVc7QUFDOUVILEVBQUFBLHdGQUFBLENBQTBDLE9BQTFDLEVBQW1ERyxLQUFuRDtBQUNILENBRkQsR0FJQTs7QUFDQUosNkNBQUMsQ0FBQ0UsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLHdEQUF4QixFQUFrRixVQUFDQyxLQUFELEVBQVc7QUFDekZILEVBQUFBLDhGQUFBLENBQWdELE9BQWhELEVBQXlERyxLQUF6RDtBQUNILENBRkQsR0FJQTs7QUFDQUosNkNBQUMsQ0FBQ0UsUUFBRCxDQUFELENBQVlDLEVBQVosQ0FBZSxPQUFmLEVBQXdCLHVDQUF4QixFQUFpRSxVQUFDQyxLQUFELEVBQVc7QUFDeEVILEVBQUFBLCtFQUFBLENBQWlDLE9BQWpDLEVBQTBDRyxLQUExQztBQUNILENBRkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3RoZW1lcy9pbmRleC5qcz8zNDc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgcGFja2FnZXMgZnJvbSAnLi4vdXRpbHMvcGFja2FnZXMnO1xuXG4vLyBUaGVtZXMgU3dpdGNoZXIgV2FybmluZ1xuJChkb2N1bWVudCkub24oJ21vdXNlZG93bicsICdbZGF0YS1yZW1vZGFsLXRhcmdldD1cInRoZW1lLXN3aXRjaC13YXJuXCJdJywgKGV2ZW50KSA9PiB7XG4gICAgbGV0IG5hbWUgPSAkKGV2ZW50LnRhcmdldCkuY2xvc2VzdCgnW2RhdGEtZ3BtLXRoZW1lXScpLmZpbmQoJy5ncG0tbmFtZSBhOmZpcnN0JykudGV4dCgpO1xuICAgIGxldCByZW1vZGFsID0gJCgnLnJlbW9kYWwudGhlbWUtc3dpdGNoZXInKTtcblxuICAgIHJlbW9kYWwuZmluZCgnc3Ryb25nJykudGV4dChuYW1lKTtcbiAgICByZW1vZGFsLmZpbmQoJy5idXR0b24uY29udGludWUnKS5hdHRyKCdocmVmJywgJChldmVudC50YXJnZXQpLmF0dHIoJ2hyZWYnKSk7XG59KTtcblxuLy8gUmVtb3ZpbmcgdGhlbWVcbiQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdbZGF0YS10aGVtZS1hY3Rpb249XCJyZW1vdmUtcGFja2FnZVwiXScsIChldmVudCkgPT4ge1xuICAgIHBhY2thZ2VzLmhhbmRsZVJlbW92aW5nUGFja2FnZSgndGhlbWUnLCBldmVudCk7XG59KTtcblxuLy8gUmVpbnN0YWxsIHRoZW1lXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCAnW2RhdGEtdGhlbWUtYWN0aW9uPVwicmVpbnN0YWxsLXBhY2thZ2VcIl0nLCAoZXZlbnQpID0+IHtcbiAgICBwYWNrYWdlcy5oYW5kbGVSZWluc3RhbGxQYWNrYWdlKCd0aGVtZScsIGV2ZW50KTtcbn0pO1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCAnW2RhdGEtdGhlbWUtYWN0aW9uPVwicmVtb3ZlLWRlcGVuZGVuY3ktcGFja2FnZVwiXScsIChldmVudCkgPT4ge1xuICAgIHBhY2thZ2VzLmhhbmRsZVJlbW92aW5nRGVwZW5kZW5jeSgndGhlbWUnLCBldmVudCk7XG59KTtcblxuLy8gT3BlbmVkIHRoZSBhZGQgbmV3IHRoZW1lIC8gdXBkYXRlIHRoZW1lIG1vZGFsXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCAnW2RhdGEtdGhlbWUtYWN0aW9uPVwic3RhcnQtcGFja2FnZS1pbnN0YWxsYXRpb25cIl0nLCAoZXZlbnQpID0+IHtcbiAgICBwYWNrYWdlcy5oYW5kbGVHZXR0aW5nUGFja2FnZURlcGVuZGVuY2llcygndGhlbWUnLCBldmVudCwgJ2luc3RhbGwnKTtcbn0pO1xuXG4vLyBUcmlnZ2VyIHRoZSB1cGRhdGUgYWxsIHRoZW1lcyBtb2RhbFxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ1tkYXRhLXRoZW1lLWFjdGlvbj1cInN0YXJ0LXBhY2thZ2VzLXVwZGF0ZVwiXScsIChldmVudCkgPT4ge1xuICAgIHBhY2thZ2VzLmhhbmRsZUdldHRpbmdQYWNrYWdlRGVwZW5kZW5jaWVzKCd0aGVtZScsIGV2ZW50KTtcbn0pO1xuXG4vLyBJbnN0YWxsIGEgdGhlbWUgZGVwZW5kZW5jaWVzIGFuZCB0aGUgdGhlbWVcbiQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdbZGF0YS10aGVtZS1hY3Rpb249XCJpbnN0YWxsLWRlcGVuZGVuY2llcy1hbmQtcGFja2FnZVwiXScsIChldmVudCkgPT4ge1xuICAgIHBhY2thZ2VzLmhhbmRsZUluc3RhbGxpbmdEZXBlbmRlbmNpZXNBbmRQYWNrYWdlKCd0aGVtZScsIGV2ZW50KTtcbn0pO1xuXG4vLyBJbnN0YWxsIGEgdGhlbWVcbiQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdbZGF0YS10aGVtZS1hY3Rpb249XCJpbnN0YWxsLXBhY2thZ2VcIl0nLCAoZXZlbnQpID0+IHtcbiAgICBwYWNrYWdlcy5oYW5kbGVJbnN0YWxsaW5nUGFja2FnZSgndGhlbWUnLCBldmVudCk7XG59KTtcblxuIl0sIm5hbWVzIjpbIiQiLCJwYWNrYWdlcyIsImRvY3VtZW50Iiwib24iLCJldmVudCIsIm5hbWUiLCJ0YXJnZXQiLCJjbG9zZXN0IiwiZmluZCIsInRleHQiLCJyZW1vZGFsIiwiYXR0ciIsImhhbmRsZVJlbW92aW5nUGFja2FnZSIsImhhbmRsZVJlaW5zdGFsbFBhY2thZ2UiLCJoYW5kbGVSZW1vdmluZ0RlcGVuZGVuY3kiLCJoYW5kbGVHZXR0aW5nUGFja2FnZURlcGVuZGVuY2llcyIsImhhbmRsZUluc3RhbGxpbmdEZXBlbmRlbmNpZXNBbmRQYWNrYWdlIiwiaGFuZGxlSW5zdGFsbGluZ1BhY2thZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app/themes/index.js\n");

/***/ }),

/***/ "./app/tools/index.js":
/*!****************************!*\
  !*** ./app/tools/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _logs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logs */ "./app/tools/logs.js");


/***/ }),

/***/ "./app/tools/logs.js":
/*!***************************!*\
  !*** ./app/tools/logs.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mout_queryString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mout/queryString */ \"./node_modules/mout/queryString.js\");\n/* harmony import */ var mout_queryString__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mout_queryString__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar prepareQuery = function prepareQuery(key, value) {\n  return (0,mout_queryString__WEBPACK_IMPORTED_MODULE_1__.setParam)(__webpack_require__.g.location.href, key, value);\n};\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('change', '.logs-content .block-select select[name]', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var name = target.attr('name');\n  var value = target.val();\n  __webpack_require__.g.location.href = prepareQuery(name, value);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdG9vbHMvbG9ncy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7O0FBRUEsSUFBTUUsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsR0FBRCxFQUFNQyxLQUFOLEVBQWdCO0FBQ2pDLFNBQU9ILDBEQUFRLENBQUNJLHFCQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLElBQWpCLEVBQXVCSixHQUF2QixFQUE0QkMsS0FBNUIsQ0FBZjtBQUNILENBRkQ7O0FBSUFKLDZDQUFDLENBQUNRLFFBQUQsQ0FBRCxDQUFZQyxFQUFaLENBQWUsUUFBZixFQUF5QiwwQ0FBekIsRUFBcUUsVUFBQ0MsS0FBRCxFQUFXO0FBQzVFLE1BQU1DLE1BQU0sR0FBR1gsNkNBQUMsQ0FBQ1UsS0FBSyxDQUFDRSxhQUFQLENBQWhCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHRixNQUFNLENBQUNHLElBQVAsQ0FBWSxNQUFaLENBQWI7QUFDQSxNQUFNVixLQUFLLEdBQUdPLE1BQU0sQ0FBQ0ksR0FBUCxFQUFkO0FBRUFWLEVBQUFBLHFCQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLElBQWhCLEdBQXVCTCxZQUFZLENBQUNXLElBQUQsRUFBT1QsS0FBUCxDQUFuQztBQUNILENBTkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3Rvb2xzL2xvZ3MuanM/N2M0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgc2V0UGFyYW0gfSBmcm9tICdtb3V0L3F1ZXJ5U3RyaW5nJztcblxuY29uc3QgcHJlcGFyZVF1ZXJ5ID0gKGtleSwgdmFsdWUpID0+IHtcbiAgICByZXR1cm4gc2V0UGFyYW0oZ2xvYmFsLmxvY2F0aW9uLmhyZWYsIGtleSwgdmFsdWUpO1xufTtcblxuJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcubG9ncy1jb250ZW50IC5ibG9jay1zZWxlY3Qgc2VsZWN0W25hbWVdJywgKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICBjb25zdCBuYW1lID0gdGFyZ2V0LmF0dHIoJ25hbWUnKTtcbiAgICBjb25zdCB2YWx1ZSA9IHRhcmdldC52YWwoKTtcblxuICAgIGdsb2JhbC5sb2NhdGlvbi5ocmVmID0gcHJlcGFyZVF1ZXJ5KG5hbWUsIHZhbHVlKTtcbn0pO1xuIl0sIm5hbWVzIjpbIiQiLCJzZXRQYXJhbSIsInByZXBhcmVRdWVyeSIsImtleSIsInZhbHVlIiwiZ2xvYmFsIiwibG9jYXRpb24iLCJocmVmIiwiZG9jdW1lbnQiLCJvbiIsImV2ZW50IiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIm5hbWUiLCJhdHRyIiwidmFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/tools/logs.js\n");

/***/ }),

/***/ "./app/updates/channel-switcher.js":
/*!*****************************************!*\
  !*** ./app/updates/channel-switcher.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\n\n\nvar switcher = jquery__WEBPACK_IMPORTED_MODULE_0___default()('input[type=\"radio\"][name=\"channel-switch\"]');\n\nif (switcher) {\n  switcher.on('change', function (event) {\n    var radio = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n    var url = \"\".concat(radio.parent('[data-url]').data('url'));\n    (0,_utils_request__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(url, {\n      method: 'post',\n      body: {\n        task: 'gpmRelease',\n        release: radio.val()\n      }\n    }, function (response) {\n      if (response.reload) {\n        __webpack_require__.g.location.reload();\n      }\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXBkYXRlcy9jaGFubmVsLXN3aXRjaGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBRUEsSUFBTUUsUUFBUSxHQUFHRiw2Q0FBQyxDQUFDLDRDQUFELENBQWxCOztBQUVBLElBQUlFLFFBQUosRUFBYztBQUNWQSxFQUFBQSxRQUFRLENBQUNDLEVBQVQsQ0FBWSxRQUFaLEVBQXNCLFVBQUNDLEtBQUQsRUFBVztBQUM3QixRQUFJQyxLQUFLLEdBQUdMLDZDQUFDLENBQUNJLEtBQUssQ0FBQ0UsTUFBUCxDQUFiO0FBQ0EsUUFBSUMsR0FBRyxhQUFNRixLQUFLLENBQUNHLE1BQU4sQ0FBYSxZQUFiLEVBQTJCQyxJQUEzQixDQUFnQyxLQUFoQyxDQUFOLENBQVA7QUFFQVIsSUFBQUEsMERBQU8sQ0FBQ00sR0FBRCxFQUFNO0FBQ1RHLE1BQUFBLE1BQU0sRUFBRSxNQURDO0FBRVRDLE1BQUFBLElBQUksRUFBRTtBQUNGQyxRQUFBQSxJQUFJLEVBQUUsWUFESjtBQUVGQyxRQUFBQSxPQUFPLEVBQUVSLEtBQUssQ0FBQ1MsR0FBTjtBQUZQO0FBRkcsS0FBTixFQU9QLFVBQUNDLFFBQUQsRUFBYztBQUNWLFVBQUlBLFFBQVEsQ0FBQ0MsTUFBYixFQUFxQjtBQUNqQkMsUUFBQUEscUJBQU0sQ0FBQ0MsUUFBUCxDQUFnQkYsTUFBaEI7QUFDSDtBQUNKLEtBWE0sQ0FBUDtBQVlILEdBaEJEO0FBaUJIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC91cGRhdGVzL2NoYW5uZWwtc3dpdGNoZXIuanM/Mzk3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi4vdXRpbHMvcmVxdWVzdCc7XG5cbmNvbnN0IHN3aXRjaGVyID0gJCgnaW5wdXRbdHlwZT1cInJhZGlvXCJdW25hbWU9XCJjaGFubmVsLXN3aXRjaFwiXScpO1xuXG5pZiAoc3dpdGNoZXIpIHtcbiAgICBzd2l0Y2hlci5vbignY2hhbmdlJywgKGV2ZW50KSA9PiB7XG4gICAgICAgIGxldCByYWRpbyA9ICQoZXZlbnQudGFyZ2V0KTtcbiAgICAgICAgbGV0IHVybCA9IGAke3JhZGlvLnBhcmVudCgnW2RhdGEtdXJsXScpLmRhdGEoJ3VybCcpfWA7XG5cbiAgICAgICAgcmVxdWVzdCh1cmwsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICAgICAgYm9keToge1xuICAgICAgICAgICAgICAgIHRhc2s6ICdncG1SZWxlYXNlJyxcbiAgICAgICAgICAgICAgICByZWxlYXNlOiByYWRpby52YWwoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5yZWxvYWQpIHtcbiAgICAgICAgICAgICAgICBnbG9iYWwubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbIiQiLCJyZXF1ZXN0Iiwic3dpdGNoZXIiLCJvbiIsImV2ZW50IiwicmFkaW8iLCJ0YXJnZXQiLCJ1cmwiLCJwYXJlbnQiLCJkYXRhIiwibWV0aG9kIiwiYm9keSIsInRhc2siLCJyZWxlYXNlIiwidmFsIiwicmVzcG9uc2UiLCJyZWxvYWQiLCJnbG9iYWwiLCJsb2NhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/updates/channel-switcher.js\n");

/***/ }),

/***/ "./app/updates/check.js":
/*!******************************!*\
  !*** ./app/updates/check.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_gpm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/gpm */ \"./app/utils/gpm.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/toastr */ \"./app/utils/toastr.js\");\n\n\n\n // Check for updates trigger\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-gpm-checkupdates]').on('click', function () {\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n  element.find('i').addClass('fa-spin');\n  _utils_gpm__WEBPACK_IMPORTED_MODULE_1__.Instance.fetch(function (response) {\n    element.find('i').removeClass('fa-spin');\n    var payload = response.payload;\n\n    if (!payload) {\n      return;\n    }\n\n    if (!payload.grav.isUpdatable && !payload.resources.total) {\n      _utils_toastr__WEBPACK_IMPORTED_MODULE_3__[\"default\"].success(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.EVERYTHING_UP_TO_DATE);\n    } else {\n      var grav = payload.grav.isUpdatable ? 'Grav v' + payload.grav.available : '';\n      var resources = payload.resources.total ? payload.resources.total + ' ' + grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.UPDATES_ARE_AVAILABLE : '';\n\n      if (!resources) {\n        grav += ' ' + grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.IS_AVAILABLE_FOR_UPDATE;\n      }\n\n      _utils_toastr__WEBPACK_IMPORTED_MODULE_3__[\"default\"].info(grav + (grav && resources ? ' ' + grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.AND + ' ' : '') + resources);\n    }\n  }, true);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXBkYXRlcy9jaGVjay5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0NBR0E7O0FBQ0FBLDZDQUFDLENBQUMseUJBQUQsQ0FBRCxDQUE2QkssRUFBN0IsQ0FBZ0MsT0FBaEMsRUFBeUMsWUFBVztBQUNoRCxNQUFJQyxPQUFPLEdBQUdOLDZDQUFDLENBQUMsSUFBRCxDQUFmO0FBQ0FNLEVBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLEdBQWIsRUFBa0JDLFFBQWxCLENBQTJCLFNBQTNCO0FBRUFOLEVBQUFBLHNEQUFBLENBQVUsVUFBQ1EsUUFBRCxFQUFjO0FBQ3BCSixJQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxHQUFiLEVBQWtCSSxXQUFsQixDQUE4QixTQUE5QjtBQUNBLFFBQUlDLE9BQU8sR0FBR0YsUUFBUSxDQUFDRSxPQUF2Qjs7QUFFQSxRQUFJLENBQUNBLE9BQUwsRUFBYztBQUFFO0FBQVM7O0FBQ3pCLFFBQUksQ0FBQ0EsT0FBTyxDQUFDQyxJQUFSLENBQWFDLFdBQWQsSUFBNkIsQ0FBQ0YsT0FBTyxDQUFDRyxTQUFSLENBQWtCQyxLQUFwRCxFQUEyRDtBQUN2RFosTUFBQUEsNkRBQUEsQ0FBZUQsd0ZBQWY7QUFDSCxLQUZELE1BRU87QUFDSCxVQUFJVSxJQUFJLEdBQUdELE9BQU8sQ0FBQ0MsSUFBUixDQUFhQyxXQUFiLEdBQTJCLFdBQVdGLE9BQU8sQ0FBQ0MsSUFBUixDQUFhTyxTQUFuRCxHQUErRCxFQUExRTtBQUNBLFVBQUlMLFNBQVMsR0FBR0gsT0FBTyxDQUFDRyxTQUFSLENBQWtCQyxLQUFsQixHQUEwQkosT0FBTyxDQUFDRyxTQUFSLENBQWtCQyxLQUFsQixHQUEwQixHQUExQixHQUFnQ2Isd0ZBQTFELEdBQTRHLEVBQTVIOztBQUVBLFVBQUksQ0FBQ1ksU0FBTCxFQUFnQjtBQUFFRixRQUFBQSxJQUFJLElBQUksTUFBTVYsMEZBQWQ7QUFBa0U7O0FBQ3BGQyxNQUFBQSwwREFBQSxDQUFZUyxJQUFJLElBQUlBLElBQUksSUFBSUUsU0FBUixHQUFvQixNQUFNWixzRUFBTixHQUFzQyxHQUExRCxHQUFnRSxFQUFwRSxDQUFKLEdBQThFWSxTQUExRjtBQUNIO0FBQ0osR0FkRCxFQWNHLElBZEg7QUFlSCxDQW5CRCIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvdXBkYXRlcy9jaGVjay5qcz8zNDA5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgeyBJbnN0YW5jZSBhcyBncG0gfSBmcm9tICcuLi91dGlscy9ncG0nO1xuaW1wb3J0IHsgdHJhbnNsYXRpb25zIH0gZnJvbSAnZ3Jhdi1jb25maWcnO1xuaW1wb3J0IHRvYXN0ciBmcm9tICcuLi91dGlscy90b2FzdHInO1xuXG4vLyBDaGVjayBmb3IgdXBkYXRlcyB0cmlnZ2VyXG4kKCdbZGF0YS1ncG0tY2hlY2t1cGRhdGVzXScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgIGxldCBlbGVtZW50ID0gJCh0aGlzKTtcbiAgICBlbGVtZW50LmZpbmQoJ2knKS5hZGRDbGFzcygnZmEtc3BpbicpO1xuXG4gICAgZ3BtLmZldGNoKChyZXNwb25zZSkgPT4ge1xuICAgICAgICBlbGVtZW50LmZpbmQoJ2knKS5yZW1vdmVDbGFzcygnZmEtc3BpbicpO1xuICAgICAgICBsZXQgcGF5bG9hZCA9IHJlc3BvbnNlLnBheWxvYWQ7XG5cbiAgICAgICAgaWYgKCFwYXlsb2FkKSB7IHJldHVybjsgfVxuICAgICAgICBpZiAoIXBheWxvYWQuZ3Jhdi5pc1VwZGF0YWJsZSAmJiAhcGF5bG9hZC5yZXNvdXJjZXMudG90YWwpIHtcbiAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKHRyYW5zbGF0aW9ucy5QTFVHSU5fQURNSU4uRVZFUllUSElOR19VUF9UT19EQVRFKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBncmF2ID0gcGF5bG9hZC5ncmF2LmlzVXBkYXRhYmxlID8gJ0dyYXYgdicgKyBwYXlsb2FkLmdyYXYuYXZhaWxhYmxlIDogJyc7XG4gICAgICAgICAgICB2YXIgcmVzb3VyY2VzID0gcGF5bG9hZC5yZXNvdXJjZXMudG90YWwgPyBwYXlsb2FkLnJlc291cmNlcy50b3RhbCArICcgJyArIHRyYW5zbGF0aW9ucy5QTFVHSU5fQURNSU4uVVBEQVRFU19BUkVfQVZBSUxBQkxFIDogJyc7XG5cbiAgICAgICAgICAgIGlmICghcmVzb3VyY2VzKSB7IGdyYXYgKz0gJyAnICsgdHJhbnNsYXRpb25zLlBMVUdJTl9BRE1JTi5JU19BVkFJTEFCTEVfRk9SX1VQREFURTsgfVxuICAgICAgICAgICAgdG9hc3RyLmluZm8oZ3JhdiArIChncmF2ICYmIHJlc291cmNlcyA/ICcgJyArIHRyYW5zbGF0aW9ucy5QTFVHSU5fQURNSU4uQU5EICsgJyAnIDogJycpICsgcmVzb3VyY2VzKTtcbiAgICAgICAgfVxuICAgIH0sIHRydWUpO1xufSk7XG4iXSwibmFtZXMiOlsiJCIsIkluc3RhbmNlIiwiZ3BtIiwidHJhbnNsYXRpb25zIiwidG9hc3RyIiwib24iLCJlbGVtZW50IiwiZmluZCIsImFkZENsYXNzIiwiZmV0Y2giLCJyZXNwb25zZSIsInJlbW92ZUNsYXNzIiwicGF5bG9hZCIsImdyYXYiLCJpc1VwZGF0YWJsZSIsInJlc291cmNlcyIsInRvdGFsIiwic3VjY2VzcyIsIlBMVUdJTl9BRE1JTiIsIkVWRVJZVEhJTkdfVVBfVE9fREFURSIsImF2YWlsYWJsZSIsIlVQREFURVNfQVJFX0FWQUlMQUJMRSIsIklTX0FWQUlMQUJMRV9GT1JfVVBEQVRFIiwiaW5mbyIsIkFORCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/updates/check.js\n");

/***/ }),

/***/ "./app/updates/feed.js":
/*!*****************************!*\
  !*** ./app/updates/feed.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar URI = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/ajax.json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"getNewsFeed\");\n\nvar Feed = /*#__PURE__*/function () {\n  function Feed() {\n    _classCallCheck(this, Feed);\n\n    this.data = null;\n  }\n\n  _createClass(Feed, [{\n    key: \"fetch\",\n    value: function fetch() {\n      var _this = this;\n\n      var refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(URI, {\n        method: 'post',\n        body: {\n          refresh: refresh\n        }\n      }, function (response) {\n        _this.data = response;\n        callback(response);\n      });\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var feed = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#news-feed .widget-content');\n\n      if (!feed.length) {\n        return;\n      }\n\n      var loader = feed.find('.widget-loader');\n      loader.find('div').remove();\n      loader.find('.fa-warning').removeClass('fa-warning').addClass('fa-refresh fa-spin');\n      loader.show();\n      feed.find('> ul').hide();\n\n      if (!this.data || this.data.error || _refresh) {\n        this.fetch(_refresh, this.updateContent.bind(this));\n      } else {\n        this.updateContent();\n      }\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent() {\n      var feed = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#news-feed .widget-content');\n\n      if (!feed.length) {\n        return;\n      }\n\n      var loader = feed.find('.widget-loader').hide();\n      var content = feed.find('> ul').empty().show();\n\n      if (this.data.error || this.data.status === 'error') {\n        loader.show().find('div').remove();\n        loader.find('.fa-refresh').removeClass('fa-refresh fa-spin').addClass('fa-warning');\n        loader.append(\"<div>\".concat(this.data.error ? this.data.error.message : this.data.message || 'Unable to download news feed', \"</div>\"));\n        return;\n      }\n\n      if (this.data && this.data.feed_data) {\n        content.append(this.data.feed_data);\n      }\n    }\n  }]);\n\n  return Feed;\n}();\n\nvar feed = new Feed();\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {\n  return feed.refresh();\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-refresh=\"feed\"]', function (event) {\n  event.preventDefault();\n  feed.refresh(true);\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (feed);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VXdCLFNBQTNCLEVBQXNDO0FBQ2xDTCxRQUFBQSxPQUFPLENBQUNHLE1BQVIsQ0FBZSxLQUFLdEIsSUFBTCxDQUFVd0IsU0FBekI7QUFDSDtBQUNKOzs7Ozs7QUFHTCxJQUFJbEIsSUFBSSxHQUFHLElBQUlQLElBQUosRUFBWDtBQUNBTiw2Q0FBQyxDQUFDZ0MsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0I7QUFBQSxTQUFNcEIsSUFBSSxDQUFDTCxPQUFMLEVBQU47QUFBQSxDQUFsQjtBQUNBUiw2Q0FBQyxDQUFDZ0MsUUFBRCxDQUFELENBQVlFLEVBQVosQ0FBZSxPQUFmLEVBQXdCLHVCQUF4QixFQUFpRCxVQUFDQyxLQUFELEVBQVc7QUFDeERBLEVBQUFBLEtBQUssQ0FBQ0MsY0FBTjtBQUNBdkIsRUFBQUEsSUFBSSxDQUFDTCxPQUFMLENBQWEsSUFBYjtBQUNILENBSEQ7QUFLQSxpRUFBZUssSUFBZiIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvdXBkYXRlcy9mZWVkLmpzP2YxNWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJ2dyYXYtY29uZmlnJztcbmltcG9ydCByZXF1ZXN0IGZyb20gJy4uL3V0aWxzL3JlcXVlc3QnO1xuXG5jb25zdCBVUkkgPSBgJHtjb25maWcuYmFzZV91cmxfcmVsYXRpdmV9L2FqYXguanNvbi90YXNrJHtjb25maWcucGFyYW1fc2VwfWdldE5ld3NGZWVkYDtcblxuY2xhc3MgRmVlZCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IG51bGw7XG4gICAgfVxuXG4gICAgZmV0Y2gocmVmcmVzaCA9IGZhbHNlLCBjYWxsYmFjayA9IGZ1bmN0aW9uKCkge30pIHtcbiAgICAgICAgcmVxdWVzdChVUkksIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICAgICAgYm9keTogeyByZWZyZXNoIH1cbiAgICAgICAgfSwgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRhdGEgPSByZXNwb25zZTtcbiAgICAgICAgICAgIGNhbGxiYWNrKHJlc3BvbnNlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVmcmVzaChyZWZyZXNoID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgZmVlZCA9ICQoJyNuZXdzLWZlZWQgLndpZGdldC1jb250ZW50Jyk7XG4gICAgICAgIGlmICghZmVlZC5sZW5ndGgpIHsgcmV0dXJuOyB9XG5cbiAgICAgICAgbGV0IGxvYWRlciA9IGZlZWQuZmluZCgnLndpZGdldC1sb2FkZXInKTtcbiAgICAgICAgbG9hZGVyLmZpbmQoJ2RpdicpLnJlbW92ZSgpO1xuICAgICAgICBsb2FkZXIuZmluZCgnLmZhLXdhcm5pbmcnKS5yZW1vdmVDbGFzcygnZmEtd2FybmluZycpLmFkZENsYXNzKCdmYS1yZWZyZXNoIGZhLXNwaW4nKTtcbiAgICAgICAgbG9hZGVyLnNob3coKTtcblxuICAgICAgICBmZWVkLmZpbmQoJz4gdWwnKS5oaWRlKCk7XG5cbiAgICAgICAgaWYgKCF0aGlzLmRhdGEgfHwgdGhpcy5kYXRhLmVycm9yIHx8IHJlZnJlc2gpIHtcbiAgICAgICAgICAgIHRoaXMuZmV0Y2gocmVmcmVzaCwgdGhpcy51cGRhdGVDb250ZW50LmJpbmQodGhpcykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVDb250ZW50KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1cGRhdGVDb250ZW50KCkge1xuICAgICAgICBjb25zdCBmZWVkID0gJCgnI25ld3MtZmVlZCAud2lkZ2V0LWNvbnRlbnQnKTtcbiAgICAgICAgaWYgKCFmZWVkLmxlbmd0aCkgeyByZXR1cm47IH1cblxuICAgICAgICBsZXQgbG9hZGVyID0gZmVlZC5maW5kKCcud2lkZ2V0LWxvYWRlcicpLmhpZGUoKTtcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBmZWVkLmZpbmQoJz4gdWwnKS5lbXB0eSgpLnNob3coKTtcblxuICAgICAgICBpZiAodGhpcy5kYXRhLmVycm9yIHx8IHRoaXMuZGF0YS5zdGF0dXMgPT09ICdlcnJvcicpIHtcbiAgICAgICAgICAgIGxvYWRlci5zaG93KCkuZmluZCgnZGl2JykucmVtb3ZlKCk7XG4gICAgICAgICAgICBsb2FkZXIuZmluZCgnLmZhLXJlZnJlc2gnKS5yZW1vdmVDbGFzcygnZmEtcmVmcmVzaCBmYS1zcGluJykuYWRkQ2xhc3MoJ2ZhLXdhcm5pbmcnKTtcbiAgICAgICAgICAgIGxvYWRlci5hcHBlbmQoYDxkaXY+JHt0aGlzLmRhdGEuZXJyb3IgPyB0aGlzLmRhdGEuZXJyb3IubWVzc2FnZSA6IHRoaXMuZGF0YS5tZXNzYWdlIHx8ICdVbmFibGUgdG8gZG93bmxvYWQgbmV3cyBmZWVkJ308L2Rpdj5gKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuZGF0YSAmJiB0aGlzLmRhdGEuZmVlZF9kYXRhKSB7XG4gICAgICAgICAgICBjb250ZW50LmFwcGVuZCh0aGlzLmRhdGEuZmVlZF9kYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxubGV0IGZlZWQgPSBuZXcgRmVlZCgpO1xuJChkb2N1bWVudCkucmVhZHkoKCkgPT4gZmVlZC5yZWZyZXNoKCkpO1xuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ1tkYXRhLXJlZnJlc2g9XCJmZWVkXCJdJywgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBmZWVkLnJlZnJlc2godHJ1ZSk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZmVlZDtcbiJdLCJuYW1lcyI6WyIkIiwiY29uZmlnIiwicmVxdWVzdCIsIlVSSSIsImJhc2VfdXJsX3JlbGF0aXZlIiwicGFyYW1fc2VwIiwiRmVlZCIsImRhdGEiLCJyZWZyZXNoIiwiY2FsbGJhY2siLCJtZXRob2QiLCJib2R5IiwicmVzcG9uc2UiLCJmZWVkIiwibGVuZ3RoIiwibG9hZGVyIiwiZmluZCIsInJlbW92ZSIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJzaG93IiwiaGlkZSIsImVycm9yIiwiZmV0Y2giLCJ1cGRhdGVDb250ZW50IiwiYmluZCIsImNvbnRlbnQiLCJlbXB0eSIsInN0YXR1cyIsImFwcGVuZCIsIm1lc3NhZ2UiLCJmZWVkX2RhdGEiLCJkb2N1bWVudCIsInJlYWR5Iiwib24iLCJldmVudCIsInByZXZlbnREZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/updates/feed.js\n");

/***/ }),

/***/ "./app/updates/index.js":
/*!******************************!*\
  !*** ./app/updates/index.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Updates),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance),\n/* harmony export */   \"Notifications\": () => (/* reexport safe */ _notifications__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   \"Feed\": () => (/* reexport safe */ _feed__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mout_array_unique__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mout/array/unique */ \"./node_modules/mout/array/unique.js\");\n/* harmony import */ var mout_array_unique__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mout_array_unique__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_gpm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/gpm */ \"./app/utils/gpm.js\");\n/* harmony import */ var _notifications__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notifications */ \"./app/updates/notifications.js\");\n/* harmony import */ var _feed__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./feed */ \"./app/updates/feed.js\");\n/* harmony import */ var _check__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./check */ \"./app/updates/check.js\");\n/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./update */ \"./app/updates/update.js\");\n/* harmony import */ var _channel_switcher__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./channel-switcher */ \"./app/updates/channel-switcher.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\nvar Updates = /*#__PURE__*/function () {\n  function Updates() {\n    var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Updates);\n\n    this.setPayload(payload);\n    this.task = \"task\".concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.config.param_sep);\n    this.updateURL = '';\n  }\n\n  _createClass(Updates, [{\n    key: \"setPayload\",\n    value: function setPayload() {\n      var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.payload = payload;\n      return this;\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch() {\n      var _this = this;\n\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _utils_gpm__WEBPACK_IMPORTED_MODULE_3__.Instance.fetch(function (response) {\n        return _this.setPayload(response);\n      }, force);\n      return this;\n    }\n  }, {\n    key: \"maintenance\",\n    value: function maintenance() {\n      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'hide';\n      var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#updates [data-update-packages]');\n      element[mode === 'show' ? 'fadeIn' : 'fadeOut']();\n\n      if (mode === 'hide') {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.badges.with-updates').removeClass('with-updates').find('.badge.updates').remove();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"grav\",\n    value: function grav() {\n      var payload = this.payload.grav;\n\n      if (payload && payload.isUpdatable) {\n        var task = this.task;\n        var bar = '';\n\n        if (!payload.isSymlink) {\n          this.updateURL = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.config.base_url_relative, \"/update.json/\").concat(task, \"updategrav/admin-nonce\").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.config.param_sep).concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.config.admin_nonce);\n          bar += \"<button data-remodal-target=\\\"update-grav\\\" class=\\\"button button-small secondary pointer-events-none\\\" id=\\\"grav-update-button\\\">\".concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.UPDATE_GRAV_NOW, \" <span class=\\\"cnt-down\\\">(5s)</span></button>\");\n        } else {\n          bar += \"<span class=\\\"hint--left\\\" style=\\\"float: right;\\\" data-hint=\\\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.GRAV_SYMBOLICALLY_LINKED, \"\\\"><i class=\\\"fa fa-fw fa-link\\\"></i></span>\");\n        }\n\n        bar += \"\\n                Grav <b>v\".concat(payload.available, \"</b> \").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.IS_NOW_AVAILABLE, \"! <span class=\\\"less\\\">(\").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.CURRENT, \" v\").concat(payload.version, \")</span>\\n            \");\n        var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-gpm-grav]').removeClass('hidden');\n\n        if (element.is(':empty')) {\n          element.hide();\n        }\n\n        element.addClass('grav').html(\"\".concat(bar)).slideDown(150, function () {\n          var c = 5;\n          var x = setInterval(function () {\n            c -= 1;\n            element.find('.pointer-events-none .cnt-down').text('(' + c + 's)');\n          }, 1000);\n          setTimeout(function () {\n            clearInterval(x);\n            element.find('.pointer-events-none .cnt-down').remove();\n            element.find('.pointer-events-none').removeClass('pointer-events-none');\n          }, 5000);\n        }).parent('#messages').addClass('default-box-shadow');\n      }\n\n      return this;\n    }\n  }, {\n    key: \"resources\",\n    value: function resources() {\n      if (!this.payload || !this.payload.resources || !this.payload.resources.total) {\n        return this.maintenance('hide');\n      }\n\n      var is_current_package_latest = true;\n      var map = ['plugins', 'themes'];\n      var singles = ['plugin', 'theme'];\n      var _this$payload$resourc = this.payload.resources,\n          plugins = _this$payload$resourc.plugins,\n          themes = _this$payload$resourc.themes;\n\n      if (!this.payload.resources.total) {\n        return this;\n      }\n\n      [plugins, themes].forEach(function (resources, index) {\n        if (!resources || Array.isArray(resources)) {\n          return;\n        }\n\n        var length = Object.keys(resources).length;\n        var type = map[index]; // sidebar\n\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#admin-menu a[href$=\\\"/\".concat(map[index], \"\\\"]\")).find('.badges').addClass('with-updates').find('.badge.updates').text(length);\n        var type_translation = ''; // update all\n\n        if (type === 'plugins') {\n          type_translation = grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.PLUGINS;\n        } else {\n          type_translation = grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.THEMES;\n        }\n\n        var updateAll = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".grav-update.\".concat(type));\n        updateAll.css('display', 'block').html(\"\\n            <p>\\n                <a href=\\\"#\\\" class=\\\"button button-small secondary\\\" data-remodal-target=\\\"update-packages\\\" data-packages-slugs=\\\"\".concat(Object.keys(resources).join(), \"\\\" data-\").concat(singles[index], \"-action=\\\"start-packages-update\\\">\").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.UPDATE, \" \").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.ALL, \" \").concat(type_translation, \"</a>\\n                <i class=\\\"fa fa-bullhorn\\\"></i>\\n                \").concat(length, \" \").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.OF_YOUR, \" \").concat(type_translation.toLowerCase(), \" \").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.HAVE_AN_UPDATE_AVAILABLE, \"\\n            </p>\\n            \"));\n        var existing_slugs = jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-update-packages]').attr('data-packages-slugs') || '';\n\n        if (existing_slugs) {\n          existing_slugs = existing_slugs.split(',');\n        } else {\n          existing_slugs = [];\n        }\n\n        var slugs = mout_array_unique__WEBPACK_IMPORTED_MODULE_1___default()(existing_slugs.concat(Object.keys(resources))).join();\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-update-packages]').attr('data-packages-slugs', \"\".concat(slugs));\n        Object.keys(resources).forEach(function (item) {\n          // listing page\n          var container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-gpm-\".concat(singles[index], \"=\\\"\").concat(item, \"\\\"]\"));\n          var element = container.find('.gpm-name');\n          var url = element.find('a');\n          var content_wrapper = container.parents('.content-wrapper');\n\n          if (type === 'plugins' && !element.find('.badge.update').length) {\n            element.append(\"<a class=\\\"plugin-update-button\\\" href=\\\"\".concat(url.attr('href'), \"\\\"><span class=\\\"badge update\\\">\").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.UPDATE_AVAILABLE, \"!</span></a>\"));\n            content_wrapper.addClass('has-updates');\n          } else if (type === 'themes') {\n            element.append(\"<div class=\\\"gpm-ribbon\\\"><a href=\\\"\".concat(url.attr('href'), \"\\\">\").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.UPDATE.toUpperCase(), \"</a></div>\"));\n            content_wrapper.addClass('has-updates');\n          } // details page\n\n\n          if (container.length) {\n            var details = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\".grav-update.\".concat(singles[index]));\n\n            if (details.length) {\n              var releaseType = resources[item].type === 'testing' ? '<span class=\"gpm-testing\">test release</span>' : '';\n              details.html(\"\\n                            <p>\\n                                <a href=\\\"#\\\" class=\\\"button button-small secondary\\\" data-remodal-target=\\\"update-packages\\\" data-packages-slugs=\\\"\".concat(item, \"\\\" data-\").concat(singles[index], \"-action=\\\"start-package-installation\\\">\").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.UPDATE, \" \").concat(singles[index].charAt(0).toUpperCase() + singles[index].substr(1).toLowerCase(), \"</a>\\n                                <i class=\\\"fa fa-bullhorn\\\"></i>\\n                                <strong>v\").concat(resources[item].available, \"</strong> \").concat(releaseType, \" \").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.OF_THIS, \" \").concat(singles[index], \" \").concat(grav_config__WEBPACK_IMPORTED_MODULE_2__.translations.PLUGIN_ADMIN.IS_NOW_AVAILABLE, \"!\\n                            </p>\\n                        \")).css('display', 'block');\n              is_current_package_latest = false;\n            }\n          }\n        });\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-update-packages]').removeClass('hidden');\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.content-wrapper').addClass('updates-checked');\n\n      if (!is_current_package_latest) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('.warning-reinstall-not-latest-release').removeClass('hidden');\n      }\n    }\n  }]);\n\n  return Updates;\n}();\n\n\nvar Instance = new Updates();\n // automatically refresh UI for updates (graph, sidebar, plugin/themes pages) after every fetch\n\n_utils_gpm__WEBPACK_IMPORTED_MODULE_3__.Instance.on('fetched', function (response, raw) {\n  Instance.setPayload(response.payload || {});\n  Instance.grav().resources();\n});\n\nif (grav_config__WEBPACK_IMPORTED_MODULE_2__.config.enable_auto_updates_check === '1') {\n  _utils_gpm__WEBPACK_IMPORTED_MODULE_3__.Instance.fetch();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/updates/index.js\n");

/***/ }),

/***/ "./app/updates/notifications.js":
/*!**************************************!*\
  !*** ./app/updates/notifications.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\nvar canFetchNotifications = function canFetchNotifications() {\n  return grav_config__WEBPACK_IMPORTED_MODULE_1__.config.notifications.enabled;\n};\n\nvar notificationsFilters = function notificationsFilters() {\n  return grav_config__WEBPACK_IMPORTED_MODULE_1__.config.notifications.filters;\n};\n\nvar Notifications = /*#__PURE__*/function () {\n  function Notifications() {\n    _classCallCheck(this, Notifications);\n  }\n\n  _createClass(Notifications, [{\n    key: \"fetch\",\n    value: // Grav.default.Notifications.fetch()\n    function fetch() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$filter = _ref.filter,\n          filter = _ref$filter === void 0 ? notificationsFilters() : _ref$filter,\n          _ref$refresh = _ref.refresh,\n          refresh = _ref$refresh === void 0 ? false : _ref$refresh;\n\n      if (!canFetchNotifications()) {\n        return false;\n      }\n\n      var feed = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#notifications');\n      var loader = feed.find('.widget-loader');\n      var content = feed.find('.widget-content > ul');\n      loader.find('div').remove();\n      loader.find('.fa-warning').removeClass('fa-warning').addClass('fa-refresh fa-spin');\n      loader.show();\n      content.hide();\n\n      var processNotifications = function processNotifications(response) {\n        var notifications = response.notifications;\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('#notifications').find('.widget-content > ul').empty();\n\n        if (notifications) {\n          Object.keys(notifications).forEach(function (location) {\n            return Notifications.processLocation(location, notifications[location]);\n          });\n        }\n      };\n\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"getNotifications\"), {\n        method: 'post',\n        body: {\n          refresh: refresh,\n          filter: filter\n        }\n      }, function (response) {\n        processNotifications(response);\n      })[\"catch\"](function () {\n        var widget = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#notifications .widget-content');\n        widget.find('.widget-loader').find('div').remove();\n        widget.find('.widget-loader').append('<div>Failed to retrieve notifications</div>').find('.fa-spin').removeClass('fa-spin fa-refresh').addClass('fa-warning');\n      });\n    }\n  }], [{\n    key: \"addShowAllInFeed\",\n    value: function addShowAllInFeed() {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#notifications ul').append('<li class=\"show-all\" data-notification-action=\"show-all-notifications\">Show all</li>');\n    }\n  }, {\n    key: \"showNotificationInFeed\",\n    value: function showNotificationInFeed(notification) {\n      var notifications = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#notifications').removeClass('hidden');\n      var loader = notifications.find('.widget-loader').hide();\n      var content = notifications.find('.widget-content > ul').show();\n      loader.find('div').remove();\n      loader.find('.fa-warning').removeClass('fa-warning').addClass('fa-refresh fa-spin');\n      content.append(notification).find('li:nth-child(n+11)').addClass('hidden'); // hide all items > 10\n\n      if (content.find('li.hidden').length) {\n        Notifications.addShowAllInFeed();\n      }\n    }\n  }, {\n    key: \"showNotificationInTop\",\n    value: function showNotificationInTop(notification) {\n      var container = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.top-notifications-container');\n      var dummy = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />').html(notification);\n      container.removeClass('hidden').append(dummy.children());\n      dummy.children().slideDown(150);\n    }\n  }, {\n    key: \"showNotificationInDashboard\",\n    value: function showNotificationInDashboard(notification) {\n      var container = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.dashboard-notifications-container');\n      var dummy = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />').html(notification);\n      container.removeClass('hidden').append(dummy.children());\n      dummy.children().slideDown(150);\n    }\n  }, {\n    key: \"showNotificationInPlugins\",\n    value: function showNotificationInPlugins(notification) {\n      var container = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.plugins-notifications-container');\n      var dummy = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />').html(notification);\n      container.removeClass('hidden').append(dummy.children());\n      dummy.children().slideDown(150);\n    }\n  }, {\n    key: \"showNotificationInThemes\",\n    value: function showNotificationInThemes(notification) {\n      var container = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.themes-notifications-container');\n      var dummy = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />').html(notification);\n      container.removeClass('hidden').append(dummy.children());\n      dummy.children().slideDown(150);\n    }\n  }, {\n    key: \"processLocation\",\n    value: function processLocation(location, notification) {\n      switch (location) {\n        case 'feed':\n          Notifications.showNotificationInFeed(notification);\n          break;\n\n        case 'top':\n          if (!notification.read) {\n            Notifications.showNotificationInTop(notification);\n          }\n\n          break;\n\n        case 'dashboard':\n          if (!notification.read) {\n            Notifications.showNotificationInDashboard(notification);\n          }\n\n          break;\n\n        case 'plugins':\n          if (!notification.read) {\n            Notifications.showNotificationInPlugins(notification);\n          }\n\n          break;\n\n        case 'themes':\n          if (!notification.read) {\n            Notifications.showNotificationInThemes(notification);\n          }\n\n          break;\n      }\n    }\n  }]);\n\n  return Notifications;\n}();\n\nvar notifications = new Notifications();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (notifications);\n\nif (canFetchNotifications()) {\n  notifications.fetch();\n  /* Hide a notification and store it hidden */\n  // <a href=\"#\" data-notification-action=\"hide-notification\" data-notification-id=\"${notification.id}\" class=\"close hide-notification\"><i class=\"fa fa-close\"></i></a>\n\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-notification-action=\"hide-notification\"]', function (event) {\n    var notification_id = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).parents('.hide-notification').data('notification-id');\n    var url = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/notifications.json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"hideNotification/notification_id\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep).concat(notification_id);\n    (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n      method: 'post'\n    }, function () {});\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).parents('.single-notification').hide();\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-notification-action=\"hide-notification\"]', function (event) {\n    var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n    var notification = target.parent();\n    notification.slideUp(function () {\n      return notification.remove();\n    });\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-notification-action=\"show-all-notifications\"]', function (event) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#notifications .show-all').hide();\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('#notifications .hidden').removeClass('hidden');\n  });\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-refresh=\"notifications\"]', function (event) {\n    event.preventDefault();\n    notifications.fetch({\n      filter: ['feed'],\n      refresh: true\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/updates/notifications.js\n");

/***/ }),

/***/ "./app/updates/update.js":
/*!*******************************!*\
  !*** ./app/updates/update.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_formatbytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/formatbytes */ \"./app/utils/formatbytes.js\");\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index */ \"./app/updates/index.js\");\n\n\n\n\n // Dashboard update and Grav update\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click.remodal', '[data-remodal-id=\"update-grav\"] [data-remodal-action=\"confirm\"]', function () {\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#grav-update-button');\n  element.html(\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.UPDATING_PLEASE_WAIT, \" \").concat((0,_utils_formatbytes__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_index__WEBPACK_IMPORTED_MODULE_4__.Instance.payload.grav.assets[\"grav-update\"].size), \"..\"));\n  element.attr('disabled', 'disabled').find('> .fa').removeClass('fa-cloud-download').addClass('fa-refresh fa-spin');\n  (0,_utils_request__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_index__WEBPACK_IMPORTED_MODULE_4__.Instance.updateURL, function (response) {\n    if (response.type === 'updategrav') {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-gpm-grav]').remove();\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('#footer .grav-version').html(response.version);\n    }\n\n    element.removeAttr('disabled').find('> .fa').removeClass('fa-refresh fa-spin').addClass('fa-cloud-download');\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXBkYXRlcy91cGRhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtDQUdBOztBQUNBQSw2Q0FBQyxDQUFDTSxRQUFELENBQUQsQ0FBWUMsRUFBWixDQUFlLGVBQWYsRUFBZ0MsaUVBQWhDLEVBQW1HLFlBQU07QUFDckcsTUFBTUMsT0FBTyxHQUFHUiw2Q0FBQyxDQUFDLHFCQUFELENBQWpCO0FBQ0FRLEVBQUFBLE9BQU8sQ0FBQ0MsSUFBUixXQUFnQlIsdUZBQWhCLGNBQWtFQyw4REFBVyxDQUFDRyxvRkFBRCxDQUE3RTtBQUVBRyxFQUFBQSxPQUFPLENBQUNRLElBQVIsQ0FBYSxVQUFiLEVBQXlCLFVBQXpCLEVBQXFDQyxJQUFyQyxDQUEwQyxPQUExQyxFQUFtREMsV0FBbkQsQ0FBK0QsbUJBQS9ELEVBQW9GQyxRQUFwRixDQUE2RixvQkFBN0Y7QUFFQWhCLEVBQUFBLDBEQUFPLENBQUNFLHNEQUFELEVBQW1CLFVBQUNnQixRQUFELEVBQWM7QUFDcEMsUUFBSUEsUUFBUSxDQUFDQyxJQUFULEtBQWtCLFlBQXRCLEVBQW9DO0FBQ2hDdEIsTUFBQUEsNkNBQUMsQ0FBQyxpQkFBRCxDQUFELENBQXFCdUIsTUFBckI7QUFDQXZCLE1BQUFBLDZDQUFDLENBQUMsdUJBQUQsQ0FBRCxDQUEyQlMsSUFBM0IsQ0FBZ0NZLFFBQVEsQ0FBQ0csT0FBekM7QUFDSDs7QUFFRGhCLElBQUFBLE9BQU8sQ0FBQ2lCLFVBQVIsQ0FBbUIsVUFBbkIsRUFBK0JSLElBQS9CLENBQW9DLE9BQXBDLEVBQTZDQyxXQUE3QyxDQUF5RCxvQkFBekQsRUFBK0VDLFFBQS9FLENBQXdGLG1CQUF4RjtBQUNILEdBUE0sQ0FBUDtBQVFILENBZEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3VwZGF0ZXMvdXBkYXRlLmpzPzQ3NjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSAnanF1ZXJ5JztcbmltcG9ydCB7IHRyYW5zbGF0aW9ucyB9IGZyb20gJ2dyYXYtY29uZmlnJztcbmltcG9ydCBmb3JtYXRCeXRlcyBmcm9tICcuLi91dGlscy9mb3JtYXRieXRlcyc7XG5pbXBvcnQgcmVxdWVzdCBmcm9tICcuLi91dGlscy9yZXF1ZXN0JztcbmltcG9ydCB7IEluc3RhbmNlIGFzIFVwZGF0ZSB9IGZyb20gJy4vaW5kZXgnO1xuXG4vLyBEYXNoYm9hcmQgdXBkYXRlIGFuZCBHcmF2IHVwZGF0ZVxuJChkb2N1bWVudCkub24oJ2NsaWNrLnJlbW9kYWwnLCAnW2RhdGEtcmVtb2RhbC1pZD1cInVwZGF0ZS1ncmF2XCJdIFtkYXRhLXJlbW9kYWwtYWN0aW9uPVwiY29uZmlybVwiXScsICgpID0+IHtcbiAgICBjb25zdCBlbGVtZW50ID0gJCgnI2dyYXYtdXBkYXRlLWJ1dHRvbicpO1xuICAgIGVsZW1lbnQuaHRtbChgJHt0cmFuc2xhdGlvbnMuUExVR0lOX0FETUlOLlVQREFUSU5HX1BMRUFTRV9XQUlUfSAke2Zvcm1hdEJ5dGVzKFVwZGF0ZS5wYXlsb2FkLmdyYXYuYXNzZXRzWydncmF2LXVwZGF0ZSddLnNpemUpfS4uYCk7XG5cbiAgICBlbGVtZW50LmF0dHIoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJykuZmluZCgnPiAuZmEnKS5yZW1vdmVDbGFzcygnZmEtY2xvdWQtZG93bmxvYWQnKS5hZGRDbGFzcygnZmEtcmVmcmVzaCBmYS1zcGluJyk7XG5cbiAgICByZXF1ZXN0KFVwZGF0ZS51cGRhdGVVUkwsIChyZXNwb25zZSkgPT4ge1xuICAgICAgICBpZiAocmVzcG9uc2UudHlwZSA9PT0gJ3VwZGF0ZWdyYXYnKSB7XG4gICAgICAgICAgICAkKCdbZGF0YS1ncG0tZ3Jhdl0nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICQoJyNmb290ZXIgLmdyYXYtdmVyc2lvbicpLmh0bWwocmVzcG9uc2UudmVyc2lvbik7XG4gICAgICAgIH1cblxuICAgICAgICBlbGVtZW50LnJlbW92ZUF0dHIoJ2Rpc2FibGVkJykuZmluZCgnPiAuZmEnKS5yZW1vdmVDbGFzcygnZmEtcmVmcmVzaCBmYS1zcGluJykuYWRkQ2xhc3MoJ2ZhLWNsb3VkLWRvd25sb2FkJyk7XG4gICAgfSk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwidHJhbnNsYXRpb25zIiwiZm9ybWF0Qnl0ZXMiLCJyZXF1ZXN0IiwiSW5zdGFuY2UiLCJVcGRhdGUiLCJkb2N1bWVudCIsIm9uIiwiZWxlbWVudCIsImh0bWwiLCJQTFVHSU5fQURNSU4iLCJVUERBVElOR19QTEVBU0VfV0FJVCIsInBheWxvYWQiLCJncmF2IiwiYXNzZXRzIiwic2l6ZSIsImF0dHIiLCJmaW5kIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsInVwZGF0ZVVSTCIsInJlc3BvbnNlIiwidHlwZSIsInJlbW92ZSIsInZlcnNpb24iLCJyZW1vdmVBdHRyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/updates/update.js\n");

/***/ }),

/***/ "./app/utils/2fa.js":
/*!**************************!*\
  !*** ./app/utils/2fa.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\n\n\n\nvar body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body'); // Dashboard update and Grav update\n\nbody.on('click', '[data-2fa-regenerate]', function (event) {\n  event.preventDefault();\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n  var url = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/ajax.json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"regenerate2FASecret\");\n  element.attr('disabled', 'disabled').find('> .fa').addClass('fa-spin');\n  (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n    method: 'post'\n  }, function (response) {\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-2fa-image]').attr('src', response.image);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-2fa-secret]').text(response.secret);\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-2fa-value]').val(response.secret.replace(' ', ''));\n    element.removeAttr('disabled').find('> .fa').removeClass('fa-spin');\n  });\n});\n\nvar toggleSecret = function toggleSecret() {\n  var toggle = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#toggle_twofa_enabled1');\n  var secret = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.twofa-secret');\n  secret[toggle.is(':checked') ? 'addClass' : 'removeClass']('show');\n};\n\nbody.on('click', '.twofa-toggle input', toggleSecret);\ntoggleSecret();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvMmZhLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBLElBQU1HLElBQUksR0FBR0gsNkNBQUMsQ0FBQyxNQUFELENBQWQsRUFFQTs7QUFDQUcsSUFBSSxDQUFDQyxFQUFMLENBQVEsT0FBUixFQUFpQix1QkFBakIsRUFBMEMsVUFBU0MsS0FBVCxFQUFnQjtBQUN0REEsRUFBQUEsS0FBSyxDQUFDQyxjQUFOO0FBQ0EsTUFBSUMsT0FBTyxHQUFHUCw2Q0FBQyxDQUFDLElBQUQsQ0FBZjtBQUNBLE1BQUlRLEdBQUcsYUFBTVAsaUVBQU4sNEJBQWdEQSx5REFBaEQsd0JBQVA7QUFFQU0sRUFBQUEsT0FBTyxDQUFDSSxJQUFSLENBQWEsVUFBYixFQUF5QixVQUF6QixFQUFxQ0MsSUFBckMsQ0FBMEMsT0FBMUMsRUFBbURDLFFBQW5ELENBQTRELFNBQTVEO0FBRUFYLEVBQUFBLDBEQUFPLENBQUNNLEdBQUQsRUFBTTtBQUFFTSxJQUFBQSxNQUFNLEVBQUU7QUFBVixHQUFOLEVBQTBCLFVBQUNDLFFBQUQsRUFBYztBQUMzQ2YsSUFBQUEsNkNBQUMsQ0FBQyxrQkFBRCxDQUFELENBQXNCVyxJQUF0QixDQUEyQixLQUEzQixFQUFrQ0ksUUFBUSxDQUFDQyxLQUEzQztBQUNBaEIsSUFBQUEsNkNBQUMsQ0FBQyxtQkFBRCxDQUFELENBQXVCaUIsSUFBdkIsQ0FBNEJGLFFBQVEsQ0FBQ0csTUFBckM7QUFDQWxCLElBQUFBLDZDQUFDLENBQUMsa0JBQUQsQ0FBRCxDQUFzQm1CLEdBQXRCLENBQTBCSixRQUFRLENBQUNHLE1BQVQsQ0FBZ0JFLE9BQWhCLENBQXdCLEdBQXhCLEVBQTZCLEVBQTdCLENBQTFCO0FBRUFiLElBQUFBLE9BQU8sQ0FBQ2MsVUFBUixDQUFtQixVQUFuQixFQUErQlQsSUFBL0IsQ0FBb0MsT0FBcEMsRUFBNkNVLFdBQTdDLENBQXlELFNBQXpEO0FBQ0gsR0FOTSxDQUFQO0FBT0gsQ0FkRDs7QUFnQkEsSUFBTUMsWUFBWSxHQUFHLFNBQWZBLFlBQWUsR0FBTTtBQUN2QixNQUFNQyxNQUFNLEdBQUd4Qiw2Q0FBQyxDQUFDLHdCQUFELENBQWhCO0FBQ0EsTUFBTWtCLE1BQU0sR0FBR2xCLDZDQUFDLENBQUMsZUFBRCxDQUFoQjtBQUVBa0IsRUFBQUEsTUFBTSxDQUFDTSxNQUFNLENBQUNDLEVBQVAsQ0FBVSxVQUFWLElBQXdCLFVBQXhCLEdBQXFDLGFBQXRDLENBQU4sQ0FBMkQsTUFBM0Q7QUFDSCxDQUxEOztBQU9BdEIsSUFBSSxDQUFDQyxFQUFMLENBQVEsT0FBUixFQUFpQixxQkFBakIsRUFBd0NtQixZQUF4QztBQUNBQSxZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC91dGlscy8yZmEuanM/NDRhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnZ3Jhdi1jb25maWcnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi4vdXRpbHMvcmVxdWVzdCc7XG5cbmNvbnN0IGJvZHkgPSAkKCdib2R5Jyk7XG5cbi8vIERhc2hib2FyZCB1cGRhdGUgYW5kIEdyYXYgdXBkYXRlXG5ib2R5Lm9uKCdjbGljaycsICdbZGF0YS0yZmEtcmVnZW5lcmF0ZV0nLCBmdW5jdGlvbihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgbGV0IGVsZW1lbnQgPSAkKHRoaXMpO1xuICAgIGxldCB1cmwgPSBgJHtjb25maWcuYmFzZV91cmxfcmVsYXRpdmV9L2FqYXguanNvbi90YXNrJHtjb25maWcucGFyYW1fc2VwfXJlZ2VuZXJhdGUyRkFTZWNyZXRgO1xuXG4gICAgZWxlbWVudC5hdHRyKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpLmZpbmQoJz4gLmZhJykuYWRkQ2xhc3MoJ2ZhLXNwaW4nKTtcblxuICAgIHJlcXVlc3QodXJsLCB7IG1ldGhvZDogJ3Bvc3QnIH0sIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAkKCdbZGF0YS0yZmEtaW1hZ2VdJykuYXR0cignc3JjJywgcmVzcG9uc2UuaW1hZ2UpO1xuICAgICAgICAkKCdbZGF0YS0yZmEtc2VjcmV0XScpLnRleHQocmVzcG9uc2Uuc2VjcmV0KTtcbiAgICAgICAgJCgnW2RhdGEtMmZhLXZhbHVlXScpLnZhbChyZXNwb25zZS5zZWNyZXQucmVwbGFjZSgnICcsICcnKSk7XG5cbiAgICAgICAgZWxlbWVudC5yZW1vdmVBdHRyKCdkaXNhYmxlZCcpLmZpbmQoJz4gLmZhJykucmVtb3ZlQ2xhc3MoJ2ZhLXNwaW4nKTtcbiAgICB9KTtcbn0pO1xuXG5jb25zdCB0b2dnbGVTZWNyZXQgPSAoKSA9PiB7XG4gICAgY29uc3QgdG9nZ2xlID0gJCgnI3RvZ2dsZV90d29mYV9lbmFibGVkMScpO1xuICAgIGNvbnN0IHNlY3JldCA9ICQoJy50d29mYS1zZWNyZXQnKTtcblxuICAgIHNlY3JldFt0b2dnbGUuaXMoJzpjaGVja2VkJykgPyAnYWRkQ2xhc3MnIDogJ3JlbW92ZUNsYXNzJ10oJ3Nob3cnKTtcbn07XG5cbmJvZHkub24oJ2NsaWNrJywgJy50d29mYS10b2dnbGUgaW5wdXQnLCB0b2dnbGVTZWNyZXQpO1xudG9nZ2xlU2VjcmV0KCk7XG4iXSwibmFtZXMiOlsiJCIsImNvbmZpZyIsInJlcXVlc3QiLCJib2R5Iiwib24iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiZWxlbWVudCIsInVybCIsImJhc2VfdXJsX3JlbGF0aXZlIiwicGFyYW1fc2VwIiwiYXR0ciIsImZpbmQiLCJhZGRDbGFzcyIsIm1ldGhvZCIsInJlc3BvbnNlIiwiaW1hZ2UiLCJ0ZXh0Iiwic2VjcmV0IiwidmFsIiwicmVwbGFjZSIsInJlbW92ZUF0dHIiLCJyZW1vdmVDbGFzcyIsInRvZ2dsZVNlY3JldCIsInRvZ2dsZSIsImlzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/2fa.js\n");

/***/ }),

/***/ "./app/utils/bootstrap-collapse.js":
/*!*****************************************!*\
  !*** ./app/utils/bootstrap-collapse.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.4.0\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n+function ($) {\n  'use strict'; // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function Collapse(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, Collapse.DEFAULTS, options);\n    this.$trigger = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' + '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]');\n    this.transitioning = null;\n\n    if (this.options.parent) {\n      this.$parent = this.getParent();\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger);\n    }\n\n    if (this.options.toggle) this.toggle();\n  };\n\n  Collapse.VERSION = '3.4.0';\n  Collapse.TRANSITION_DURATION = 350;\n  Collapse.DEFAULTS = {\n    toggle: true\n  };\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width');\n    return hasWidth ? 'width' : 'height';\n  };\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return;\n    var activesData;\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing');\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse');\n      if (activesData && activesData.transitioning) return;\n    }\n\n    var startEvent = $.Event('show.bs.collapse');\n    this.$element.trigger(startEvent);\n    if (startEvent.isDefaultPrevented()) return;\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide');\n      activesData || actives.data('bs.collapse', null);\n    }\n\n    var dimension = this.dimension();\n    this.$element.removeClass('collapse').addClass('collapsing')[dimension](0).attr('aria-expanded', true);\n    this.$trigger.removeClass('collapsed').attr('aria-expanded', true);\n    this.transitioning = 1;\n\n    var complete = function complete() {\n      this.$element.removeClass('collapsing').addClass('collapse in')[dimension]('');\n      this.transitioning = 0;\n      this.$element.trigger('shown.bs.collapse');\n    };\n\n    if (!$.support.transition) return complete.call(this);\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'));\n    this.$element.one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);\n  };\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return;\n    var startEvent = $.Event('hide.bs.collapse');\n    this.$element.trigger(startEvent);\n    if (startEvent.isDefaultPrevented()) return;\n    var dimension = this.dimension();\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight;\n    this.$element.addClass('collapsing').removeClass('collapse in').attr('aria-expanded', false);\n    this.$trigger.addClass('collapsed').attr('aria-expanded', false);\n    this.transitioning = 1;\n\n    var complete = function complete() {\n      this.transitioning = 0;\n      this.$element.removeClass('collapsing').addClass('collapse').trigger('hidden.bs.collapse');\n    };\n\n    if (!$.support.transition) return complete.call(this);\n    this.$element[dimension](0).one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION);\n  };\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']();\n  };\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]').each($.proxy(function (i, element) {\n      var $element = $(element);\n      this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element);\n    }, this)).end();\n  };\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in');\n    $element.attr('aria-expanded', isOpen);\n    $trigger.toggleClass('collapsed', !isOpen).attr('aria-expanded', isOpen);\n  };\n\n  function getTargetFromTrigger($trigger) {\n    var href;\n    var target = $trigger.attr('data-target') || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, ''); // strip for ie7\n\n    return $(target);\n  } // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.collapse');\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), _typeof(option) === 'object' && option);\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false;\n      if (!data) $this.data('bs.collapse', data = new Collapse(this, options));\n      if (typeof option === 'string') data[option]();\n    });\n  }\n\n  var old = $.fn.collapse;\n  $.fn.collapse = Plugin;\n  $.fn.collapse.Constructor = Collapse; // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old;\n    return this;\n  }; // COLLAPSE DATA-API\n  // =================\n\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this = $(this);\n    if (!$this.attr('data-target')) e.preventDefault();\n    var $target = getTargetFromTrigger($this);\n    var data = $target.data('bs.collapse');\n    var option = data ? 'toggle' : $this.data();\n    Plugin.call($target, option);\n  });\n}((jquery__WEBPACK_IMPORTED_MODULE_0___default()));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/bootstrap-collapse.js\n");

/***/ }),

/***/ "./app/utils/bootstrap-datetimepicker.js":
/*!***********************************************!*\
  !*** ./app/utils/bootstrap-datetimepicker.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/*! version : 4.17.47\n =========================================================\n bootstrap-datetimejs\n https://github.com/Eonasdan/bootstrap-datetimepicker\n Copyright (c) 2015 Jonathan Peterson\n =========================================================\n */\n\n/*\n The MIT License (MIT)\n\n Copyright (c) 2015 Jonathan Peterson\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n\n/* global define:false */\n\n/* global jQuery:false */\n\n/* global moment:false */\n(function (factory) {\n  'use strict';\n\n  if (true) {\n    // AMD is used - Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"jquery\"), __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function ($, moment) {\n  'use strict';\n\n  if (!moment) {\n    throw new Error('bootstrap-datetimepicker requires Moment.js to be loaded first');\n  }\n\n  var dateTimePicker = function dateTimePicker(element, options) {\n    var picker = {};\n    var date;\n    var viewDate;\n    var unset = true;\n    var input;\n    var component = false;\n    var widget = false;\n    var use24Hours;\n    var minViewModeNumber = 0;\n    var actualFormat;\n    var parseFormats;\n    var currentViewMode;\n    var datePickerModes = [{\n      clsName: 'days',\n      navFnc: 'M',\n      navStep: 1\n    }, {\n      clsName: 'months',\n      navFnc: 'y',\n      navStep: 1\n    }, {\n      clsName: 'years',\n      navFnc: 'y',\n      navStep: 10\n    }, {\n      clsName: 'decades',\n      navFnc: 'y',\n      navStep: 100\n    }];\n    var viewModes = ['days', 'months', 'years', 'decades'];\n    var verticalModes = ['top', 'bottom', 'auto'];\n    var horizontalModes = ['left', 'right', 'auto'];\n    var toolbarPlacements = ['default', 'top', 'bottom'];\n    var keyMap = {\n      'up': 38,\n      38: 'up',\n      'down': 40,\n      40: 'down',\n      'left': 37,\n      37: 'left',\n      'right': 39,\n      39: 'right',\n      'tab': 9,\n      9: 'tab',\n      'escape': 27,\n      27: 'escape',\n      'enter': 13,\n      13: 'enter',\n      'pageUp': 33,\n      33: 'pageUp',\n      'pageDown': 34,\n      34: 'pageDown',\n      'shift': 16,\n      16: 'shift',\n      'control': 17,\n      17: 'control',\n      'space': 32,\n      32: 'space',\n      't': 84,\n      84: 't',\n      'delete': 46,\n      46: 'delete'\n    };\n    var keyState = {};\n    /** ******************************************************************************\n         *\n         * Private functions\n         *\n         ********************************************************************************/\n\n    var hasTimeZone = function hasTimeZone() {\n      return moment.tz !== undefined && options.timeZone !== undefined && options.timeZone !== null && options.timeZone !== '';\n    };\n\n    var getMoment = function getMoment(d) {\n      var returnMoment;\n\n      if (d === undefined || d === null) {\n        returnMoment = moment(); // TODO should this use format? and locale?\n      } else if (moment.isDate(d) || moment.isMoment(d)) {\n        // If the date that is passed in is already a Date() or moment() object,\n        // pass it directly to moment.\n        returnMoment = moment(d);\n      } else if (hasTimeZone()) {\n        // There is a string to parse and a default time zone\n        // parse with the tz function which takes a default time zone if it is not in the format string\n        returnMoment = moment.tz(d, parseFormats, options.useStrict, options.timeZone);\n      } else {\n        returnMoment = moment(d, parseFormats, options.useStrict);\n      }\n\n      if (hasTimeZone()) {\n        returnMoment.tz(options.timeZone);\n      }\n\n      return returnMoment;\n    };\n\n    var isEnabled = function isEnabled(granularity) {\n      if (typeof granularity !== 'string' || granularity.length > 1) {\n        throw new TypeError('isEnabled expects a single character string parameter');\n      }\n\n      switch (granularity) {\n        case 'y':\n          return actualFormat.indexOf('Y') !== -1;\n\n        case 'M':\n          return actualFormat.indexOf('M') !== -1;\n\n        case 'd':\n          return actualFormat.toLowerCase().indexOf('d') !== -1;\n\n        case 'h':\n        case 'H':\n          return actualFormat.toLowerCase().indexOf('h') !== -1;\n\n        case 'm':\n          return actualFormat.indexOf('m') !== -1;\n\n        case 's':\n          return actualFormat.indexOf('s') !== -1;\n\n        default:\n          return false;\n      }\n    };\n\n    var hasTime = function hasTime() {\n      return isEnabled('h') || isEnabled('m') || isEnabled('s');\n    };\n\n    var hasDate = function hasDate() {\n      return isEnabled('y') || isEnabled('M') || isEnabled('d');\n    };\n\n    var getDatePickerTemplate = function getDatePickerTemplate() {\n      var headTemplate = $('<thead>').append($('<tr>').append($('<th>').addClass('prev').attr('data-action', 'previous').append($('<span>').addClass(options.icons.previous))).append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', options.calendarWeeks ? '6' : '5')).append($('<th>').addClass('next').attr('data-action', 'next').append($('<span>').addClass(options.icons.next))));\n      var contTemplate = $('<tbody>').append($('<tr>').append($('<td>').attr('colspan', options.calendarWeeks ? '8' : '7')));\n      return [$('<div>').addClass('datepicker-days').append($('<table>').addClass('table-condensed').append(headTemplate).append($('<tbody>'))), $('<div>').addClass('datepicker-months').append($('<table>').addClass('table-condensed').append(headTemplate.clone()).append(contTemplate.clone())), $('<div>').addClass('datepicker-years').append($('<table>').addClass('table-condensed').append(headTemplate.clone()).append(contTemplate.clone())), $('<div>').addClass('datepicker-decades').append($('<table>').addClass('table-condensed').append(headTemplate.clone()).append(contTemplate.clone()))];\n    };\n\n    var getTimePickerMainTemplate = function getTimePickerMainTemplate() {\n      var topRow = $('<tr>');\n      var middleRow = $('<tr>');\n      var bottomRow = $('<tr>');\n\n      if (isEnabled('h')) {\n        topRow.append($('<td>').append($('<a>').attr({\n          href: '#',\n          tabindex: '-1',\n          'title': options.tooltips.incrementHour\n        }).addClass('btn').attr('data-action', 'incrementHours').append($('<span>').addClass(options.icons.up))));\n        middleRow.append($('<td>').append($('<span>').addClass('timepicker-hour').attr({\n          'data-time-component': 'hours',\n          'title': options.tooltips.pickHour\n        }).attr('data-action', 'showHours')));\n        bottomRow.append($('<td>').append($('<a>').attr({\n          href: '#',\n          tabindex: '-1',\n          'title': options.tooltips.decrementHour\n        }).addClass('btn').attr('data-action', 'decrementHours').append($('<span>').addClass(options.icons.down))));\n      }\n\n      if (isEnabled('m')) {\n        if (isEnabled('h')) {\n          topRow.append($('<td>').addClass('separator'));\n          middleRow.append($('<td>').addClass('separator').html(':'));\n          bottomRow.append($('<td>').addClass('separator'));\n        }\n\n        topRow.append($('<td>').append($('<a>').attr({\n          href: '#',\n          tabindex: '-1',\n          'title': options.tooltips.incrementMinute\n        }).addClass('btn').attr('data-action', 'incrementMinutes').append($('<span>').addClass(options.icons.up))));\n        middleRow.append($('<td>').append($('<span>').addClass('timepicker-minute').attr({\n          'data-time-component': 'minutes',\n          'title': options.tooltips.pickMinute\n        }).attr('data-action', 'showMinutes')));\n        bottomRow.append($('<td>').append($('<a>').attr({\n          href: '#',\n          tabindex: '-1',\n          'title': options.tooltips.decrementMinute\n        }).addClass('btn').attr('data-action', 'decrementMinutes').append($('<span>').addClass(options.icons.down))));\n      }\n\n      if (isEnabled('s')) {\n        if (isEnabled('m')) {\n          topRow.append($('<td>').addClass('separator'));\n          middleRow.append($('<td>').addClass('separator').html(':'));\n          bottomRow.append($('<td>').addClass('separator'));\n        }\n\n        topRow.append($('<td>').append($('<a>').attr({\n          href: '#',\n          tabindex: '-1',\n          'title': options.tooltips.incrementSecond\n        }).addClass('btn').attr('data-action', 'incrementSeconds').append($('<span>').addClass(options.icons.up))));\n        middleRow.append($('<td>').append($('<span>').addClass('timepicker-second').attr({\n          'data-time-component': 'seconds',\n          'title': options.tooltips.pickSecond\n        }).attr('data-action', 'showSeconds')));\n        bottomRow.append($('<td>').append($('<a>').attr({\n          href: '#',\n          tabindex: '-1',\n          'title': options.tooltips.decrementSecond\n        }).addClass('btn').attr('data-action', 'decrementSeconds').append($('<span>').addClass(options.icons.down))));\n      }\n\n      if (!use24Hours) {\n        topRow.append($('<td>').addClass('separator'));\n        middleRow.append($('<td>').append($('<button>').addClass('btn btn-primary').attr({\n          'data-action': 'togglePeriod',\n          tabindex: '-1',\n          'title': options.tooltips.togglePeriod\n        })));\n        bottomRow.append($('<td>').addClass('separator'));\n      }\n\n      return $('<div>').addClass('timepicker-picker').append($('<table>').addClass('table-condensed').append([topRow, middleRow, bottomRow]));\n    };\n\n    var getTimePickerTemplate = function getTimePickerTemplate() {\n      var hoursView = $('<div>').addClass('timepicker-hours').append($('<table>').addClass('table-condensed'));\n      var minutesView = $('<div>').addClass('timepicker-minutes').append($('<table>').addClass('table-condensed'));\n      var secondsView = $('<div>').addClass('timepicker-seconds').append($('<table>').addClass('table-condensed'));\n      var ret = [getTimePickerMainTemplate()];\n\n      if (isEnabled('h')) {\n        ret.push(hoursView);\n      }\n\n      if (isEnabled('m')) {\n        ret.push(minutesView);\n      }\n\n      if (isEnabled('s')) {\n        ret.push(secondsView);\n      }\n\n      return ret;\n    };\n\n    var getToolbar = function getToolbar() {\n      var row = [];\n\n      if (options.showTodayButton) {\n        row.push($('<td>').append($('<a>').attr({\n          'data-action': 'today',\n          'title': options.tooltips.today\n        }).append($('<span>').addClass(options.icons.today))));\n      }\n\n      if (!options.sideBySide && hasDate() && hasTime()) {\n        row.push($('<td>').append($('<a>').attr({\n          'data-action': 'togglePicker',\n          'title': options.tooltips.selectTime\n        }).append($('<span>').addClass(options.icons.time))));\n      }\n\n      if (options.showClear) {\n        row.push($('<td>').append($('<a>').attr({\n          'data-action': 'clear',\n          'title': options.tooltips.clear\n        }).append($('<span>').addClass(options.icons.clear))));\n      }\n\n      if (options.showClose) {\n        row.push($('<td>').append($('<a>').attr({\n          'data-action': 'close',\n          'title': options.tooltips.close\n        }).append($('<span>').addClass(options.icons.close))));\n      }\n\n      return $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));\n    };\n\n    var getTemplate = function getTemplate() {\n      var template = $('<div>').addClass('bootstrap-datetimepicker-widget dropdown-menu');\n      var dateView = $('<div>').addClass('datepicker').append(getDatePickerTemplate());\n      var timeView = $('<div>').addClass('timepicker').append(getTimePickerTemplate());\n      var content = $('<ul>').addClass('list-unstyled');\n      var toolbar = $('<li>').addClass('picker-switch' + (options.collapse ? ' accordion-toggle' : '')).append(getToolbar());\n\n      if (options.inline) {\n        template.removeClass('dropdown-menu');\n      }\n\n      if (use24Hours) {\n        template.addClass('usetwentyfour');\n      }\n\n      if (isEnabled('s') && !use24Hours) {\n        template.addClass('wider');\n      }\n\n      if (options.sideBySide && hasDate() && hasTime()) {\n        template.addClass('timepicker-sbs');\n\n        if (options.toolbarPlacement === 'top') {\n          template.append(toolbar);\n        }\n\n        template.append($('<div>').addClass('row').append(dateView.addClass('col-md-6')).append(timeView.addClass('col-md-6')));\n\n        if (options.toolbarPlacement === 'bottom') {\n          template.append(toolbar);\n        }\n\n        return template;\n      }\n\n      if (options.toolbarPlacement === 'top') {\n        content.append(toolbar);\n      }\n\n      if (hasDate()) {\n        content.append($('<li>').addClass(options.collapse && hasTime() ? 'collapse in' : '').append(dateView));\n      }\n\n      if (options.toolbarPlacement === 'default') {\n        content.append(toolbar);\n      }\n\n      if (hasTime()) {\n        content.append($('<li>').addClass(options.collapse && hasDate() ? 'collapse' : '').append(timeView));\n      }\n\n      if (options.toolbarPlacement === 'bottom') {\n        content.append(toolbar);\n      }\n\n      return template.append(content);\n    };\n\n    var dataToOptions = function dataToOptions() {\n      var eData;\n      var dataOptions = {};\n\n      if (element.is('input') || options.inline) {\n        eData = element.data();\n      } else {\n        eData = element.find('input').data();\n      }\n\n      if (eData.dateOptions && eData.dateOptions instanceof Object) {\n        dataOptions = $.extend(true, dataOptions, eData.dateOptions);\n      }\n\n      $.each(options, function (key) {\n        var attributeName = 'date' + key.charAt(0).toUpperCase() + key.slice(1);\n\n        if (eData[attributeName] !== undefined) {\n          dataOptions[key] = eData[attributeName];\n        }\n      });\n      return dataOptions;\n    };\n\n    var place = function place() {\n      var position = (component || element).position();\n      var offset = (component || element).offset();\n      var vertical = options.widgetPositioning.vertical;\n      var horizontal = options.widgetPositioning.horizontal;\n      var parent;\n\n      if (options.widgetParent) {\n        parent = options.widgetParent.append(widget);\n      } else if (element.is('input')) {\n        parent = element.after(widget).parent();\n      } else if (options.inline) {\n        parent = element.append(widget);\n        return;\n      } else {\n        parent = element;\n        element.children().first().after(widget);\n      } // Top and bottom logic\n\n\n      if (vertical === 'auto') {\n        if (offset.top + widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() && widget.height() + element.outerHeight() < offset.top) {\n          vertical = 'top';\n        } else {\n          vertical = 'bottom';\n        }\n      } // Left and right logic\n\n\n      if (horizontal === 'auto') {\n        if (parent.width() < offset.left + widget.outerWidth() / 2 && offset.left + widget.outerWidth() > $(window).width()) {\n          horizontal = 'right';\n        } else {\n          horizontal = 'left';\n        }\n      }\n\n      if (vertical === 'top') {\n        widget.addClass('top').removeClass('bottom');\n      } else {\n        widget.addClass('bottom').removeClass('top');\n      }\n\n      if (horizontal === 'right') {\n        widget.addClass('pull-right');\n      } else {\n        widget.removeClass('pull-right');\n      } // find the first parent element that has a non-static css positioning\n\n\n      if (parent.css('position') === 'static') {\n        parent = parent.parents().filter(function () {\n          return $(this).css('position') !== 'static';\n        }).first();\n      }\n\n      if (parent.length === 0) {\n        throw new Error('datetimepicker component should be placed within a non-static positioned container');\n      }\n\n      widget.css({\n        top: vertical === 'top' ? 'auto' : position.top + element.outerHeight(),\n        bottom: vertical === 'top' ? parent.outerHeight() - (parent === element ? 0 : position.top) : 'auto',\n        left: horizontal === 'left' ? parent === element ? 0 : position.left : 'auto',\n        right: horizontal === 'left' ? 'auto' : parent.outerWidth() - element.outerWidth() - (parent === element ? 0 : position.left)\n      });\n    };\n\n    var notifyEvent = function notifyEvent(e) {\n      if (e.type === 'dp.change' && (e.date && e.date.isSame(e.oldDate) || !e.date && !e.oldDate)) {\n        return;\n      }\n\n      element.trigger(e);\n    };\n\n    var viewUpdate = function viewUpdate(e) {\n      if (e === 'y') {\n        e = 'YYYY';\n      }\n\n      notifyEvent({\n        type: 'dp.update',\n        change: e,\n        viewDate: viewDate.clone()\n      });\n    };\n\n    var showMode = function showMode(dir) {\n      if (!widget) {\n        return;\n      }\n\n      if (dir) {\n        currentViewMode = Math.max(minViewModeNumber, Math.min(3, currentViewMode + dir));\n      }\n\n      widget.find('.datepicker > div').hide().filter('.datepicker-' + datePickerModes[currentViewMode].clsName).show();\n    };\n\n    var fillDow = function fillDow() {\n      var row = $('<tr>');\n      var currentDate = viewDate.clone().startOf('w').startOf('d');\n\n      if (options.calendarWeeks === true) {\n        row.append($('<th>').addClass('cw').text('#'));\n      }\n\n      while (currentDate.isBefore(viewDate.clone().endOf('w'))) {\n        row.append($('<th>').addClass('dow').text(currentDate.format('dd')));\n        currentDate.add(1, 'd');\n      }\n\n      widget.find('.datepicker-days thead').append(row);\n    };\n\n    var isInDisabledDates = function isInDisabledDates(testDate) {\n      return options.disabledDates[testDate.format('YYYY-MM-DD')] === true;\n    };\n\n    var isInEnabledDates = function isInEnabledDates(testDate) {\n      return options.enabledDates[testDate.format('YYYY-MM-DD')] === true;\n    };\n\n    var isInDisabledHours = function isInDisabledHours(testDate) {\n      return options.disabledHours[testDate.format('H')] === true;\n    };\n\n    var isInEnabledHours = function isInEnabledHours(testDate) {\n      return options.enabledHours[testDate.format('H')] === true;\n    };\n\n    var isValid = function isValid(targetMoment, granularity) {\n      if (!targetMoment.isValid()) {\n        return false;\n      }\n\n      if (options.disabledDates && granularity === 'd' && isInDisabledDates(targetMoment)) {\n        return false;\n      }\n\n      if (options.enabledDates && granularity === 'd' && !isInEnabledDates(targetMoment)) {\n        return false;\n      }\n\n      if (options.minDate && targetMoment.isBefore(options.minDate, granularity)) {\n        return false;\n      }\n\n      if (options.maxDate && targetMoment.isAfter(options.maxDate, granularity)) {\n        return false;\n      }\n\n      if (options.daysOfWeekDisabled && granularity === 'd' && options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {\n        return false;\n      }\n\n      if (options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && isInDisabledHours(targetMoment)) {\n        return false;\n      }\n\n      if (options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !isInEnabledHours(targetMoment)) {\n        return false;\n      }\n\n      if (options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {\n        var found = false;\n        $.each(options.disabledTimeIntervals, function () {\n          if (targetMoment.isBetween(this[0], this[1])) {\n            found = true;\n            return false;\n          }\n        });\n\n        if (found) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var fillMonths = function fillMonths() {\n      var spans = [];\n      var monthsShort = viewDate.clone().startOf('y').startOf('d');\n\n      while (monthsShort.isSame(viewDate, 'y')) {\n        spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));\n        monthsShort.add(1, 'M');\n      }\n\n      widget.find('.datepicker-months td').empty().append(spans);\n    };\n\n    var updateMonths = function updateMonths() {\n      var monthsView = widget.find('.datepicker-months');\n      var monthsViewHeader = monthsView.find('th');\n      var months = monthsView.find('tbody').find('span');\n      monthsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevYear);\n      monthsViewHeader.eq(1).attr('title', options.tooltips.selectYear);\n      monthsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextYear);\n      monthsView.find('.disabled').removeClass('disabled');\n\n      if (!isValid(viewDate.clone().subtract(1, 'y'), 'y')) {\n        monthsViewHeader.eq(0).addClass('disabled');\n      }\n\n      monthsViewHeader.eq(1).text(viewDate.year());\n\n      if (!isValid(viewDate.clone().add(1, 'y'), 'y')) {\n        monthsViewHeader.eq(2).addClass('disabled');\n      }\n\n      months.removeClass('active');\n\n      if (date.isSame(viewDate, 'y') && !unset) {\n        months.eq(date.month()).addClass('active');\n      }\n\n      months.each(function (index) {\n        if (!isValid(viewDate.clone().month(index), 'M')) {\n          $(this).addClass('disabled');\n        }\n      });\n    };\n\n    var updateYears = function updateYears() {\n      var yearsView = widget.find('.datepicker-years');\n      var yearsViewHeader = yearsView.find('th');\n      var startYear = viewDate.clone().subtract(5, 'y');\n      var endYear = viewDate.clone().add(6, 'y');\n      var html = '';\n      yearsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevDecade);\n      yearsViewHeader.eq(1).attr('title', options.tooltips.selectDecade);\n      yearsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextDecade);\n      yearsView.find('.disabled').removeClass('disabled');\n\n      if (options.minDate && options.minDate.isAfter(startYear, 'y')) {\n        yearsViewHeader.eq(0).addClass('disabled');\n      }\n\n      yearsViewHeader.eq(1).text(startYear.year() + '-' + endYear.year());\n\n      if (options.maxDate && options.maxDate.isBefore(endYear, 'y')) {\n        yearsViewHeader.eq(2).addClass('disabled');\n      }\n\n      while (!startYear.isAfter(endYear, 'y')) {\n        html += '<span data-action=\"selectYear\" class=\"year' + (startYear.isSame(date, 'y') && !unset ? ' active' : '') + (!isValid(startYear, 'y') ? ' disabled' : '') + '\">' + startYear.year() + '</span>';\n        startYear.add(1, 'y');\n      }\n\n      yearsView.find('td').html(html);\n    };\n\n    var updateDecades = function updateDecades() {\n      var decadesView = widget.find('.datepicker-decades');\n      var decadesViewHeader = decadesView.find('th');\n      var startDecade = moment({\n        y: viewDate.year() - viewDate.year() % 100 - 1\n      });\n      var endDecade = startDecade.clone().add(100, 'y');\n      var startedAt = startDecade.clone();\n      var minDateDecade = false;\n      var maxDateDecade = false;\n      var endDecadeYear;\n      var html = '';\n      decadesViewHeader.eq(0).find('span').attr('title', options.tooltips.prevCentury);\n      decadesViewHeader.eq(2).find('span').attr('title', options.tooltips.nextCentury);\n      decadesView.find('.disabled').removeClass('disabled');\n\n      if (startDecade.isSame(moment({\n        y: 1900\n      })) || options.minDate && options.minDate.isAfter(startDecade, 'y')) {\n        decadesViewHeader.eq(0).addClass('disabled');\n      }\n\n      decadesViewHeader.eq(1).text(startDecade.year() + '-' + endDecade.year());\n\n      if (startDecade.isSame(moment({\n        y: 2000\n      })) || options.maxDate && options.maxDate.isBefore(endDecade, 'y')) {\n        decadesViewHeader.eq(2).addClass('disabled');\n      }\n\n      while (!startDecade.isAfter(endDecade, 'y')) {\n        endDecadeYear = startDecade.year() + 12;\n        minDateDecade = options.minDate && options.minDate.isAfter(startDecade, 'y') && options.minDate.year() <= endDecadeYear;\n        maxDateDecade = options.maxDate && options.maxDate.isAfter(startDecade, 'y') && options.maxDate.year() <= endDecadeYear;\n        html += '<span data-action=\"selectDecade\" class=\"decade' + (date.isAfter(startDecade) && date.year() <= endDecadeYear ? ' active' : '') + (!isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + '\" data-selection=\"' + (startDecade.year() + 6) + '\">' + (startDecade.year() + 1) + ' - ' + (startDecade.year() + 12) + '</span>';\n        startDecade.add(12, 'y');\n      }\n\n      html += '<span></span><span></span><span></span>'; // push the dangling block over, at least this way it's even\n\n      decadesView.find('td').html(html);\n      decadesViewHeader.eq(1).text(startedAt.year() + 1 + '-' + startDecade.year());\n    };\n\n    var fillDate = function fillDate() {\n      var daysView = widget.find('.datepicker-days');\n      var daysViewHeader = daysView.find('th');\n      var currentDate;\n      var html = [];\n      var row;\n      var clsNames = [];\n      var i;\n\n      if (!hasDate()) {\n        return;\n      }\n\n      daysViewHeader.eq(0).find('span').attr('title', options.tooltips.prevMonth);\n      daysViewHeader.eq(1).attr('title', options.tooltips.selectMonth);\n      daysViewHeader.eq(2).find('span').attr('title', options.tooltips.nextMonth);\n      daysView.find('.disabled').removeClass('disabled');\n      daysViewHeader.eq(1).text(viewDate.format(options.dayViewHeaderFormat));\n\n      if (!isValid(viewDate.clone().subtract(1, 'M'), 'M')) {\n        daysViewHeader.eq(0).addClass('disabled');\n      }\n\n      if (!isValid(viewDate.clone().add(1, 'M'), 'M')) {\n        daysViewHeader.eq(2).addClass('disabled');\n      }\n\n      currentDate = viewDate.clone().startOf('M').startOf('w').startOf('d');\n\n      for (i = 0; i < 42; i++) {\n        // always display 42 days (should show 6 weeks)\n        if (currentDate.weekday() === 0) {\n          row = $('<tr>');\n\n          if (options.calendarWeeks) {\n            row.append('<td class=\"cw\">' + currentDate.week() + '</td>');\n          }\n\n          html.push(row);\n        }\n\n        clsNames = ['day'];\n\n        if (currentDate.isBefore(viewDate, 'M')) {\n          clsNames.push('old');\n        }\n\n        if (currentDate.isAfter(viewDate, 'M')) {\n          clsNames.push('new');\n        }\n\n        if (currentDate.isSame(date, 'd') && !unset) {\n          clsNames.push('active');\n        }\n\n        if (!isValid(currentDate, 'd')) {\n          clsNames.push('disabled');\n        }\n\n        if (currentDate.isSame(getMoment(), 'd')) {\n          clsNames.push('today');\n        }\n\n        if (currentDate.day() === 0 || currentDate.day() === 6) {\n          clsNames.push('weekend');\n        }\n\n        notifyEvent({\n          type: 'dp.classify',\n          date: currentDate,\n          classNames: clsNames\n        });\n        row.append('<td data-action=\"selectDay\" data-day=\"' + currentDate.format('L') + '\" class=\"' + clsNames.join(' ') + '\">' + currentDate.date() + '</td>');\n        currentDate.add(1, 'd');\n      }\n\n      daysView.find('tbody').empty().append(html);\n      updateMonths();\n      updateYears();\n      updateDecades();\n    };\n\n    var fillHours = function fillHours() {\n      var table = widget.find('.timepicker-hours table');\n      var currentHour = viewDate.clone().startOf('d');\n      var html = [];\n      var row = $('<tr>');\n\n      if (viewDate.hour() > 11 && !use24Hours) {\n        currentHour.hour(12);\n      }\n\n      while (currentHour.isSame(viewDate, 'd') && (use24Hours || viewDate.hour() < 12 && currentHour.hour() < 12 || viewDate.hour() > 11)) {\n        if (currentHour.hour() % 4 === 0) {\n          row = $('<tr>');\n          html.push(row);\n        }\n\n        row.append('<td data-action=\"selectHour\" class=\"hour' + (!isValid(currentHour, 'h') ? ' disabled' : '') + '\">' + currentHour.format(use24Hours ? 'HH' : 'hh') + '</td>');\n        currentHour.add(1, 'h');\n      }\n\n      table.empty().append(html);\n    };\n\n    var fillMinutes = function fillMinutes() {\n      var table = widget.find('.timepicker-minutes table');\n      var currentMinute = viewDate.clone().startOf('h');\n      var html = [];\n      var row = $('<tr>');\n      var step = options.stepping === 1 ? 5 : options.stepping;\n\n      while (viewDate.isSame(currentMinute, 'h')) {\n        if (currentMinute.minute() % (step * 4) === 0) {\n          row = $('<tr>');\n          html.push(row);\n        }\n\n        row.append('<td data-action=\"selectMinute\" class=\"minute' + (!isValid(currentMinute, 'm') ? ' disabled' : '') + '\">' + currentMinute.format('mm') + '</td>');\n        currentMinute.add(step, 'm');\n      }\n\n      table.empty().append(html);\n    };\n\n    var fillSeconds = function fillSeconds() {\n      var table = widget.find('.timepicker-seconds table');\n      var currentSecond = viewDate.clone().startOf('m');\n      var html = [];\n      var row = $('<tr>');\n\n      while (viewDate.isSame(currentSecond, 'm')) {\n        if (currentSecond.second() % 20 === 0) {\n          row = $('<tr>');\n          html.push(row);\n        }\n\n        row.append('<td data-action=\"selectSecond\" class=\"second' + (!isValid(currentSecond, 's') ? ' disabled' : '') + '\">' + currentSecond.format('ss') + '</td>');\n        currentSecond.add(5, 's');\n      }\n\n      table.empty().append(html);\n    };\n\n    var fillTime = function fillTime() {\n      var toggle;\n      var newDate;\n      var timeComponents = widget.find('.timepicker span[data-time-component]');\n\n      if (!use24Hours) {\n        toggle = widget.find('.timepicker [data-action=togglePeriod]');\n        newDate = date.clone().add(date.hours() >= 12 ? -12 : 12, 'h');\n        toggle.text(date.format('A'));\n\n        if (isValid(newDate, 'h')) {\n          toggle.removeClass('disabled');\n        } else {\n          toggle.addClass('disabled');\n        }\n      }\n\n      timeComponents.filter('[data-time-component=hours]').text(date.format(use24Hours ? 'HH' : 'hh'));\n      timeComponents.filter('[data-time-component=minutes]').text(date.format('mm'));\n      timeComponents.filter('[data-time-component=seconds]').text(date.format('ss'));\n      fillHours();\n      fillMinutes();\n      fillSeconds();\n    };\n\n    var update = function update() {\n      if (!widget) {\n        return;\n      }\n\n      fillDate();\n      fillTime();\n    };\n\n    var setValue = function setValue(targetMoment) {\n      var oldDate = unset ? null : date; // case of calling setValue(null or false)\n\n      if (!targetMoment) {\n        unset = true;\n        input.val('');\n        element.data('date', '');\n        notifyEvent({\n          type: 'dp.change',\n          date: false,\n          oldDate: oldDate\n        });\n        update();\n        return;\n      }\n\n      targetMoment = targetMoment.clone().locale(options.locale);\n\n      if (hasTimeZone()) {\n        targetMoment.tz(options.timeZone);\n      }\n\n      if (options.stepping !== 1) {\n        targetMoment.minutes(Math.round(targetMoment.minutes() / options.stepping) * options.stepping).seconds(0);\n\n        while (options.minDate && targetMoment.isBefore(options.minDate)) {\n          targetMoment.add(options.stepping, 'minutes');\n        }\n      }\n\n      if (isValid(targetMoment)) {\n        date = targetMoment;\n        viewDate = date.clone();\n        input.val(date.format(actualFormat));\n        element.data('date', date.format(actualFormat));\n        unset = false;\n        update();\n        notifyEvent({\n          type: 'dp.change',\n          date: date.clone(),\n          oldDate: oldDate\n        });\n      } else {\n        if (!options.keepInvalid) {\n          input.val(unset ? '' : date.format(actualFormat));\n        } else {\n          notifyEvent({\n            type: 'dp.change',\n            date: targetMoment,\n            oldDate: oldDate\n          });\n        }\n\n        notifyEvent({\n          type: 'dp.error',\n          date: targetMoment,\n          oldDate: oldDate\n        });\n      }\n    };\n    /**\n         * Hides the widget. Possibly will emit dp.hide\n         */\n\n\n    var hide = function hide() {\n      var transitioning = false;\n\n      if (!widget) {\n        return picker;\n      } // Ignore event if in the middle of a picker transition\n\n\n      widget.find('.collapse').each(function () {\n        var collapseData = $(this).data('collapse');\n\n        if (collapseData && collapseData.transitioning) {\n          transitioning = true;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (transitioning) {\n        return picker;\n      }\n\n      if (component && component.hasClass('btn')) {\n        component.toggleClass('active');\n      }\n\n      widget.hide();\n      $(window).off('resize', place);\n      widget.off('click', '[data-action]');\n      widget.off('mousedown', false);\n      widget.remove();\n      widget = false;\n      notifyEvent({\n        type: 'dp.hide',\n        date: date.clone()\n      });\n      input.blur();\n      viewDate = date.clone();\n      return picker;\n    };\n\n    var clear = function clear() {\n      setValue(null);\n    };\n\n    var parseInputDate = function parseInputDate(inputDate) {\n      if (options.parseInputDate === undefined) {\n        if (!moment.isMoment(inputDate) || inputDate instanceof Date) {\n          inputDate = getMoment(inputDate);\n        }\n      } else {\n        inputDate = options.parseInputDate(inputDate);\n      } // inputDate.locale(options.locale);\n\n\n      return inputDate;\n    };\n    /** ******************************************************************************\n         *\n         * Widget UI interaction functions\n         *\n         ********************************************************************************/\n\n\n    var actions = {\n      next: function next() {\n        var navFnc = datePickerModes[currentViewMode].navFnc;\n        viewDate.add(datePickerModes[currentViewMode].navStep, navFnc);\n        fillDate();\n        viewUpdate(navFnc);\n      },\n      previous: function previous() {\n        var navFnc = datePickerModes[currentViewMode].navFnc;\n        viewDate.subtract(datePickerModes[currentViewMode].navStep, navFnc);\n        fillDate();\n        viewUpdate(navFnc);\n      },\n      pickerSwitch: function pickerSwitch() {\n        showMode(1);\n      },\n      selectMonth: function selectMonth(e) {\n        var month = $(e.target).closest('tbody').find('span').index($(e.target));\n        viewDate.month(month);\n\n        if (currentViewMode === minViewModeNumber) {\n          setValue(date.clone().year(viewDate.year()).month(viewDate.month()));\n\n          if (!options.inline) {\n            hide();\n          }\n        } else {\n          showMode(-1);\n          fillDate();\n        }\n\n        viewUpdate('M');\n      },\n      selectYear: function selectYear(e) {\n        var year = parseInt($(e.target).text(), 10) || 0;\n        viewDate.year(year);\n\n        if (currentViewMode === minViewModeNumber) {\n          setValue(date.clone().year(viewDate.year()));\n\n          if (!options.inline) {\n            hide();\n          }\n        } else {\n          showMode(-1);\n          fillDate();\n        }\n\n        viewUpdate('YYYY');\n      },\n      selectDecade: function selectDecade(e) {\n        var year = parseInt($(e.target).data('selection'), 10) || 0;\n        viewDate.year(year);\n\n        if (currentViewMode === minViewModeNumber) {\n          setValue(date.clone().year(viewDate.year()));\n\n          if (!options.inline) {\n            hide();\n          }\n        } else {\n          showMode(-1);\n          fillDate();\n        }\n\n        viewUpdate('YYYY');\n      },\n      selectDay: function selectDay(e) {\n        var day = viewDate.clone();\n\n        if ($(e.target).is('.old')) {\n          day.subtract(1, 'M');\n        }\n\n        if ($(e.target).is('.new')) {\n          day.add(1, 'M');\n        }\n\n        setValue(day.date(parseInt($(e.target).text(), 10)));\n\n        if (!hasTime() && !options.keepOpen && !options.inline) {\n          hide();\n        }\n      },\n      incrementHours: function incrementHours() {\n        var newDate = date.clone().add(1, 'h');\n\n        if (isValid(newDate, 'h')) {\n          setValue(newDate);\n        }\n      },\n      incrementMinutes: function incrementMinutes() {\n        var newDate = date.clone().add(options.stepping, 'm');\n\n        if (isValid(newDate, 'm')) {\n          setValue(newDate);\n        }\n      },\n      incrementSeconds: function incrementSeconds() {\n        var newDate = date.clone().add(1, 's');\n\n        if (isValid(newDate, 's')) {\n          setValue(newDate);\n        }\n      },\n      decrementHours: function decrementHours() {\n        var newDate = date.clone().subtract(1, 'h');\n\n        if (isValid(newDate, 'h')) {\n          setValue(newDate);\n        }\n      },\n      decrementMinutes: function decrementMinutes() {\n        var newDate = date.clone().subtract(options.stepping, 'm');\n\n        if (isValid(newDate, 'm')) {\n          setValue(newDate);\n        }\n      },\n      decrementSeconds: function decrementSeconds() {\n        var newDate = date.clone().subtract(1, 's');\n\n        if (isValid(newDate, 's')) {\n          setValue(newDate);\n        }\n      },\n      togglePeriod: function togglePeriod() {\n        setValue(date.clone().add(date.hours() >= 12 ? -12 : 12, 'h'));\n      },\n      togglePicker: function togglePicker(e) {\n        var $this = $(e.target);\n        var $parent = $this.closest('ul');\n        var expanded = $parent.find('.in');\n        var closed = $parent.find('.collapse:not(.in)');\n        var collapseData;\n\n        if (expanded && expanded.length) {\n          collapseData = expanded.data('collapse');\n\n          if (collapseData && collapseData.transitioning) {\n            return;\n          }\n\n          if (expanded.collapse) {\n            // if collapse plugin is available through bootstrap.js then use it\n            expanded.collapse('hide');\n            closed.collapse('show');\n          } else {\n            // otherwise just toggle in class on the two views\n            expanded.removeClass('in');\n            closed.addClass('in');\n          }\n\n          if ($this.is('span')) {\n            $this.toggleClass(options.icons.time + ' ' + options.icons.date);\n          } else {\n            $this.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n          } // NOTE: uncomment if toggled state will be restored in show()\n          // if (component) {\n          //    component.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n          // }\n\n        }\n      },\n      showPicker: function showPicker() {\n        widget.find('.timepicker > div:not(.timepicker-picker)').hide();\n        widget.find('.timepicker .timepicker-picker').show();\n      },\n      showHours: function showHours() {\n        widget.find('.timepicker .timepicker-picker').hide();\n        widget.find('.timepicker .timepicker-hours').show();\n      },\n      showMinutes: function showMinutes() {\n        widget.find('.timepicker .timepicker-picker').hide();\n        widget.find('.timepicker .timepicker-minutes').show();\n      },\n      showSeconds: function showSeconds() {\n        widget.find('.timepicker .timepicker-picker').hide();\n        widget.find('.timepicker .timepicker-seconds').show();\n      },\n      selectHour: function selectHour(e) {\n        var hour = parseInt($(e.target).text(), 10);\n\n        if (!use24Hours) {\n          if (date.hours() >= 12) {\n            if (hour !== 12) {\n              hour += 12;\n            }\n          } else {\n            if (hour === 12) {\n              hour = 0;\n            }\n          }\n        }\n\n        setValue(date.clone().hours(hour));\n        actions.showPicker.call(picker);\n      },\n      selectMinute: function selectMinute(e) {\n        setValue(date.clone().minutes(parseInt($(e.target).text(), 10)));\n        actions.showPicker.call(picker);\n      },\n      selectSecond: function selectSecond(e) {\n        setValue(date.clone().seconds(parseInt($(e.target).text(), 10)));\n        actions.showPicker.call(picker);\n      },\n      clear: clear,\n      today: function today() {\n        var todaysDate = getMoment();\n\n        if (isValid(todaysDate, 'd')) {\n          setValue(todaysDate);\n        }\n      },\n      close: hide\n    };\n\n    var doAction = function doAction(e) {\n      if ($(e.currentTarget).is('.disabled')) {\n        return false;\n      }\n\n      actions[$(e.currentTarget).data('action')].apply(picker, arguments);\n      return false;\n    };\n    /**\n         * Shows the widget. Possibly will emit dp.show and dp.change\n         */\n\n\n    var show = function show() {\n      var currentMoment;\n      var useCurrentGranularity = {\n        'year': function year(m) {\n          return m.month(0).date(1).hours(0).seconds(0).minutes(0);\n        },\n        'month': function month(m) {\n          return m.date(1).hours(0).seconds(0).minutes(0);\n        },\n        'day': function day(m) {\n          return m.hours(0).seconds(0).minutes(0);\n        },\n        'hour': function hour(m) {\n          return m.seconds(0).minutes(0);\n        },\n        'minute': function minute(m) {\n          return m.seconds(0);\n        }\n      };\n\n      if (input.prop('disabled') || !options.ignoreReadonly && input.prop('readonly') || widget) {\n        return picker;\n      }\n\n      if (input.val() !== undefined && input.val().trim().length !== 0) {\n        setValue(parseInputDate(input.val().trim()));\n      } else if (unset && options.useCurrent && (options.inline || input.is('input') && input.val().trim().length === 0)) {\n        currentMoment = getMoment();\n\n        if (typeof options.useCurrent === 'string') {\n          currentMoment = useCurrentGranularity[options.useCurrent](currentMoment);\n        }\n\n        setValue(currentMoment);\n      }\n\n      widget = getTemplate();\n      fillDow();\n      fillMonths();\n      widget.find('.timepicker-hours').hide();\n      widget.find('.timepicker-minutes').hide();\n      widget.find('.timepicker-seconds').hide();\n      update();\n      showMode();\n      $(window).on('resize', place);\n      widget.on('click', '[data-action]', doAction); // this handles clicks on the widget\n\n      widget.on('mousedown', false);\n\n      if (component && component.hasClass('btn')) {\n        component.toggleClass('active');\n      }\n\n      place();\n      widget.show();\n\n      if (options.focusOnShow && !input.is(':focus')) {\n        input.focus();\n      }\n\n      notifyEvent({\n        type: 'dp.show'\n      });\n      return picker;\n    };\n    /**\n         * Shows or hides the widget\n         */\n\n\n    var toggle = function toggle() {\n      return widget ? hide() : show();\n    };\n\n    var keydown = function keydown(e) {\n      var handler = null;\n      var index;\n      var index2;\n      var pressedKeys = [];\n      var pressedModifiers = {};\n      var currentKey = e.which;\n      var keyBindKeys;\n      var allModifiersPressed;\n      var pressed = 'p';\n      keyState[currentKey] = pressed;\n\n      for (index in keyState) {\n        if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {\n          pressedKeys.push(index);\n\n          if (parseInt(index, 10) !== currentKey) {\n            pressedModifiers[index] = true;\n          }\n        }\n      }\n\n      for (index in options.keyBinds) {\n        if (options.keyBinds.hasOwnProperty(index) && typeof options.keyBinds[index] === 'function') {\n          keyBindKeys = index.split(' ');\n\n          if (keyBindKeys.length === pressedKeys.length && keyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {\n            allModifiersPressed = true;\n\n            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {\n              if (!(keyMap[keyBindKeys[index2]] in pressedModifiers)) {\n                allModifiersPressed = false;\n                break;\n              }\n            }\n\n            if (allModifiersPressed) {\n              handler = options.keyBinds[index];\n              break;\n            }\n          }\n        }\n      }\n\n      if (handler) {\n        handler.call(picker, widget);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    var keyup = function keyup(e) {\n      keyState[e.which] = 'r';\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    var change = function change(e) {\n      var val = $(e.target).val().trim();\n      var parsedDate = val ? parseInputDate(val) : null;\n      setValue(parsedDate);\n      e.stopImmediatePropagation();\n      return false;\n    };\n\n    var attachDatePickerElementEvents = function attachDatePickerElementEvents() {\n      input.on({\n        'change': change,\n        'blur': options.debug ? '' : hide,\n        'keydown': keydown,\n        'keyup': keyup,\n        'focus': options.allowInputToggle ? show : ''\n      });\n\n      if (element.is('input')) {\n        input.on({\n          'focus': show\n        });\n      } else if (component) {\n        component.on('click', toggle);\n        component.on('mousedown', false);\n      }\n    };\n\n    var detachDatePickerElementEvents = function detachDatePickerElementEvents() {\n      input.off({\n        'change': change,\n        'blur': blur,\n        'keydown': keydown,\n        'keyup': keyup,\n        'focus': options.allowInputToggle ? hide : ''\n      });\n\n      if (element.is('input')) {\n        input.off({\n          'focus': show\n        });\n      } else if (component) {\n        component.off('click', toggle);\n        component.off('mousedown', false);\n      }\n    };\n\n    var indexGivenDates = function indexGivenDates(givenDatesArray) {\n      // Store given enabledDates and disabledDates as keys.\n      // This way we can check their existence in O(1) time instead of looping through whole array.\n      // (for example: options.enabledDates['2014-02-27'] === true)\n      var givenDatesIndexed = {};\n      $.each(givenDatesArray, function () {\n        var dDate = parseInputDate(this);\n\n        if (dDate.isValid()) {\n          givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;\n        }\n      });\n      return Object.keys(givenDatesIndexed).length ? givenDatesIndexed : false;\n    };\n\n    var indexGivenHours = function indexGivenHours(givenHoursArray) {\n      // Store given enabledHours and disabledHours as keys.\n      // This way we can check their existence in O(1) time instead of looping through whole array.\n      // (for example: options.enabledHours['2014-02-27'] === true)\n      var givenHoursIndexed = {};\n      $.each(givenHoursArray, function () {\n        givenHoursIndexed[this] = true;\n      });\n      return Object.keys(givenHoursIndexed).length ? givenHoursIndexed : false;\n    };\n\n    var initFormatting = function initFormatting() {\n      var format = options.format || 'L LT';\n      actualFormat = format.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {\n        var newinput = date.localeData().longDateFormat(formatInput) || formatInput;\n        return newinput.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput2) {\n          // temp fix for #740\n          return date.localeData().longDateFormat(formatInput2) || formatInput2;\n        });\n      });\n      parseFormats = options.extraFormats ? options.extraFormats.slice() : [];\n\n      if (parseFormats.indexOf(format) < 0 && parseFormats.indexOf(actualFormat) < 0) {\n        parseFormats.push(actualFormat);\n      }\n\n      use24Hours = actualFormat.toLowerCase().indexOf('a') < 1 && actualFormat.replace(/\\[.*?\\]/g, '').indexOf('h') < 1;\n\n      if (isEnabled('y')) {\n        minViewModeNumber = 2;\n      }\n\n      if (isEnabled('M')) {\n        minViewModeNumber = 1;\n      }\n\n      if (isEnabled('d')) {\n        minViewModeNumber = 0;\n      }\n\n      currentViewMode = Math.max(minViewModeNumber, currentViewMode);\n\n      if (!unset) {\n        setValue(date);\n      }\n    };\n    /** ******************************************************************************\n     *\n     * Public API functions\n     * =====================\n     *\n     * Important: Do not expose direct references to private objects or the options\n     * object to the outer world. Always return a clone when returning values or make\n     * a clone when setting a private variable.\n     *\n     ********************************************************************************/\n\n\n    picker.destroy = function () {\n      // /<summary>Destroys the widget and removes all attached event listeners</summary>\n      hide();\n      detachDatePickerElementEvents();\n      element.removeData('DateTimePicker');\n      element.removeData('date');\n    };\n\n    picker.toggle = toggle;\n    picker.show = show;\n    picker.hide = hide;\n\n    picker.disable = function () {\n      // /<summary>Disables the input element, the component is attached to, by adding a disabled=\"true\" attribute to it.\n      // /If the widget was visible before that call it is hidden. Possibly emits dp.hide</summary>\n      hide();\n\n      if (component && component.hasClass('btn')) {\n        component.addClass('disabled');\n      }\n\n      input.prop('disabled', true);\n      return picker;\n    };\n\n    picker.enable = function () {\n      // /<summary>Enables the input element, the component is attached to, by removing disabled attribute from it.</summary>\n      if (component && component.hasClass('btn')) {\n        component.removeClass('disabled');\n      }\n\n      input.prop('disabled', false);\n      return picker;\n    };\n\n    picker.ignoreReadonly = function (ignoreReadonly) {\n      if (arguments.length === 0) {\n        return options.ignoreReadonly;\n      }\n\n      if (typeof ignoreReadonly !== 'boolean') {\n        throw new TypeError('ignoreReadonly () expects a boolean parameter');\n      }\n\n      options.ignoreReadonly = ignoreReadonly;\n      return picker;\n    };\n\n    picker.options = function (newOptions) {\n      if (arguments.length === 0) {\n        return $.extend(true, {}, options);\n      }\n\n      if (!(newOptions instanceof Object)) {\n        throw new TypeError('options() options parameter should be an object');\n      }\n\n      $.extend(true, options, newOptions);\n      $.each(options, function (key, value) {\n        if (picker[key] !== undefined) {\n          picker[key](value);\n        } else {\n          throw new TypeError('option ' + key + ' is not recognized!');\n        }\n      });\n      return picker;\n    };\n\n    picker.date = function (newDate) {\n      // /<signature helpKeyword=\"$.fn.datetimepicker.date\">\n      // /<summary>Returns the component's model current date, a moment object or null if not set.</summary>\n      // /<returns type=\"Moment\">date.clone()</returns>\n      // /</signature>\n      // /<signature>\n      // /<summary>Sets the components model current moment to it. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.</summary>\n      // /<param name=\"newDate\" locid=\"$.fn.datetimepicker.date_p:newDate\">Takes string, Date, moment, null parameter.</param>\n      // /</signature>\n      if (arguments.length === 0) {\n        if (unset) {\n          return null;\n        }\n\n        return date.clone();\n      }\n\n      if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n        throw new TypeError('date() parameter must be one of [null, string, moment or Date]');\n      }\n\n      setValue(newDate === null ? null : parseInputDate(newDate));\n      return picker;\n    };\n\n    picker.format = function (newFormat) {\n      // /<summary>test su</summary>\n      // /<param name=\"newFormat\">info about para</param>\n      // /<returns type=\"string|boolean\">returns foo</returns>\n      if (arguments.length === 0) {\n        return options.format;\n      }\n\n      if (typeof newFormat !== 'string' && (typeof newFormat !== 'boolean' || newFormat !== false)) {\n        throw new TypeError('format() expects a string or boolean:false parameter ' + newFormat);\n      }\n\n      options.format = newFormat;\n\n      if (actualFormat) {\n        initFormatting(); // reinit formatting\n      }\n\n      return picker;\n    };\n\n    picker.timeZone = function (newZone) {\n      if (arguments.length === 0) {\n        return options.timeZone;\n      }\n\n      if (typeof newZone !== 'string') {\n        throw new TypeError('newZone() expects a string parameter');\n      }\n\n      options.timeZone = newZone;\n      return picker;\n    };\n\n    picker.dayViewHeaderFormat = function (newFormat) {\n      if (arguments.length === 0) {\n        return options.dayViewHeaderFormat;\n      }\n\n      if (typeof newFormat !== 'string') {\n        throw new TypeError('dayViewHeaderFormat() expects a string parameter');\n      }\n\n      options.dayViewHeaderFormat = newFormat;\n      return picker;\n    };\n\n    picker.extraFormats = function (formats) {\n      if (arguments.length === 0) {\n        return options.extraFormats;\n      }\n\n      if (formats !== false && !(formats instanceof Array)) {\n        throw new TypeError('extraFormats() expects an array or false parameter');\n      }\n\n      options.extraFormats = formats;\n\n      if (parseFormats) {\n        initFormatting(); // reinit formatting\n      }\n\n      return picker;\n    };\n\n    picker.disabledDates = function (dates) {\n      // /<signature helpKeyword=\"$.fn.datetimepicker.disabledDates\">\n      // /<summary>Returns an array with the currently set disabled dates on the component.</summary>\n      // /<returns type=\"array\">options.disabledDates</returns>\n      // /</signature>\n      // /<signature>\n      // /<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n      // /options.enabledDates if such exist.</summary>\n      // /<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n      // /</signature>\n      if (arguments.length === 0) {\n        return options.disabledDates ? $.extend({}, options.disabledDates) : options.disabledDates;\n      }\n\n      if (!dates) {\n        options.disabledDates = false;\n        update();\n        return picker;\n      }\n\n      if (!(dates instanceof Array)) {\n        throw new TypeError('disabledDates() expects an array parameter');\n      }\n\n      options.disabledDates = indexGivenDates(dates);\n      options.enabledDates = false;\n      update();\n      return picker;\n    };\n\n    picker.enabledDates = function (dates) {\n      // /<signature helpKeyword=\"$.fn.datetimepicker.enabledDates\">\n      // /<summary>Returns an array with the currently set enabled dates on the component.</summary>\n      // /<returns type=\"array\">options.enabledDates</returns>\n      // /</signature>\n      // /<signature>\n      // /<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledDates if such exist.</summary>\n      // /<param name=\"dates\" locid=\"$.fn.datetimepicker.enabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n      // /</signature>\n      if (arguments.length === 0) {\n        return options.enabledDates ? $.extend({}, options.enabledDates) : options.enabledDates;\n      }\n\n      if (!dates) {\n        options.enabledDates = false;\n        update();\n        return picker;\n      }\n\n      if (!(dates instanceof Array)) {\n        throw new TypeError('enabledDates() expects an array parameter');\n      }\n\n      options.enabledDates = indexGivenDates(dates);\n      options.disabledDates = false;\n      update();\n      return picker;\n    };\n\n    picker.daysOfWeekDisabled = function (daysOfWeekDisabled) {\n      if (arguments.length === 0) {\n        return options.daysOfWeekDisabled.splice(0);\n      }\n\n      if (typeof daysOfWeekDisabled === 'boolean' && !daysOfWeekDisabled) {\n        options.daysOfWeekDisabled = false;\n        update();\n        return picker;\n      }\n\n      if (!(daysOfWeekDisabled instanceof Array)) {\n        throw new TypeError('daysOfWeekDisabled() expects an array parameter');\n      }\n\n      options.daysOfWeekDisabled = daysOfWeekDisabled.reduce(function (previousValue, currentValue) {\n        currentValue = parseInt(currentValue, 10);\n\n        if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {\n          return previousValue;\n        }\n\n        if (previousValue.indexOf(currentValue) === -1) {\n          previousValue.push(currentValue);\n        }\n\n        return previousValue;\n      }, []).sort();\n\n      if (options.useCurrent && !options.keepInvalid) {\n        var tries = 0;\n\n        while (!isValid(date, 'd')) {\n          date.add(1, 'd');\n\n          if (tries === 31) {\n            throw new Error('Tried 31 times to find a valid date');\n          }\n\n          tries++;\n        }\n\n        setValue(date);\n      }\n\n      update();\n      return picker;\n    };\n\n    picker.maxDate = function (maxDate) {\n      if (arguments.length === 0) {\n        return options.maxDate ? options.maxDate.clone() : options.maxDate;\n      }\n\n      if (typeof maxDate === 'boolean' && maxDate === false) {\n        options.maxDate = false;\n        update();\n        return picker;\n      }\n\n      if (typeof maxDate === 'string') {\n        if (maxDate === 'now' || maxDate === 'moment') {\n          maxDate = getMoment();\n        }\n      }\n\n      var parsedDate = parseInputDate(maxDate);\n\n      if (!parsedDate.isValid()) {\n        throw new TypeError('maxDate() Could not parse date parameter: ' + maxDate);\n      }\n\n      if (options.minDate && parsedDate.isBefore(options.minDate)) {\n        throw new TypeError('maxDate() date parameter is before options.minDate: ' + parsedDate.format(actualFormat));\n      }\n\n      options.maxDate = parsedDate;\n\n      if (options.useCurrent && !options.keepInvalid && date.isAfter(maxDate)) {\n        setValue(options.maxDate);\n      }\n\n      if (viewDate.isAfter(parsedDate)) {\n        viewDate = parsedDate.clone().subtract(options.stepping, 'm');\n      }\n\n      update();\n      return picker;\n    };\n\n    picker.minDate = function (minDate) {\n      if (arguments.length === 0) {\n        return options.minDate ? options.minDate.clone() : options.minDate;\n      }\n\n      if (typeof minDate === 'boolean' && minDate === false) {\n        options.minDate = false;\n        update();\n        return picker;\n      }\n\n      if (typeof minDate === 'string') {\n        if (minDate === 'now' || minDate === 'moment') {\n          minDate = getMoment();\n        }\n      }\n\n      var parsedDate = parseInputDate(minDate);\n\n      if (!parsedDate.isValid()) {\n        throw new TypeError('minDate() Could not parse date parameter: ' + minDate);\n      }\n\n      if (options.maxDate && parsedDate.isAfter(options.maxDate)) {\n        throw new TypeError('minDate() date parameter is after options.maxDate: ' + parsedDate.format(actualFormat));\n      }\n\n      options.minDate = parsedDate;\n\n      if (options.useCurrent && !options.keepInvalid && date.isBefore(minDate)) {\n        setValue(options.minDate);\n      }\n\n      if (viewDate.isBefore(parsedDate)) {\n        viewDate = parsedDate.clone().add(options.stepping, 'm');\n      }\n\n      update();\n      return picker;\n    };\n\n    picker.defaultDate = function (defaultDate) {\n      // /<signature helpKeyword=\"$.fn.datetimepicker.defaultDate\">\n      // /<summary>Returns a moment with the options.defaultDate option configuration or false if not set</summary>\n      // /<returns type=\"Moment\">date.clone()</returns>\n      // /</signature>\n      // /<signature>\n      // /<summary>Will set the picker's inital date. If a boolean:false value is passed the options.defaultDate parameter is cleared.</summary>\n      // /<param name=\"defaultDate\" locid=\"$.fn.datetimepicker.defaultDate_p:defaultDate\">Takes a string, Date, moment, boolean:false</param>\n      // /</signature>\n      if (arguments.length === 0) {\n        return options.defaultDate ? options.defaultDate.clone() : options.defaultDate;\n      }\n\n      if (!defaultDate) {\n        options.defaultDate = false;\n        return picker;\n      }\n\n      if (typeof defaultDate === 'string') {\n        if (defaultDate === 'now' || defaultDate === 'moment') {\n          defaultDate = getMoment();\n        } else {\n          defaultDate = getMoment(defaultDate);\n        }\n      }\n\n      var parsedDate = parseInputDate(defaultDate);\n\n      if (!parsedDate.isValid()) {\n        throw new TypeError('defaultDate() Could not parse date parameter: ' + defaultDate);\n      }\n\n      if (!isValid(parsedDate)) {\n        throw new TypeError('defaultDate() date passed is invalid according to component setup validations');\n      }\n\n      options.defaultDate = parsedDate;\n\n      if (options.defaultDate && options.inline || input.val().trim() === '') {\n        setValue(options.defaultDate);\n      }\n\n      return picker;\n    };\n\n    picker.locale = function (locale) {\n      if (arguments.length === 0) {\n        return options.locale;\n      }\n\n      if (!moment.localeData(locale)) {\n        throw new TypeError('locale() locale ' + locale + ' is not loaded from moment locales!');\n      }\n\n      options.locale = locale;\n      date.locale(options.locale);\n      viewDate.locale(options.locale);\n\n      if (actualFormat) {\n        initFormatting(); // reinit formatting\n      }\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.stepping = function (stepping) {\n      if (arguments.length === 0) {\n        return options.stepping;\n      }\n\n      stepping = parseInt(stepping, 10);\n\n      if (isNaN(stepping) || stepping < 1) {\n        stepping = 1;\n      }\n\n      options.stepping = stepping;\n      return picker;\n    };\n\n    picker.useCurrent = function (useCurrent) {\n      var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];\n\n      if (arguments.length === 0) {\n        return options.useCurrent;\n      }\n\n      if (typeof useCurrent !== 'boolean' && typeof useCurrent !== 'string') {\n        throw new TypeError('useCurrent() expects a boolean or string parameter');\n      }\n\n      if (typeof useCurrent === 'string' && useCurrentOptions.indexOf(useCurrent.toLowerCase()) === -1) {\n        throw new TypeError('useCurrent() expects a string parameter of ' + useCurrentOptions.join(', '));\n      }\n\n      options.useCurrent = useCurrent;\n      return picker;\n    };\n\n    picker.collapse = function (collapse) {\n      if (arguments.length === 0) {\n        return options.collapse;\n      }\n\n      if (typeof collapse !== 'boolean') {\n        throw new TypeError('collapse() expects a boolean parameter');\n      }\n\n      if (options.collapse === collapse) {\n        return picker;\n      }\n\n      options.collapse = collapse;\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.icons = function (icons) {\n      if (arguments.length === 0) {\n        return $.extend({}, options.icons);\n      }\n\n      if (!(icons instanceof Object)) {\n        throw new TypeError('icons() expects parameter to be an Object');\n      }\n\n      $.extend(options.icons, icons);\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.tooltips = function (tooltips) {\n      if (arguments.length === 0) {\n        return $.extend({}, options.tooltips);\n      }\n\n      if (!(tooltips instanceof Object)) {\n        throw new TypeError('tooltips() expects parameter to be an Object');\n      }\n\n      $.extend(options.tooltips, tooltips);\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.useStrict = function (useStrict) {\n      if (arguments.length === 0) {\n        return options.useStrict;\n      }\n\n      if (typeof useStrict !== 'boolean') {\n        throw new TypeError('useStrict() expects a boolean parameter');\n      }\n\n      options.useStrict = useStrict;\n      return picker;\n    };\n\n    picker.sideBySide = function (sideBySide) {\n      if (arguments.length === 0) {\n        return options.sideBySide;\n      }\n\n      if (typeof sideBySide !== 'boolean') {\n        throw new TypeError('sideBySide() expects a boolean parameter');\n      }\n\n      options.sideBySide = sideBySide;\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.viewMode = function (viewMode) {\n      if (arguments.length === 0) {\n        return options.viewMode;\n      }\n\n      if (typeof viewMode !== 'string') {\n        throw new TypeError('viewMode() expects a string parameter');\n      }\n\n      if (viewModes.indexOf(viewMode) === -1) {\n        throw new TypeError('viewMode() parameter must be one of (' + viewModes.join(', ') + ') value');\n      }\n\n      options.viewMode = viewMode;\n      currentViewMode = Math.max(viewModes.indexOf(viewMode), minViewModeNumber);\n      showMode();\n      return picker;\n    };\n\n    picker.toolbarPlacement = function (toolbarPlacement) {\n      if (arguments.length === 0) {\n        return options.toolbarPlacement;\n      }\n\n      if (typeof toolbarPlacement !== 'string') {\n        throw new TypeError('toolbarPlacement() expects a string parameter');\n      }\n\n      if (toolbarPlacements.indexOf(toolbarPlacement) === -1) {\n        throw new TypeError('toolbarPlacement() parameter must be one of (' + toolbarPlacements.join(', ') + ') value');\n      }\n\n      options.toolbarPlacement = toolbarPlacement;\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.widgetPositioning = function (widgetPositioning) {\n      if (arguments.length === 0) {\n        return $.extend({}, options.widgetPositioning);\n      }\n\n      if ({}.toString.call(widgetPositioning) !== '[object Object]') {\n        throw new TypeError('widgetPositioning() expects an object variable');\n      }\n\n      if (widgetPositioning.horizontal) {\n        if (typeof widgetPositioning.horizontal !== 'string') {\n          throw new TypeError('widgetPositioning() horizontal variable must be a string');\n        }\n\n        widgetPositioning.horizontal = widgetPositioning.horizontal.toLowerCase();\n\n        if (horizontalModes.indexOf(widgetPositioning.horizontal) === -1) {\n          throw new TypeError('widgetPositioning() expects horizontal parameter to be one of (' + horizontalModes.join(', ') + ')');\n        }\n\n        options.widgetPositioning.horizontal = widgetPositioning.horizontal;\n      }\n\n      if (widgetPositioning.vertical) {\n        if (typeof widgetPositioning.vertical !== 'string') {\n          throw new TypeError('widgetPositioning() vertical variable must be a string');\n        }\n\n        widgetPositioning.vertical = widgetPositioning.vertical.toLowerCase();\n\n        if (verticalModes.indexOf(widgetPositioning.vertical) === -1) {\n          throw new TypeError('widgetPositioning() expects vertical parameter to be one of (' + verticalModes.join(', ') + ')');\n        }\n\n        options.widgetPositioning.vertical = widgetPositioning.vertical;\n      }\n\n      update();\n      return picker;\n    };\n\n    picker.calendarWeeks = function (calendarWeeks) {\n      if (arguments.length === 0) {\n        return options.calendarWeeks;\n      }\n\n      if (typeof calendarWeeks !== 'boolean') {\n        throw new TypeError('calendarWeeks() expects parameter to be a boolean value');\n      }\n\n      options.calendarWeeks = calendarWeeks;\n      update();\n      return picker;\n    };\n\n    picker.showTodayButton = function (showTodayButton) {\n      if (arguments.length === 0) {\n        return options.showTodayButton;\n      }\n\n      if (typeof showTodayButton !== 'boolean') {\n        throw new TypeError('showTodayButton() expects a boolean parameter');\n      }\n\n      options.showTodayButton = showTodayButton;\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.showClear = function (showClear) {\n      if (arguments.length === 0) {\n        return options.showClear;\n      }\n\n      if (typeof showClear !== 'boolean') {\n        throw new TypeError('showClear() expects a boolean parameter');\n      }\n\n      options.showClear = showClear;\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.widgetParent = function (widgetParent) {\n      if (arguments.length === 0) {\n        return options.widgetParent;\n      }\n\n      if (typeof widgetParent === 'string') {\n        widgetParent = $(widgetParent);\n      }\n\n      if (widgetParent !== null && typeof widgetParent !== 'string' && !(widgetParent instanceof $)) {\n        throw new TypeError('widgetParent() expects a string or a jQuery object parameter');\n      }\n\n      options.widgetParent = widgetParent;\n\n      if (widget) {\n        hide();\n        show();\n      }\n\n      return picker;\n    };\n\n    picker.keepOpen = function (keepOpen) {\n      if (arguments.length === 0) {\n        return options.keepOpen;\n      }\n\n      if (typeof keepOpen !== 'boolean') {\n        throw new TypeError('keepOpen() expects a boolean parameter');\n      }\n\n      options.keepOpen = keepOpen;\n      return picker;\n    };\n\n    picker.focusOnShow = function (focusOnShow) {\n      if (arguments.length === 0) {\n        return options.focusOnShow;\n      }\n\n      if (typeof focusOnShow !== 'boolean') {\n        throw new TypeError('focusOnShow() expects a boolean parameter');\n      }\n\n      options.focusOnShow = focusOnShow;\n      return picker;\n    };\n\n    picker.inline = function (inline) {\n      if (arguments.length === 0) {\n        return options.inline;\n      }\n\n      if (typeof inline !== 'boolean') {\n        throw new TypeError('inline() expects a boolean parameter');\n      }\n\n      options.inline = inline;\n      return picker;\n    };\n\n    picker.clear = function () {\n      clear();\n      return picker;\n    };\n\n    picker.keyBinds = function (keyBinds) {\n      if (arguments.length === 0) {\n        return options.keyBinds;\n      }\n\n      options.keyBinds = keyBinds;\n      return picker;\n    };\n\n    picker.getMoment = function (d) {\n      return getMoment(d);\n    };\n\n    picker.debug = function (debug) {\n      if (typeof debug !== 'boolean') {\n        throw new TypeError('debug() expects a boolean parameter');\n      }\n\n      options.debug = debug;\n      return picker;\n    };\n\n    picker.allowInputToggle = function (allowInputToggle) {\n      if (arguments.length === 0) {\n        return options.allowInputToggle;\n      }\n\n      if (typeof allowInputToggle !== 'boolean') {\n        throw new TypeError('allowInputToggle() expects a boolean parameter');\n      }\n\n      options.allowInputToggle = allowInputToggle;\n      return picker;\n    };\n\n    picker.showClose = function (showClose) {\n      if (arguments.length === 0) {\n        return options.showClose;\n      }\n\n      if (typeof showClose !== 'boolean') {\n        throw new TypeError('showClose() expects a boolean parameter');\n      }\n\n      options.showClose = showClose;\n      return picker;\n    };\n\n    picker.keepInvalid = function (keepInvalid) {\n      if (arguments.length === 0) {\n        return options.keepInvalid;\n      }\n\n      if (typeof keepInvalid !== 'boolean') {\n        throw new TypeError('keepInvalid() expects a boolean parameter');\n      }\n\n      options.keepInvalid = keepInvalid;\n      return picker;\n    };\n\n    picker.datepickerInput = function (datepickerInput) {\n      if (arguments.length === 0) {\n        return options.datepickerInput;\n      }\n\n      if (typeof datepickerInput !== 'string') {\n        throw new TypeError('datepickerInput() expects a string parameter');\n      }\n\n      options.datepickerInput = datepickerInput;\n      return picker;\n    };\n\n    picker.parseInputDate = function (parseInputDate) {\n      if (arguments.length === 0) {\n        return options.parseInputDate;\n      }\n\n      if (typeof parseInputDate !== 'function') {\n        throw new TypeError('parseInputDate() sholud be as function');\n      }\n\n      options.parseInputDate = parseInputDate;\n      return picker;\n    };\n\n    picker.disabledTimeIntervals = function (disabledTimeIntervals) {\n      // /<signature helpKeyword=\"$.fn.datetimepicker.disabledTimeIntervals\">\n      // /<summary>Returns an array with the currently set disabled dates on the component.</summary>\n      // /<returns type=\"array\">options.disabledTimeIntervals</returns>\n      // /</signature>\n      // /<signature>\n      // /<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n      // /options.enabledDates if such exist.</summary>\n      // /<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledTimeIntervals_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n      // /</signature>\n      if (arguments.length === 0) {\n        return options.disabledTimeIntervals ? $.extend({}, options.disabledTimeIntervals) : options.disabledTimeIntervals;\n      }\n\n      if (!disabledTimeIntervals) {\n        options.disabledTimeIntervals = false;\n        update();\n        return picker;\n      }\n\n      if (!(disabledTimeIntervals instanceof Array)) {\n        throw new TypeError('disabledTimeIntervals() expects an array parameter');\n      }\n\n      options.disabledTimeIntervals = disabledTimeIntervals;\n      update();\n      return picker;\n    };\n\n    picker.disabledHours = function (hours) {\n      // /<signature helpKeyword=\"$.fn.datetimepicker.disabledHours\">\n      // /<summary>Returns an array with the currently set disabled hours on the component.</summary>\n      // /<returns type=\"array\">options.disabledHours</returns>\n      // /</signature>\n      // /<signature>\n      // /<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n      // /options.enabledHours if such exist.</summary>\n      // /<param name=\"hours\" locid=\"$.fn.datetimepicker.disabledHours_p:hours\">Takes an [ int ] of values and disallows the user to select only from those hours.</param>\n      // /</signature>\n      if (arguments.length === 0) {\n        return options.disabledHours ? $.extend({}, options.disabledHours) : options.disabledHours;\n      }\n\n      if (!hours) {\n        options.disabledHours = false;\n        update();\n        return picker;\n      }\n\n      if (!(hours instanceof Array)) {\n        throw new TypeError('disabledHours() expects an array parameter');\n      }\n\n      options.disabledHours = indexGivenHours(hours);\n      options.enabledHours = false;\n\n      if (options.useCurrent && !options.keepInvalid) {\n        var tries = 0;\n\n        while (!isValid(date, 'h')) {\n          date.add(1, 'h');\n\n          if (tries === 24) {\n            throw new Error('Tried 24 times to find a valid date');\n          }\n\n          tries++;\n        }\n\n        setValue(date);\n      }\n\n      update();\n      return picker;\n    };\n\n    picker.enabledHours = function (hours) {\n      // /<signature helpKeyword=\"$.fn.datetimepicker.enabledHours\">\n      // /<summary>Returns an array with the currently set enabled hours on the component.</summary>\n      // /<returns type=\"array\">options.enabledHours</returns>\n      // /</signature>\n      // /<signature>\n      // /<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledHours if such exist.</summary>\n      // /<param name=\"hours\" locid=\"$.fn.datetimepicker.enabledHours_p:hours\">Takes an [ int ] of values and allows the user to select only from those hours.</param>\n      // /</signature>\n      if (arguments.length === 0) {\n        return options.enabledHours ? $.extend({}, options.enabledHours) : options.enabledHours;\n      }\n\n      if (!hours) {\n        options.enabledHours = false;\n        update();\n        return picker;\n      }\n\n      if (!(hours instanceof Array)) {\n        throw new TypeError('enabledHours() expects an array parameter');\n      }\n\n      options.enabledHours = indexGivenHours(hours);\n      options.disabledHours = false;\n\n      if (options.useCurrent && !options.keepInvalid) {\n        var tries = 0;\n\n        while (!isValid(date, 'h')) {\n          date.add(1, 'h');\n\n          if (tries === 24) {\n            throw new Error('Tried 24 times to find a valid date');\n          }\n\n          tries++;\n        }\n\n        setValue(date);\n      }\n\n      update();\n      return picker;\n    };\n    /**\n     * Returns the component's model current viewDate, a moment object or null if not set. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.\n     * @param {Takes string, viewDate, moment, null parameter.} newDate\n     * @returns {viewDate.clone()}\n     */\n\n\n    picker.viewDate = function (newDate) {\n      if (arguments.length === 0) {\n        return viewDate.clone();\n      }\n\n      if (!newDate) {\n        viewDate = date.clone();\n        return picker;\n      }\n\n      if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n        throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');\n      }\n\n      viewDate = parseInputDate(newDate);\n      viewUpdate();\n      return picker;\n    }; // initializing element and component attributes\n\n\n    if (element.is('input')) {\n      input = element;\n    } else {\n      input = element.find(options.datepickerInput);\n\n      if (input.length === 0) {\n        input = element.find('input');\n      } else if (!input.is('input')) {\n        throw new Error('CSS class \"' + options.datepickerInput + '\" cannot be applied to non input element');\n      }\n    }\n\n    if (element.hasClass('input-group')) {\n      // in case there is more then one 'input-group-addon' Issue #48\n      if (element.find('.datepickerbutton').length === 0) {\n        component = element.find('.input-group-addon');\n      } else {\n        component = element.find('.datepickerbutton');\n      }\n    }\n\n    if (!options.inline && !input.is('input')) {\n      throw new Error('Could not initialize DateTimePicker without an input element');\n    } // Set defaults for date here now instead of in var declaration\n\n\n    date = getMoment();\n    viewDate = date.clone();\n    $.extend(true, options, dataToOptions());\n    picker.options(options);\n    initFormatting();\n    attachDatePickerElementEvents();\n\n    if (input.prop('disabled')) {\n      picker.disable();\n    }\n\n    if (input.is('input') && input.val().trim().length !== 0) {\n      setValue(parseInputDate(input.val().trim()));\n    } else if (options.defaultDate && input.attr('placeholder') === undefined) {\n      setValue(options.defaultDate);\n    }\n\n    if (options.inline) {\n      show();\n    }\n\n    return picker;\n  };\n  /** ******************************************************************************\n   *\n   * jQuery plugin constructor and defaults object\n   *\n   ********************************************************************************/\n\n  /**\n   * See (http://jquery.com/).\n   * @name jQuery\n   * @class\n   * See the jQuery Library  (http://jquery.com/) for full details.  This just\n   * documents the function and classes that are added to jQuery by this plug-in.\n   */\n\n  /**\n   * See (http://jquery.com/)\n   * @name fn\n   * @class\n   * See the jQuery Library  (http://jquery.com/) for full details.  This just\n   * documents the function and classes that are added to jQuery by this plug-in.\n   * @memberOf jQuery\n   */\n\n  /**\n   * Show comments\n   * @class datetimepicker\n   * @memberOf jQuery.fn\n   */\n\n\n  $.fn.datetimepicker = function (options) {\n    options = options || {};\n    var args = Array.prototype.slice.call(arguments, 1);\n    var isInstance = true;\n    var thisMethods = ['destroy', 'hide', 'show', 'toggle'];\n    var returnValue;\n\n    if (_typeof(options) === 'object') {\n      return this.each(function () {\n        var $this = $(this);\n\n        var _options;\n\n        if (!$this.data('DateTimePicker')) {\n          // create a private copy of the defaults object\n          _options = $.extend(true, {}, $.fn.datetimepicker.defaults, options);\n          $this.data('DateTimePicker', dateTimePicker($this, _options));\n        }\n      });\n    } else if (typeof options === 'string') {\n      this.each(function () {\n        var $this = $(this);\n        var instance = $this.data('DateTimePicker');\n\n        if (!instance) {\n          throw new Error('bootstrap-datetimepicker(\"' + options + '\") method was called on an element that is not using DateTimePicker');\n        }\n\n        returnValue = instance[options].apply(instance, args);\n        isInstance = returnValue === instance;\n      });\n\n      if (isInstance || $.inArray(options, thisMethods) > -1) {\n        return this;\n      }\n\n      return returnValue;\n    }\n\n    throw new TypeError('Invalid arguments for DateTimePicker: ' + options);\n  };\n\n  $.fn.datetimepicker.defaults = {\n    timeZone: '',\n    format: false,\n    dayViewHeaderFormat: 'MMMM YYYY',\n    extraFormats: false,\n    stepping: 1,\n    minDate: false,\n    maxDate: false,\n    useCurrent: true,\n    collapse: true,\n    locale: moment.locale(),\n    defaultDate: false,\n    disabledDates: false,\n    enabledDates: false,\n    icons: {\n      time: 'glyphicon glyphicon-time',\n      date: 'glyphicon glyphicon-calendar',\n      up: 'glyphicon glyphicon-chevron-up',\n      down: 'glyphicon glyphicon-chevron-down',\n      previous: 'glyphicon glyphicon-chevron-left',\n      next: 'glyphicon glyphicon-chevron-right',\n      today: 'glyphicon glyphicon-screenshot',\n      clear: 'glyphicon glyphicon-trash',\n      close: 'glyphicon glyphicon-remove'\n    },\n    tooltips: {\n      today: 'Go to today',\n      clear: 'Clear selection',\n      close: 'Close the picker',\n      selectMonth: 'Select Month',\n      prevMonth: 'Previous Month',\n      nextMonth: 'Next Month',\n      selectYear: 'Select Year',\n      prevYear: 'Previous Year',\n      nextYear: 'Next Year',\n      selectDecade: 'Select Decade',\n      prevDecade: 'Previous Decade',\n      nextDecade: 'Next Decade',\n      prevCentury: 'Previous Century',\n      nextCentury: 'Next Century',\n      pickHour: 'Pick Hour',\n      incrementHour: 'Increment Hour',\n      decrementHour: 'Decrement Hour',\n      pickMinute: 'Pick Minute',\n      incrementMinute: 'Increment Minute',\n      decrementMinute: 'Decrement Minute',\n      pickSecond: 'Pick Second',\n      incrementSecond: 'Increment Second',\n      decrementSecond: 'Decrement Second',\n      togglePeriod: 'Toggle Period',\n      selectTime: 'Select Time'\n    },\n    useStrict: false,\n    sideBySide: false,\n    daysOfWeekDisabled: false,\n    calendarWeeks: false,\n    viewMode: 'days',\n    toolbarPlacement: 'default',\n    showTodayButton: false,\n    showClear: false,\n    showClose: false,\n    widgetPositioning: {\n      horizontal: 'auto',\n      vertical: 'auto'\n    },\n    widgetParent: null,\n    ignoreReadonly: false,\n    keepOpen: false,\n    focusOnShow: true,\n    inline: false,\n    keepInvalid: false,\n    datepickerInput: '.datepickerinput',\n    keyBinds: {\n      up: function up(widget) {\n        if (!widget) {\n          return;\n        }\n\n        var d = this.date() || this.getMoment();\n\n        if (widget.find('.datepicker').is(':visible')) {\n          this.date(d.clone().subtract(7, 'd'));\n        } else {\n          this.date(d.clone().add(this.stepping(), 'm'));\n        }\n      },\n      down: function down(widget) {\n        if (!widget) {\n          this.show();\n          return;\n        }\n\n        var d = this.date() || this.getMoment();\n\n        if (widget.find('.datepicker').is(':visible')) {\n          this.date(d.clone().add(7, 'd'));\n        } else {\n          this.date(d.clone().subtract(this.stepping(), 'm'));\n        }\n      },\n      'control up': function controlUp(widget) {\n        if (!widget) {\n          return;\n        }\n\n        var d = this.date() || this.getMoment();\n\n        if (widget.find('.datepicker').is(':visible')) {\n          this.date(d.clone().subtract(1, 'y'));\n        } else {\n          this.date(d.clone().add(1, 'h'));\n        }\n      },\n      'control down': function controlDown(widget) {\n        if (!widget) {\n          return;\n        }\n\n        var d = this.date() || this.getMoment();\n\n        if (widget.find('.datepicker').is(':visible')) {\n          this.date(d.clone().add(1, 'y'));\n        } else {\n          this.date(d.clone().subtract(1, 'h'));\n        }\n      },\n      left: function left(widget) {\n        if (!widget) {\n          return;\n        }\n\n        var d = this.date() || this.getMoment();\n\n        if (widget.find('.datepicker').is(':visible')) {\n          this.date(d.clone().subtract(1, 'd'));\n        }\n      },\n      right: function right(widget) {\n        if (!widget) {\n          return;\n        }\n\n        var d = this.date() || this.getMoment();\n\n        if (widget.find('.datepicker').is(':visible')) {\n          this.date(d.clone().add(1, 'd'));\n        }\n      },\n      pageUp: function pageUp(widget) {\n        if (!widget) {\n          return;\n        }\n\n        var d = this.date() || this.getMoment();\n\n        if (widget.find('.datepicker').is(':visible')) {\n          this.date(d.clone().subtract(1, 'M'));\n        }\n      },\n      pageDown: function pageDown(widget) {\n        if (!widget) {\n          return;\n        }\n\n        var d = this.date() || this.getMoment();\n\n        if (widget.find('.datepicker').is(':visible')) {\n          this.date(d.clone().add(1, 'M'));\n        }\n      },\n      enter: function enter() {\n        this.hide();\n      },\n      escape: function escape() {\n        this.hide();\n      },\n      // tab: function (widget) { //this break the flow of the form. disabling for now\n      //    var toggle = widget.find('.picker-switch a[data-action=\"togglePicker\"]');\n      //    if(toggle.length > 0) toggle.click();\n      // },\n      'control space': function controlSpace(widget) {\n        if (!widget) {\n          return;\n        }\n\n        if (widget.find('.timepicker').is(':visible')) {\n          widget.find('.btn[data-action=\"togglePeriod\"]').click();\n        }\n      },\n      t: function t() {\n        this.date(this.getMoment());\n      },\n      'delete': function _delete() {\n        this.clear();\n      }\n    },\n    debug: false,\n    allowInputToggle: false,\n    disabledTimeIntervals: false,\n    disabledHours: false,\n    enabledHours: false,\n    viewDate: false\n  };\n  return $.fn.datetimepicker;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/bootstrap-datetimepicker.js\n");

/***/ }),

/***/ "./app/utils/bootstrap-dropdown.js":
/*!*****************************************!*\
  !*** ./app/utils/bootstrap-dropdown.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.4.1\n * https://getbootstrap.com/docs/3.4/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2019 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/v3-dev/LICENSE)\n * ======================================================================== */\n\n+function ($) {\n  'use strict'; // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop';\n  var toggle = '[data-toggle=\"dropdown\"]';\n\n  var Dropdown = function Dropdown(element) {\n    $(element).on('click.bs.dropdown', this.toggle);\n  };\n\n  Dropdown.VERSION = '3.4.1';\n\n  function getParent($this) {\n    var selector = $this.attr('data-target');\n\n    if (!selector) {\n      selector = $this.attr('href');\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n    }\n\n    var $parent = selector !== '#' ? $(document).find(selector) : null;\n    return $parent && $parent.length ? $parent : $this.parent();\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) {\n      return;\n    }\n\n    $(backdrop).remove();\n    $(toggle).each(function () {\n      var $this = $(this);\n      var $parent = getParent($this);\n      var relatedTarget = {\n        relatedTarget: this\n      };\n\n      if (!$parent.hasClass('open')) {\n        return;\n      }\n\n      if (e && e.type === 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) {\n        return;\n      }\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget));\n\n      if (e.isDefaultPrevented()) {\n        return;\n      }\n\n      $this.attr('aria-expanded', 'false');\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget));\n    });\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this);\n\n    if ($this.is('.disabled, :disabled')) {\n      return;\n    }\n\n    var $parent = getParent($this);\n    var isActive = $parent.hasClass('open');\n    clearMenus();\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div')).addClass('dropdown-backdrop').insertAfter($(this)).on('click', clearMenus);\n      }\n\n      var relatedTarget = {\n        relatedTarget: this\n      };\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget));\n\n      if (e.isDefaultPrevented()) {\n        return;\n      }\n\n      $this.trigger('focus').attr('aria-expanded', 'true');\n      $parent.toggleClass('open').trigger($.Event('shown.bs.dropdown', relatedTarget));\n    }\n\n    return false;\n  };\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return;\n    var $this = $(this);\n    e.preventDefault();\n    e.stopPropagation();\n\n    if ($this.is('.disabled, :disabled')) {\n      return;\n    }\n\n    var $parent = getParent($this);\n    var isActive = $parent.hasClass('open');\n\n    if (!isActive && e.which !== 27 || isActive && e.which === 27) {\n      if (e.which === 27) {\n        $parent.find(toggle).trigger('focus');\n      }\n\n      return $this.trigger('click');\n    }\n\n    var desc = ' li:not(.disabled):visible a';\n    var $items = $parent.find('.dropdown-menu' + desc);\n\n    if (!$items.length) {\n      return;\n    }\n\n    var index = $items.index(e.target);\n\n    if (e.which === 38 && index > 0) {\n      index--;\n    } // up\n\n\n    if (e.which === 40 && index < $items.length - 1) {\n      index++;\n    } // down\n\n\n    if (!~index) {\n      index = 0;\n    }\n\n    $items.eq(index).trigger('focus');\n  }; // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.dropdown');\n      if (!data) $this.data('bs.dropdown', data = new Dropdown(this));\n      if (typeof option === 'string') data[option].call($this);\n    });\n  }\n\n  var old = $.fn.dropdown;\n  $.fn.dropdown = Plugin;\n  $.fn.dropdown.Constructor = Dropdown; // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old;\n    return this;\n  }; // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n\n  $(document).on('click.bs.dropdown.data-api', clearMenus).on('click.bs.dropdown.data-api', '.dropdown form', function (e) {\n    e.stopPropagation();\n  }).on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown).on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown);\n}((jquery__WEBPACK_IMPORTED_MODULE_0___default()));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/bootstrap-dropdown.js\n");

/***/ }),

/***/ "./app/utils/bootstrap-transition.js":
/*!*******************************************!*\
  !*** ./app/utils/bootstrap-transition.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\n+function ($) {\n  'use strict'; // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap');\n    var transEndEventNames = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return {\n          end: transEndEventNames[name]\n        };\n      }\n    }\n\n    return false; // explicit for ie8 (  ._.)\n  } // http://blog.alexmaccaw.com/css-transitions\n\n\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false;\n    var $el = this;\n    $(this).one('bsTransitionEnd', function () {\n      called = true;\n    });\n\n    var callback = function callback() {\n      if (!called) $($el).trigger($.support.transition.end);\n    };\n\n    setTimeout(callback, duration);\n    return this;\n  };\n\n  $(function () {\n    $.support.transition = transitionEnd();\n    if (!$.support.transition) return;\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function handle(e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);\n      }\n    };\n  });\n}((jquery__WEBPACK_IMPORTED_MODULE_0___default()));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvYm9vdHN0cmFwLXRyYW5zaXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFFQSxDQUFFLFVBQVNDLENBQVQsRUFBWTtBQUNWLGVBRFUsQ0FHVjtBQUNBOztBQUVBLFdBQVNDLGFBQVQsR0FBeUI7QUFDckIsUUFBSUMsRUFBRSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsV0FBdkIsQ0FBVDtBQUVBLFFBQUlDLGtCQUFrQixHQUFHO0FBQ3JCQyxNQUFBQSxnQkFBZ0IsRUFBRSxxQkFERztBQUVyQkMsTUFBQUEsYUFBYSxFQUFFLGVBRk07QUFHckJDLE1BQUFBLFdBQVcsRUFBRSwrQkFIUTtBQUlyQkMsTUFBQUEsVUFBVSxFQUFFO0FBSlMsS0FBekI7O0FBT0EsU0FBSyxJQUFJQyxJQUFULElBQWlCTCxrQkFBakIsRUFBcUM7QUFDakMsVUFBSUgsRUFBRSxDQUFDUyxLQUFILENBQVNELElBQVQsTUFBbUJFLFNBQXZCLEVBQWtDO0FBQzlCLGVBQU87QUFBRUMsVUFBQUEsR0FBRyxFQUFFUixrQkFBa0IsQ0FBQ0ssSUFBRDtBQUF6QixTQUFQO0FBQ0g7QUFDSjs7QUFFRCxXQUFPLEtBQVAsQ0FoQnFCLENBZ0JQO0FBQ2pCLEdBdkJTLENBeUJWOzs7QUFDQVYsRUFBQUEsQ0FBQyxDQUFDYyxFQUFGLENBQUtDLG9CQUFMLEdBQTRCLFVBQVNDLFFBQVQsRUFBbUI7QUFDM0MsUUFBSUMsTUFBTSxHQUFHLEtBQWI7QUFDQSxRQUFJQyxHQUFHLEdBQUcsSUFBVjtBQUNBbEIsSUFBQUEsQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRbUIsR0FBUixDQUFZLGlCQUFaLEVBQStCLFlBQVc7QUFBRUYsTUFBQUEsTUFBTSxHQUFHLElBQVQ7QUFBZ0IsS0FBNUQ7O0FBQ0EsUUFBSUcsUUFBUSxHQUFHLFNBQVhBLFFBQVcsR0FBVztBQUFFLFVBQUksQ0FBQ0gsTUFBTCxFQUFhakIsQ0FBQyxDQUFDa0IsR0FBRCxDQUFELENBQU9HLE9BQVAsQ0FBZXJCLENBQUMsQ0FBQ3NCLE9BQUYsQ0FBVWIsVUFBVixDQUFxQkksR0FBcEM7QUFBMkMsS0FBcEY7O0FBQ0FVLElBQUFBLFVBQVUsQ0FBQ0gsUUFBRCxFQUFXSixRQUFYLENBQVY7QUFDQSxXQUFPLElBQVA7QUFDSCxHQVBEOztBQVNBaEIsRUFBQUEsQ0FBQyxDQUFDLFlBQVc7QUFDVEEsSUFBQUEsQ0FBQyxDQUFDc0IsT0FBRixDQUFVYixVQUFWLEdBQXVCUixhQUFhLEVBQXBDO0FBRUEsUUFBSSxDQUFDRCxDQUFDLENBQUNzQixPQUFGLENBQVViLFVBQWYsRUFBMkI7QUFFM0JULElBQUFBLENBQUMsQ0FBQ3dCLEtBQUYsQ0FBUUMsT0FBUixDQUFnQkMsZUFBaEIsR0FBa0M7QUFDOUJDLE1BQUFBLFFBQVEsRUFBRTNCLENBQUMsQ0FBQ3NCLE9BQUYsQ0FBVWIsVUFBVixDQUFxQkksR0FERDtBQUU5QmUsTUFBQUEsWUFBWSxFQUFFNUIsQ0FBQyxDQUFDc0IsT0FBRixDQUFVYixVQUFWLENBQXFCSSxHQUZMO0FBRzlCZ0IsTUFBQUEsTUFBTSxFQUFFLGdCQUFTQyxDQUFULEVBQVk7QUFDaEIsWUFBSTlCLENBQUMsQ0FBQzhCLENBQUMsQ0FBQ0MsTUFBSCxDQUFELENBQVlDLEVBQVosQ0FBZSxJQUFmLENBQUosRUFBMEIsT0FBT0YsQ0FBQyxDQUFDRyxTQUFGLENBQVlDLE9BQVosQ0FBb0JDLEtBQXBCLENBQTBCLElBQTFCLEVBQWdDQyxTQUFoQyxDQUFQO0FBQzdCO0FBTDZCLEtBQWxDO0FBT0gsR0FaQSxDQUFEO0FBY0gsQ0FqREMsQ0FpREFyQywrQ0FqREEsQ0FBRiIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvdXRpbHMvYm9vdHN0cmFwLXRyYW5zaXRpb24uanM/NmVhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgalF1ZXJ5IGZyb20gJ2pxdWVyeSc7XG5cbisoZnVuY3Rpb24oJCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIC8vIENTUyBUUkFOU0lUSU9OIFNVUFBPUlQgKFNob3V0b3V0OiBodHRwOi8vd3d3Lm1vZGVybml6ci5jb20vKVxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gICAgZnVuY3Rpb24gdHJhbnNpdGlvbkVuZCgpIHtcbiAgICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYm9vdHN0cmFwJyk7XG5cbiAgICAgICAgdmFyIHRyYW5zRW5kRXZlbnROYW1lcyA9IHtcbiAgICAgICAgICAgIFdlYmtpdFRyYW5zaXRpb246ICd3ZWJraXRUcmFuc2l0aW9uRW5kJyxcbiAgICAgICAgICAgIE1velRyYW5zaXRpb246ICd0cmFuc2l0aW9uZW5kJyxcbiAgICAgICAgICAgIE9UcmFuc2l0aW9uOiAnb1RyYW5zaXRpb25FbmQgb3RyYW5zaXRpb25lbmQnLFxuICAgICAgICAgICAgdHJhbnNpdGlvbjogJ3RyYW5zaXRpb25lbmQnXG4gICAgICAgIH07XG5cbiAgICAgICAgZm9yICh2YXIgbmFtZSBpbiB0cmFuc0VuZEV2ZW50TmFtZXMpIHtcbiAgICAgICAgICAgIGlmIChlbC5zdHlsZVtuYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZW5kOiB0cmFuc0VuZEV2ZW50TmFtZXNbbmFtZV0gfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmYWxzZTsgLy8gZXhwbGljaXQgZm9yIGllOCAoICAuXy4pXG4gICAgfVxuXG4gICAgLy8gaHR0cDovL2Jsb2cuYWxleG1hY2Nhdy5jb20vY3NzLXRyYW5zaXRpb25zXG4gICAgJC5mbi5lbXVsYXRlVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uKGR1cmF0aW9uKSB7XG4gICAgICAgIHZhciBjYWxsZWQgPSBmYWxzZTtcbiAgICAgICAgdmFyICRlbCA9IHRoaXM7XG4gICAgICAgICQodGhpcykub25lKCdic1RyYW5zaXRpb25FbmQnLCBmdW5jdGlvbigpIHsgY2FsbGVkID0gdHJ1ZTsgfSk7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IGZ1bmN0aW9uKCkgeyBpZiAoIWNhbGxlZCkgJCgkZWwpLnRyaWdnZXIoJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kKTsgfTtcbiAgICAgICAgc2V0VGltZW91dChjYWxsYmFjaywgZHVyYXRpb24pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgJChmdW5jdGlvbigpIHtcbiAgICAgICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gPSB0cmFuc2l0aW9uRW5kKCk7XG5cbiAgICAgICAgaWYgKCEkLnN1cHBvcnQudHJhbnNpdGlvbikgcmV0dXJuO1xuXG4gICAgICAgICQuZXZlbnQuc3BlY2lhbC5ic1RyYW5zaXRpb25FbmQgPSB7XG4gICAgICAgICAgICBiaW5kVHlwZTogJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kLFxuICAgICAgICAgICAgZGVsZWdhdGVUeXBlOiAkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsXG4gICAgICAgICAgICBoYW5kbGU6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoJChlLnRhcmdldCkuaXModGhpcykpIHJldHVybiBlLmhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSk7XG5cbn0oalF1ZXJ5KSk7XG4iXSwibmFtZXMiOlsialF1ZXJ5IiwiJCIsInRyYW5zaXRpb25FbmQiLCJlbCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInRyYW5zRW5kRXZlbnROYW1lcyIsIldlYmtpdFRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uIiwiT1RyYW5zaXRpb24iLCJ0cmFuc2l0aW9uIiwibmFtZSIsInN0eWxlIiwidW5kZWZpbmVkIiwiZW5kIiwiZm4iLCJlbXVsYXRlVHJhbnNpdGlvbkVuZCIsImR1cmF0aW9uIiwiY2FsbGVkIiwiJGVsIiwib25lIiwiY2FsbGJhY2siLCJ0cmlnZ2VyIiwic3VwcG9ydCIsInNldFRpbWVvdXQiLCJldmVudCIsInNwZWNpYWwiLCJic1RyYW5zaXRpb25FbmQiLCJiaW5kVHlwZSIsImRlbGVnYXRlVHlwZSIsImhhbmRsZSIsImUiLCJ0YXJnZXQiLCJpcyIsImhhbmRsZU9iaiIsImhhbmRsZXIiLCJhcHBseSIsImFyZ3VtZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/utils/bootstrap-transition.js\n");

/***/ }),

/***/ "./app/utils/changelog.js":
/*!********************************!*\
  !*** ./app/utils/changelog.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* eslint-disable */\n\nvar TRIGGER = null;\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('click', '[data-remodal-changelog]', function (event) {\n  TRIGGER = event.currentTarget;\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('opened', '[data-remodal-id=\"changelog\"]', function () {\n  var instance = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=changelog]').data('remodal')];\n  instance.$modal.html('<div class=\"changelog-overflow center\" style=\"padding:5rem 0;text-align:center;\"><i class=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i></div>');\n\n  if (!TRIGGER) {\n    return true;\n  }\n\n  var url = jquery__WEBPACK_IMPORTED_MODULE_0___default()(TRIGGER).data('remodalChangelog');\n  jquery__WEBPACK_IMPORTED_MODULE_0___default().ajax({\n    url: url\n  }).done(function (data) {\n    instance.$modal.html(data);\n  });\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('closed', '[data-remodal-id=\"changelog\"]', function () {\n  var instance = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-remodal-id=changelog]').data('remodal')];\n  instance.$modal.html('');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvY2hhbmdlbG9nLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBO0FBQ0E7QUFFQSxJQUFJQyxPQUFPLEdBQUcsSUFBZDtBQUVBRCw2Q0FBQyxDQUFDRSxRQUFELENBQUQsQ0FBWUMsRUFBWixDQUFlLE9BQWYsRUFBd0IsMEJBQXhCLEVBQW9ELFVBQUNDLEtBQUQsRUFBVztBQUMzREgsRUFBQUEsT0FBTyxHQUFHRyxLQUFLLENBQUNDLGFBQWhCO0FBQ0gsQ0FGRDtBQUlBTCw2Q0FBQyxDQUFDRSxRQUFELENBQUQsQ0FBWUMsRUFBWixDQUFlLFFBQWYsRUFBeUIsK0JBQXpCLEVBQTBELFlBQU07QUFDNUQsTUFBTUcsUUFBUSxHQUFHTiw4REFBQSxDQUFpQkEsNkNBQUMsQ0FBQyw2QkFBRCxDQUFELENBQWlDUyxJQUFqQyxDQUFzQyxTQUF0QyxDQUFqQixDQUFqQjtBQUNBSCxFQUFBQSxRQUFRLENBQUNJLE1BQVQsQ0FBZ0JDLElBQWhCLENBQXFCLDBJQUFyQjs7QUFDQSxNQUFJLENBQUNWLE9BQUwsRUFBYztBQUFFLFdBQU8sSUFBUDtBQUFjOztBQUU5QixNQUFNVyxHQUFHLEdBQUdaLDZDQUFDLENBQUNDLE9BQUQsQ0FBRCxDQUFXUSxJQUFYLENBQWdCLGtCQUFoQixDQUFaO0FBRUFULEVBQUFBLGtEQUFBLENBQU87QUFBQ1ksSUFBQUEsR0FBRyxFQUFFQTtBQUFOLEdBQVAsRUFBbUJFLElBQW5CLENBQXdCLFVBQVNMLElBQVQsRUFBZTtBQUNuQ0gsSUFBQUEsUUFBUSxDQUFDSSxNQUFULENBQWdCQyxJQUFoQixDQUFxQkYsSUFBckI7QUFDSCxHQUZEO0FBR0gsQ0FWRDtBQVlBVCw2Q0FBQyxDQUFDRSxRQUFELENBQUQsQ0FBWUMsRUFBWixDQUFlLFFBQWYsRUFBeUIsK0JBQXpCLEVBQTBELFlBQU07QUFDNUQsTUFBTUcsUUFBUSxHQUFHTiw4REFBQSxDQUFpQkEsNkNBQUMsQ0FBQyw2QkFBRCxDQUFELENBQWlDUyxJQUFqQyxDQUFzQyxTQUF0QyxDQUFqQixDQUFqQjtBQUNBSCxFQUFBQSxRQUFRLENBQUNJLE1BQVQsQ0FBZ0JDLElBQWhCLENBQXFCLEVBQXJCO0FBQ0gsQ0FIRCIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvdXRpbHMvY2hhbmdlbG9nLmpzPzc2MWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbmltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmxldCBUUklHR0VSID0gbnVsbDtcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywgJ1tkYXRhLXJlbW9kYWwtY2hhbmdlbG9nXScsIChldmVudCkgPT4ge1xuICAgIFRSSUdHRVIgPSBldmVudC5jdXJyZW50VGFyZ2V0O1xufSk7XG5cbiQoZG9jdW1lbnQpLm9uKCdvcGVuZWQnLCAnW2RhdGEtcmVtb2RhbC1pZD1cImNoYW5nZWxvZ1wiXScsICgpID0+IHtcbiAgICBjb25zdCBpbnN0YW5jZSA9ICQucmVtb2RhbC5sb29rdXBbJCgnW2RhdGEtcmVtb2RhbC1pZD1jaGFuZ2Vsb2ddJykuZGF0YSgncmVtb2RhbCcpXTtcbiAgICBpbnN0YW5jZS4kbW9kYWwuaHRtbCgnPGRpdiBjbGFzcz1cImNoYW5nZWxvZy1vdmVyZmxvdyBjZW50ZXJcIiBzdHlsZT1cInBhZGRpbmc6NXJlbSAwO3RleHQtYWxpZ246Y2VudGVyO1wiPjxpIGNsYXNzPVwiZmEgZmEtc3Bpbm5lciBmYS1zcGluIGZhLTN4IGZhLWZ3XCI+PC9pPjwvZGl2PicpO1xuICAgIGlmICghVFJJR0dFUikgeyByZXR1cm4gdHJ1ZTsgfVxuXG4gICAgY29uc3QgdXJsID0gJChUUklHR0VSKS5kYXRhKCdyZW1vZGFsQ2hhbmdlbG9nJyk7XG5cbiAgICAkLmFqYXgoe3VybDogdXJsfSkuZG9uZShmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIGluc3RhbmNlLiRtb2RhbC5odG1sKGRhdGEpO1xuICAgIH0pO1xufSk7XG5cbiQoZG9jdW1lbnQpLm9uKCdjbG9zZWQnLCAnW2RhdGEtcmVtb2RhbC1pZD1cImNoYW5nZWxvZ1wiXScsICgpID0+IHtcbiAgICBjb25zdCBpbnN0YW5jZSA9ICQucmVtb2RhbC5sb29rdXBbJCgnW2RhdGEtcmVtb2RhbC1pZD1jaGFuZ2Vsb2ddJykuZGF0YSgncmVtb2RhbCcpXTtcbiAgICBpbnN0YW5jZS4kbW9kYWwuaHRtbCgnJyk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwiVFJJR0dFUiIsImRvY3VtZW50Iiwib24iLCJldmVudCIsImN1cnJlbnRUYXJnZXQiLCJpbnN0YW5jZSIsInJlbW9kYWwiLCJsb29rdXAiLCJkYXRhIiwiJG1vZGFsIiwiaHRtbCIsInVybCIsImFqYXgiLCJkb25lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/changelog.js\n");

/***/ }),

/***/ "./app/utils/colors.js":
/*!*****************************!*\
  !*** ./app/utils/colors.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseHex\": () => (/* binding */ parseHex),\n/* harmony export */   \"hsb2rgb\": () => (/* binding */ hsb2rgb),\n/* harmony export */   \"rgb2hex\": () => (/* binding */ rgb2hex),\n/* harmony export */   \"rgbstr2hex\": () => (/* binding */ rgbstr2hex),\n/* harmony export */   \"hsb2hex\": () => (/* binding */ hsb2hex),\n/* harmony export */   \"hex2hsb\": () => (/* binding */ hex2hsb),\n/* harmony export */   \"rgb2hsb\": () => (/* binding */ rgb2hsb),\n/* harmony export */   \"hex2rgb\": () => (/* binding */ hex2rgb)\n/* harmony export */ });\n// Parses a string and returns a valid hex string when possible\n// parseHex('#fff') => '#ffffff'\nvar parseHex = function parseHex(string) {\n  string = string.replace(/[^A-F0-9]/ig, '');\n  if (string.length !== 3 && string.length !== 6) return '';\n\n  if (string.length === 3) {\n    string = string[0] + string[0] + string[1] + string[1] + string[2] + string[2];\n  }\n\n  return '#' + string.toLowerCase();\n}; // Converts an HSB object to an RGB object\n// hsb2rgb({h: 0, s: 0, b: 100}) => {r: 255, g: 255, b: 255}\n\nvar hsb2rgb = function hsb2rgb(hsb) {\n  var rgb = {};\n  var h = Math.round(hsb.h);\n  var s = Math.round(hsb.s * 255 / 100);\n  var v = Math.round(hsb.b * 255 / 100);\n\n  if (s === 0) {\n    rgb.r = rgb.g = rgb.b = v;\n  } else {\n    var t1 = v;\n    var t2 = (255 - s) * v / 255;\n    var t3 = (t1 - t2) * (h % 60) / 60;\n    if (h === 360) h = 0;\n\n    if (h < 60) {\n      rgb.r = t1;\n      rgb.b = t2;\n      rgb.g = t2 + t3;\n    } else if (h < 120) {\n      rgb.g = t1;\n      rgb.b = t2;\n      rgb.r = t1 - t3;\n    } else if (h < 180) {\n      rgb.g = t1;\n      rgb.r = t2;\n      rgb.b = t2 + t3;\n    } else if (h < 240) {\n      rgb.b = t1;\n      rgb.r = t2;\n      rgb.g = t1 - t3;\n    } else if (h < 300) {\n      rgb.b = t1;\n      rgb.g = t2;\n      rgb.r = t2 + t3;\n    } else if (h < 360) {\n      rgb.r = t1;\n      rgb.g = t2;\n      rgb.b = t1 - t3;\n    } else {\n      rgb.r = 0;\n      rgb.g = 0;\n      rgb.b = 0;\n    }\n  }\n\n  return {\n    r: Math.round(rgb.r),\n    g: Math.round(rgb.g),\n    b: Math.round(rgb.b)\n  };\n}; // Converts an RGB object to a HEX string\n// rgb2hex({r: 255, g: 255, b: 255}) => #ffffff\n\nvar rgb2hex = function rgb2hex(rgb) {\n  var hex = [rgb.r.toString(16), rgb.g.toString(16), rgb.b.toString(16)];\n  hex.forEach(function (val, nr) {\n    if (val.length === 1) hex[nr] = '0' + val;\n  });\n  return '#' + hex.join('');\n}; // Converts and RGB(a) string to a HEX string\n// rgbstr2hex('rgba(255, 255, 255, 0.5)') => #ffffff\n\nvar rgbstr2hex = function rgbstr2hex(rgb) {\n  rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n  return rgb && rgb.length === 4 ? '#' + ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\n}; // Converts an HSB object to a HEX string\n// hsb2hex({h: 0, s: 0, b: 100}) => #ffffff\n\nvar hsb2hex = function hsb2hex(hsb) {\n  return rgb2hex(hsb2rgb(hsb));\n}; // Converts a HEX string to an HSB object\n// hex2hsb('#ffffff') => {h: 0, s: 0, b: 100}\n\nvar hex2hsb = function hex2hsb(hex) {\n  var hsb = rgb2hsb(hex2rgb(hex));\n  if (hsb.s === 0) hsb.h = 360;\n  return hsb;\n}; // Converts an RGB object to an HSB object\n// rgb2hsb({r: 255, g: 255, b: 255}) => {h: 0, s: 0, b: 100}\n\nvar rgb2hsb = function rgb2hsb(rgb) {\n  var hsb = {\n    h: 0,\n    s: 0,\n    b: 0\n  };\n  var min = Math.min(rgb.r, rgb.g, rgb.b);\n  var max = Math.max(rgb.r, rgb.g, rgb.b);\n  var delta = max - min;\n  hsb.b = max;\n  hsb.s = max !== 0 ? 255 * delta / max : 0;\n\n  if (hsb.s !== 0) {\n    if (rgb.r === max) {\n      hsb.h = (rgb.g - rgb.b) / delta;\n    } else if (rgb.g === max) {\n      hsb.h = 2 + (rgb.b - rgb.r) / delta;\n    } else {\n      hsb.h = 4 + (rgb.r - rgb.g) / delta;\n    }\n  } else {\n    hsb.h = -1;\n  }\n\n  hsb.h *= 60;\n\n  if (hsb.h < 0) {\n    hsb.h += 360;\n  }\n\n  hsb.s *= 100 / 255;\n  hsb.b *= 100 / 255;\n  return hsb;\n}; // Converts a HEX string to an RGB object\n// hex2rgb('#ffffff') => {r: 255, g: 255, b: 255}\n\nvar hex2rgb = function hex2rgb(hex) {\n  hex = parseInt(hex.indexOf('#') > -1 ? hex.substring(1) : hex, 16);\n  return {\n    /* jshint ignore:start */\n    r: hex >> 16,\n    g: (hex & 0x00FF00) >> 8,\n    b: hex & 0x0000FF\n    /* jshint ignore:end */\n\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/colors.js\n");

/***/ }),

/***/ "./app/utils/cookies.js":
/*!******************************!*\
  !*** ./app/utils/cookies.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/*\n * Cookies.js - 1.2.3-grav\n * https://github.com/ScottHamper/Cookies\n *\n * With SameSite support by Grav\n *\n * This is free and unencumbered software released into the public domain.\n */\nvar factory = function factory(window) {\n  var _arguments = arguments;\n\n  if (_typeof(window.document) !== 'object') {\n    throw new Error('Cookies.js requires a `window` with a `document` object');\n  }\n\n  var Cookies = function Cookies(key, value, options) {\n    return _arguments.length === 1 ? Cookies.get(key) : Cookies.set(key, value, options);\n  }; // Allows for setter injection in unit tests\n\n\n  Cookies._document = window.document; // Used to ensure cookie keys do not collide with\n  // built-in `Object` properties\n\n  Cookies._cacheKeyPrefix = 'cookey.'; // Hurr hurr, :)\n\n  Cookies._maxExpireDate = new Date('Fri, 31 Dec 9999 23:59:59 UTC');\n  Cookies.defaults = {\n    path: '/',\n    secure: false,\n    sameSite: 'Lax'\n  };\n\n  Cookies.get = function (key) {\n    if (Cookies._cachedDocumentCookie !== Cookies._document.cookie) {\n      Cookies._renewCache();\n    }\n\n    var value = Cookies._cache[Cookies._cacheKeyPrefix + key];\n    return value === undefined ? undefined : decodeURIComponent(value);\n  };\n\n  Cookies.set = function (key, value, options) {\n    options = Cookies._getExtendedOptions(options);\n    options.expires = Cookies._getExpiresDate(value === undefined ? -1 : options.expires);\n    Cookies._document.cookie = Cookies._generateCookieString(key, value, options);\n    return Cookies;\n  };\n\n  Cookies.expire = function (key, options) {\n    return Cookies.set(key, undefined, options);\n  };\n\n  Cookies._getExtendedOptions = function (options) {\n    return {\n      path: options && options.path || Cookies.defaults.path,\n      domain: options && options.domain || Cookies.defaults.domain,\n      expires: options && options.expires || Cookies.defaults.expires,\n      secure: options && options.secure !== undefined ? options.secure : Cookies.defaults.secure,\n      sameSite: options && options.sameSite || Cookies.defaults.sameSite\n    };\n  };\n\n  Cookies._isValidDate = function (date) {\n    return Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date.getTime());\n  };\n\n  Cookies._getExpiresDate = function (expires, now) {\n    now = now || new Date();\n\n    if (typeof expires === 'number') {\n      expires = expires === Infinity ? Cookies._maxExpireDate : new Date(now.getTime() + expires * 1000);\n    } else if (typeof expires === 'string') {\n      expires = new Date(expires);\n    }\n\n    if (expires && !Cookies._isValidDate(expires)) {\n      throw new Error('`expires` parameter cannot be converted to a valid Date instance');\n    }\n\n    return expires;\n  };\n\n  Cookies._generateCookieString = function (key, value, options) {\n    key = key.replace(/[^#$&+\\^`|]/g, encodeURIComponent);\n    key = key.replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n    value = (value + '').replace(/[^!#$&-+\\--:<-\\[\\]-~]/g, encodeURIComponent);\n    options = options || {};\n    var cookieString = key + '=' + value;\n    cookieString += options.path ? ';path=' + options.path : '';\n    cookieString += options.domain ? ';domain=' + options.domain : '';\n    cookieString += options.expires ? ';expires=' + options.expires.toUTCString() : '';\n    cookieString += options.secure ? ';secure' : '';\n    cookieString += options.sameSite ? ';SameSite=' + options.sameSite : '';\n    return cookieString;\n  };\n\n  Cookies._getCacheFromString = function (documentCookie) {\n    var cookieCache = {};\n    var cookiesArray = documentCookie ? documentCookie.split('; ') : [];\n\n    for (var i = 0; i < cookiesArray.length; i++) {\n      var cookieKvp = Cookies._getKeyValuePairFromCookieString(cookiesArray[i]);\n\n      if (cookieCache[Cookies._cacheKeyPrefix + cookieKvp.key] === undefined) {\n        cookieCache[Cookies._cacheKeyPrefix + cookieKvp.key] = cookieKvp.value;\n      }\n    }\n\n    return cookieCache;\n  };\n\n  Cookies._getKeyValuePairFromCookieString = function (cookieString) {\n    // \"=\" is a valid character in a cookie value according to RFC6265, so cannot `split('=')`\n    var separatorIndex = cookieString.indexOf('='); // IE omits the \"=\" when the cookie value is an empty string\n\n    separatorIndex = separatorIndex < 0 ? cookieString.length : separatorIndex;\n    var key = cookieString.substr(0, separatorIndex);\n    var decodedKey;\n\n    try {\n      decodedKey = decodeURIComponent(key);\n    } catch (e) {\n      if (console && typeof console.error === 'function') {\n        console.error('Could not decode cookie with key \"' + key + '\"', e);\n      }\n    }\n\n    return {\n      key: decodedKey,\n      value: cookieString.substr(separatorIndex + 1) // Defer decoding value until accessed\n\n    };\n  };\n\n  Cookies._renewCache = function () {\n    Cookies._cache = Cookies._getCacheFromString(Cookies._document.cookie);\n    Cookies._cachedDocumentCookie = Cookies._document.cookie;\n  };\n\n  Cookies._areEnabled = function () {\n    var testKey = 'cookies.js';\n    var areEnabled = Cookies.set(testKey, 1).get(testKey) === '1';\n    Cookies.expire(testKey);\n    return areEnabled;\n  };\n\n  Cookies.enabled = Cookies._areEnabled();\n  return Cookies;\n};\n\n__webpack_require__.g.Cookies = __webpack_require__.g && _typeof(__webpack_require__.g.document) === 'object' ? factory(__webpack_require__.g) : factory;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.g.Cookies);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/cookies.js\n");

/***/ }),

/***/ "./app/utils/cron-ui.js":
/*!******************************!*\
  !*** ./app/utils/cron-ui.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/* eslint-disable */\n\n/*\n * This file is part of the Arnapou jqCron package.\n *\n * (c) Arnaud Buathier <arnaud@arnapou.net>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Default settings\n */\n\nvar jqCronDefaultSettings = {\n  texts: {},\n  monthdays: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31],\n  hours: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\n  hour_labels: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"],\n  minutes: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59],\n  lang: 'en',\n  enabled_minute: false,\n  enabled_hour: true,\n  enabled_day: true,\n  enabled_week: true,\n  enabled_month: true,\n  enabled_year: true,\n  multiple_dom: false,\n  multiple_month: false,\n  multiple_mins: false,\n  multiple_dow: false,\n  multiple_time_hours: false,\n  multiple_time_minutes: false,\n  numeric_zero_pad: false,\n  default_period: 'day',\n  default_value: '',\n  no_reset_button: true,\n  disabled: false,\n  bind_to: null,\n  bind_method: {\n    set: function set($element, value) {\n      $element.is(':input') ? $element.val(value) : $element.data('jqCronValue', value);\n    },\n    get: function get($element) {\n      return $element.is(':input') ? $element.val() : $element.data('jqCronValue');\n    }\n  }\n};\n/**\n * Custom extend of json for jqCron settings.\n * We don't use jQuery.extend because simple extend does not fit our needs, and deep extend has a bad\n * feature for us : it replaces keys of \"Arrays\" instead of replacing the full array.\n */\n\n(function ($) {\n  var extend = function extend(dst, src) {\n    for (var i in src) {\n      if ($.isPlainObject(src[i])) {\n        dst[i] = extend(dst[i] && $.isPlainObject(dst[i]) ? dst[i] : {}, src[i]);\n      } else if ($.isArray(src[i])) {\n        dst[i] = src[i].slice(0);\n      } else if (src[i] !== undefined) {\n        dst[i] = src[i];\n      }\n    }\n\n    return dst;\n  };\n\n  this.jqCronMergeSettings = function (obj) {\n    return extend(extend({}, jqCronDefaultSettings), obj || {});\n  };\n}).call(window, (jquery__WEBPACK_IMPORTED_MODULE_0___default()));\n/**\n * Shortcut to get the instance of jqCron instance from one jquery object\n */\n\n(function ($) {\n  $.fn.jqCronGetInstance = function () {\n    return this.data('jqCron');\n  };\n}).call(window, (jquery__WEBPACK_IMPORTED_MODULE_0___default()));\n/**\n * Main plugin\n */\n\n(function ($) {\n  $.fn.jqCron = function (settings) {\n    var saved_settings = settings;\n    return this.each(function () {\n      var cron, saved;\n      var $this = $(this);\n      var settings = jqCronMergeSettings(saved_settings); // clone settings\n\n      var translations = settings.texts[settings.lang];\n\n      if (_typeof(translations) !== 'object' || $.isEmptyObject(translations)) {\n        console && console.error('Missing translations for language \"' + settings.lang + '\". ' + 'Please include jqCron.' + settings.lang + '.js or manually provide ' + 'the necessary translations when calling $.fn.jqCron().');\n        return;\n      }\n\n      if (!settings.jquery_container) {\n        if ($this.is(':container')) {\n          settings.jquery_element = $this.uniqueId('jqCron');\n        } else if ($this.is(':autoclose')) {\n          // delete already generated dom if exists\n          if ($this.next('.jqCron').length == 1) {\n            $this.next('.jqCron').remove();\n          } // generate new\n\n\n          settings.jquery_element = $('<span class=\"jqCron\"></span>').uniqueId('jqCron').insertAfter($this);\n        } else {\n          console && console.error(settings.texts[settings.lang].error1.replace('%s', this.tagName));\n          return;\n        }\n      } // autoset bind_to if it is an input\n\n\n      if ($this.is(':input')) {\n        settings.bind_to = settings.bind_to || $this;\n      } // init cron object\n\n\n      if (settings.bind_to) {\n        if (settings.bind_to.is(':input')) {\n          // auto bind from input to object if an input, textarea ...\n          settings.bind_to.blur(function () {\n            var value = settings.bind_method.get(settings.bind_to);\n            $this.jqCronGetInstance().setCron(value);\n          });\n        }\n\n        saved = settings.bind_method.get(settings.bind_to);\n        cron = new jqCron(settings);\n        cron.setCron(saved);\n      } else {\n        cron = new jqCron(settings);\n      }\n\n      $(this).data('jqCron', cron);\n    });\n  };\n}).call(window, (jquery__WEBPACK_IMPORTED_MODULE_0___default()));\n/**\n * jqCron class\n */\n\n(function ($) {\n  var jqCronInstances = [];\n\n  function jqCron(settings) {\n    var _initialized = false;\n\n    var _self = this;\n\n    var _$elt = this;\n\n    var _$obj = $('<span class=\"jqCron-container\"></span>');\n\n    var _$blocks = $('<span class=\"jqCron-blocks\"></span>');\n\n    var _$blockPERIOD = $('<span class=\"jqCron-period\"></span>');\n\n    var _$blockDOM = $('<span class=\"jqCron-dom\"></span>');\n\n    var _$blockMONTH = $('<span class=\"jqCron-month\"></span>');\n\n    var _$blockMINS = $('<span class=\"jqCron-mins\"></span>');\n\n    var _$blockDOW = $('<span class=\"jqCron-dow\"></span>');\n\n    var _$blockTIME = $('<span class=\"jqCron-time\"></span>');\n\n    var _$cross = $('<span class=\"jqCron-cross\">&#10008;</span>');\n\n    var _selectors = [];\n\n    var _selectorPeriod, _selectorMins, _selectorTimeH, _selectorTimeM, _selectorDow, _selectorDom, _selectorMonth; // instanciate a new selector\n\n\n    function newSelector($block, multiple, type) {\n      var selector = new jqCronSelector(_self, $block, multiple, type);\n      selector.$.bind('selector:open', function () {\n        // we close all opened selectors of all other jqCron\n        for (var n = jqCronInstances.length; n--;) {\n          if (jqCronInstances[n] != _self) {\n            jqCronInstances[n].closeSelectors();\n          } else {\n            // we close all other opened selectors of this jqCron\n            for (var o = _selectors.length; o--;) {\n              if (_selectors[o] != selector) {\n                _selectors[o].close();\n              }\n            }\n          }\n        }\n      });\n      selector.$.bind('selector:change', function () {\n        var boundChanged = false; // don't propagate if not initialized\n\n        if (!_initialized) return; // bind data between two minute selectors (only if they have the same multiple settings)\n\n        if (settings.multiple_mins == settings.multiple_time_minutes) {\n          if (selector == _selectorMins) {\n            boundChanged = _selectorTimeM.setValue(_selectorMins.getValue());\n          } else if (selector == _selectorTimeM) {\n            boundChanged = _selectorMins.setValue(_selectorTimeM.getValue());\n          }\n        } // we propagate the change event to the main object\n\n\n        boundChanged || _$obj.trigger('cron:change', _self.getCron());\n      });\n\n      _selectors.push(selector);\n\n      return selector;\n    } // disable the selector\n\n\n    this.disable = function () {\n      _$obj.addClass('disable');\n\n      settings.disable = true;\n\n      _self.closeSelectors();\n    }; // return if the selector is disabled\n\n\n    this.isDisabled = function () {\n      return settings.disable == true;\n    }; // enable the selector\n\n\n    this.enable = function () {\n      _$obj.removeClass('disable');\n\n      settings.disable = false;\n    }; // get cron value\n\n\n    this.getCron = function () {\n      var period = _selectorPeriod.getValue();\n\n      var items = ['*', '*', '*', '*', '*'];\n\n      if (period == 'hour') {\n        items[0] = _selectorMins.getCronValue();\n      }\n\n      if (period == 'day' || period == 'week' || period == 'month' || period == 'year') {\n        items[0] = _selectorTimeM.getCronValue();\n        items[1] = _selectorTimeH.getCronValue();\n      }\n\n      if (period == 'month' || period == 'year') {\n        items[2] = _selectorDom.getCronValue();\n      }\n\n      if (period == 'year') {\n        items[3] = _selectorMonth.getCronValue();\n      }\n\n      if (period == 'week') {\n        items[4] = _selectorDow.getCronValue();\n      }\n\n      return items.join(' ');\n    }; // set cron (string like * * * * *)\n\n\n    this.setCron = function (str) {\n      if (!str) return;\n\n      try {\n        str = str.replace(/\\s+/g, ' ').replace(/^ +/, '').replace(/ +$/, ''); // sanitize\n\n        var mask = str.replace(/[^\\* ]/g, '-').replace(/-+/g, '-').replace(/ +/g, '');\n        var items = str.split(' ');\n        if (items.length != 5) _self.error(_self.getText('error2'));\n\n        if (mask == '*****') {\n          // 1 possibility\n          _selectorPeriod.setValue('minute');\n        } else if (mask == '-****') {\n          // 1 possibility\n          _selectorPeriod.setValue('hour');\n\n          _selectorMins.setCronValue(items[0]);\n\n          _selectorTimeM.setCronValue(items[0]);\n        } else if (mask.substring(2, mask.length) == '***') {\n          // 4 possibilities\n          _selectorPeriod.setValue('day');\n\n          _selectorMins.setCronValue(items[0]);\n\n          _selectorTimeM.setCronValue(items[0]);\n\n          _selectorTimeH.setCronValue(items[1]);\n        } else if (mask.substring(2, mask.length) == '-**') {\n          // 4 possibilities\n          _selectorPeriod.setValue('month');\n\n          _selectorMins.setCronValue(items[0]);\n\n          _selectorTimeM.setCronValue(items[0]);\n\n          _selectorTimeH.setCronValue(items[1]);\n\n          _selectorDom.setCronValue(items[2]);\n        } else if (mask.substring(2, mask.length) == '**-') {\n          // 4 possibilities\n          _selectorPeriod.setValue('week');\n\n          _selectorMins.setCronValue(items[0]);\n\n          _selectorTimeM.setCronValue(items[0]);\n\n          _selectorTimeH.setCronValue(items[1]);\n\n          _selectorDow.setCronValue(items[4]);\n        } else if (mask.substring(3, mask.length) == '-*') {\n          // 8 possibilities\n          _selectorPeriod.setValue('year');\n\n          _selectorMins.setCronValue(items[0]);\n\n          _selectorTimeM.setCronValue(items[0]);\n\n          _selectorTimeH.setCronValue(items[1]);\n\n          _selectorDom.setCronValue(items[2]);\n\n          _selectorMonth.setCronValue(items[3]);\n        } else {\n          _self.error(_self.getText('error4'));\n        }\n\n        _self.clearError();\n      } catch (e) {}\n    }; // close all child selectors\n\n\n    this.closeSelectors = function () {\n      for (var n = _selectors.length; n--;) {\n        _selectors[n].close();\n      }\n    }; // get the main element id\n\n\n    this.getId = function () {\n      return _$elt.attr('id');\n    }; // get the translated text\n\n\n    this.getText = function (key) {\n      var text = settings.texts[settings.lang][key] || null;\n\n      if (typeof text == \"string\" && text.match('<b')) {\n        text = text.replace(/(<b *\\/>)/gi, '</span><b /><span class=\"jqCron-text\">');\n        text = '<span class=\"jqCron-text\">' + text + '</span>';\n      }\n\n      return text;\n    }; // get the human readable text\n\n\n    this.getHumanText = function () {\n      var texts = [];\n\n      _$obj.find('> span > span:visible').find('.jqCron-text, .jqCron-selector > span').each(function () {\n        var text = $(this).text().replace(/\\s+$/g, '').replace(/^\\s+/g, '');\n        text && texts.push(text);\n      });\n\n      return texts.join(' ').replace(/\\s:\\s/g, ':');\n    }; // get settings\n\n\n    this.getSettings = function () {\n      return settings;\n    }; // display an error\n\n\n    this.error = function (msg) {\n      console && console.error('[jqCron Error] ' + msg);\n\n      _$obj.addClass('jqCron-error').attr('title', msg);\n\n      throw msg;\n    }; // clear error\n\n\n    this.clearError = function () {\n      _$obj.attr('title', '').removeClass('jqCron-error');\n    }; // clear\n\n\n    this.clear = function () {\n      _selectorDom.setValue([]);\n\n      _selectorDow.setValue([]);\n\n      _selectorMins.setValue([]);\n\n      _selectorMonth.setValue([]);\n\n      _selectorTimeH.setValue([]);\n\n      _selectorTimeM.setValue([]);\n\n      _self.triggerChange();\n    }; // init (called in constructor)\n\n\n    this.init = function () {\n      var n, i, labelsList, list;\n      if (_initialized) return;\n      settings = jqCronMergeSettings(settings);\n      settings.jquery_element || _self.error(_self.getText('error3'));\n      _$elt = settings.jquery_element;\n\n      _$elt.append(_$obj);\n\n      _$obj.data('id', settings.id);\n\n      _$obj.data('jqCron', _self);\n\n      _$obj.append(_$blocks);\n\n      settings.no_reset_button || _$obj.append(_$cross);\n      !settings.disable || _$obj.addClass('disable');\n\n      _$blocks.append(_$blockPERIOD);\n\n      if (/^(ko)$/i.test(settings.lang)) {\n        _$blocks.append(_$blockMONTH, _$blockDOM);\n      } else {\n        _$blocks.append(_$blockDOM, _$blockMONTH);\n      }\n\n      _$blocks.append(_$blockMINS);\n\n      _$blocks.append(_$blockDOW);\n\n      _$blocks.append(_$blockTIME); // various binding\n\n\n      _$cross.click(function () {\n        _self.isDisabled() || _self.clear();\n      }); // binding from cron to target\n\n\n      _$obj.bind('cron:change', function (evt, value) {\n        if (!settings.bind_to) return;\n        settings.bind_method.set && settings.bind_method.set(settings.bind_to, value);\n\n        _self.clearError();\n      }); // PERIOD\n\n\n      _$blockPERIOD.append(_self.getText('text_period'));\n\n      _selectorPeriod = newSelector(_$blockPERIOD, false, 'period');\n      settings.enabled_minute && _selectorPeriod.add('minute', _self.getText('name_minute'));\n      settings.enabled_hour && _selectorPeriod.add('hour', _self.getText('name_hour'));\n      settings.enabled_day && _selectorPeriod.add('day', _self.getText('name_day'));\n      settings.enabled_week && _selectorPeriod.add('week', _self.getText('name_week'));\n      settings.enabled_month && _selectorPeriod.add('month', _self.getText('name_month'));\n      settings.enabled_year && _selectorPeriod.add('year', _self.getText('name_year'));\n\n      _selectorPeriod.$.bind('selector:change', function (e, value) {\n        _$blockDOM.hide();\n\n        _$blockMONTH.hide();\n\n        _$blockMINS.hide();\n\n        _$blockDOW.hide();\n\n        _$blockTIME.hide();\n\n        if (value == 'hour') {\n          _$blockMINS.show();\n        } else if (value == 'day') {\n          _$blockTIME.show();\n        } else if (value == 'week') {\n          _$blockDOW.show();\n\n          _$blockTIME.show();\n        } else if (value == 'month') {\n          _$blockDOM.show();\n\n          _$blockTIME.show();\n        } else if (value == 'year') {\n          _$blockDOM.show();\n\n          _$blockMONTH.show();\n\n          _$blockTIME.show();\n        }\n      });\n\n      _selectorPeriod.setValue(settings.default_period); // MINS  (minutes)\n\n\n      _$blockMINS.append(_self.getText('text_mins'));\n\n      _selectorMins = newSelector(_$blockMINS, settings.multiple_mins, 'minutes');\n\n      for (i = 0, list = settings.minutes; i < list.length; i++) {\n        _selectorMins.add(list[i], list[i]);\n      } // TIME  (hour:min)\n\n\n      _$blockTIME.append(_self.getText('text_time'));\n\n      _selectorTimeH = newSelector(_$blockTIME, settings.multiple_time_hours, 'time_hours');\n\n      for (i = 0, list = settings.hours, labelsList = settings.hour_labels; i < list.length; i++) {\n        _selectorTimeH.add(list[i], labelsList[i]);\n      }\n\n      _selectorTimeM = newSelector(_$blockTIME, settings.multiple_time_minutes, 'time_minutes');\n\n      for (i = 0, list = settings.minutes; i < list.length; i++) {\n        _selectorTimeM.add(list[i], list[i]);\n      } // DOW  (day of week)\n\n\n      _$blockDOW.append(_self.getText('text_dow'));\n\n      _selectorDow = newSelector(_$blockDOW, settings.multiple_dow, 'day_of_week');\n\n      for (i = 0, list = _self.getText('weekdays'); i < list.length; i++) {\n        _selectorDow.add(i + 1, list[i]);\n      } // DOM  (day of month)\n\n\n      _$blockDOM.append(_self.getText('text_dom'));\n\n      _selectorDom = newSelector(_$blockDOM, settings.multiple_dom, 'day_of_month');\n\n      for (i = 0, list = settings.monthdays; i < list.length; i++) {\n        _selectorDom.add(list[i], list[i]);\n      } // MONTH  (day of week)\n\n\n      _$blockMONTH.append(_self.getText('text_month'));\n\n      _selectorMonth = newSelector(_$blockMONTH, settings.multiple_month, 'month');\n\n      for (i = 0, list = _self.getText('months'); i < list.length; i++) {\n        _selectorMonth.add(i + 1, list[i]);\n      } // close all selectors when we click in body\n\n\n      $('body').click(function () {\n        var i,\n            n = _selectors.length;\n\n        for (i = 0; i < n; i++) {\n          _selectors[i].close();\n        }\n      });\n      _initialized = true; // default value\n\n      if (settings.default_value) {\n        _self.setCron(settings.default_value);\n      }\n    }; // trigger a change event\n\n\n    this.triggerChange = function () {\n      _$obj.trigger('cron:change', _self.getCron());\n    }; // store instance in array\n\n\n    jqCronInstances.push(this); // expose main jquery object\n\n    this.$ = _$obj; // init\n\n    try {\n      this.init();\n\n      _self.triggerChange();\n    } catch (e) {}\n  }\n\n  this.jqCron = jqCron;\n}).call(window, (jquery__WEBPACK_IMPORTED_MODULE_0___default()));\n/**\n * jqCronSelector class\n */\n\n(function ($) {\n  function jqCronSelector(_cron, _$block, _multiple, _type) {\n    var _self = this;\n\n    var _$list = $('<ul class=\"jqCron-selector-list\"></ul>');\n\n    var _$title = $('<span class=\"jqCron-selector-title\"></span>');\n\n    var _$selector = $('<span class=\"jqCron-selector\"></span>');\n\n    var _values = {};\n    var _value = [];\n    var _hasNumericTexts = true;\n\n    var _numeric_zero_pad = _cron.getSettings().numeric_zero_pad; // return an array without doublon\n\n\n    function array_unique(l) {\n      var i = 0,\n          n = l.length,\n          k = {},\n          a = [];\n\n      while (i < n) {\n        k[l[i]] || (k[l[i]] =  true && a.push(l[i]));\n        i++;\n      }\n\n      return a;\n    } // get the value (an array if multiple, else a single value)\n\n\n    this.getValue = function () {\n      return _multiple ? _value : _value[0];\n    }; // get a correct string for cron\n\n\n    this.getCronValue = function () {\n      if (_value.length == 0) return '*';\n      var cron = [_value[0]],\n          i,\n          s = _value[0],\n          c = _value[0],\n          n = _value.length;\n\n      for (i = 1; i < n; i++) {\n        if (_value[i] == c + 1) {\n          c = _value[i];\n          cron[cron.length - 1] = s + '-' + c;\n        } else {\n          s = c = _value[i];\n          cron.push(c);\n        }\n      }\n\n      return cron.join(',');\n    }; // set the cron value\n\n\n    this.setCronValue = function (str) {\n      var values = [],\n          m,\n          i,\n          n;\n\n      if (str !== '*') {\n        while (str != '') {\n          // test \"*/n\" expression\n          m = str.match(/^\\*\\/([0-9]+),?/);\n\n          if (m && m.length == 2) {\n            for (i = 0; i <= 59; i += m[1] | 0) {\n              values.push(i);\n            }\n\n            str = str.replace(m[0], '');\n            continue;\n          } // test \"a-b/n\" expression\n\n\n          m = str.match(/^([0-9]+)-([0-9]+)\\/([0-9]+),?/);\n\n          if (m && m.length == 4) {\n            for (i = m[1] | 0; i <= (m[2] | 0); i += m[3] | 0) {\n              values.push(i);\n            }\n\n            str = str.replace(m[0], '');\n            continue;\n          } // test \"a-b\" expression\n\n\n          m = str.match(/^([0-9]+)-([0-9]+),?/);\n\n          if (m && m.length == 3) {\n            for (i = m[1] | 0; i <= (m[2] | 0); i++) {\n              values.push(i);\n            }\n\n            str = str.replace(m[0], '');\n            continue;\n          } // test \"c\" expression\n\n\n          m = str.match(/^([0-9]+),?/);\n\n          if (m && m.length == 2) {\n            values.push(m[1] | 0);\n            str = str.replace(m[0], '');\n            continue;\n          } // something goes wrong in the expression\n\n\n          return;\n        }\n      }\n\n      _self.setValue(values);\n    }; // close the selector\n\n\n    this.close = function () {\n      _$selector.trigger('selector:close');\n    }; // open the selector\n\n\n    this.open = function () {\n      _$selector.trigger('selector:open');\n    }; // whether the selector is open\n\n\n    this.isOpened = function () {\n      return _$list.is(':visible');\n    }; // add a selected value to the list\n\n\n    this.addValue = function (key) {\n      var values = _multiple ? _value.slice(0) : []; // clone array\n\n      values.push(key);\n\n      _self.setValue(values);\n    }; // remove a selected value from the list\n\n\n    this.removeValue = function (key) {\n      if (_multiple) {\n        var i,\n            newValue = [];\n\n        for (i = 0; i < _value.length; i++) {\n          if (key != [_value[i]]) {\n            newValue.push(_value[i]);\n          }\n        }\n\n        _self.setValue(newValue);\n      } else {\n        _self.clear();\n      }\n    }; // set the selected value(s) of the list\n\n\n    this.setValue = function (keys) {\n      var i,\n          newKeys = [],\n          saved = _value.join(' ');\n\n      if (!$.isArray(keys)) keys = [keys];\n\n      _$list.find('li').removeClass('selected');\n\n      keys = array_unique(keys);\n      keys.sort(function (a, b) {\n        var ta = _typeof(a);\n\n        var tb = _typeof(b);\n\n        if (ta == tb && ta == \"number\") return a - b;else return String(a) == String(b) ? 0 : String(a) < String(b) ? -1 : 1;\n      });\n\n      if (_multiple) {\n        for (i = 0; i < keys.length; i++) {\n          if (keys[i] in _values) {\n            _values[keys[i]].addClass('selected');\n\n            newKeys.push(keys[i]);\n          }\n        }\n      } else {\n        if (keys[0] in _values) {\n          _values[keys[0]].addClass('selected');\n\n          newKeys.push(keys[0]);\n        }\n      } // remove unallowed values\n\n\n      _value = newKeys;\n\n      if (saved != _value.join(' ')) {\n        _$selector.trigger('selector:change', _multiple ? keys : keys[0]);\n\n        return true;\n      }\n\n      return false;\n    }; // get the title text\n\n\n    this.getTitleText = function () {\n      var getValueText = function getValueText(key) {\n        return key in _values ? _values[key].text() : key;\n      };\n\n      if (_value.length == 0) {\n        return _cron.getText('empty_' + _type) || _cron.getText('empty');\n      }\n\n      var cron = [getValueText(_value[0])],\n          i,\n          s = _value[0],\n          c = _value[0],\n          n = _value.length;\n\n      for (i = 1; i < n; i++) {\n        if (_value[i] == c + 1) {\n          c = _value[i];\n          cron[cron.length - 1] = getValueText(s) + '-' + getValueText(c);\n        } else {\n          s = c = _value[i];\n          cron.push(getValueText(c));\n        }\n      }\n\n      return cron.join(',');\n    }; // clear list\n\n\n    this.clear = function () {\n      _values = {};\n\n      _self.setValue([]);\n\n      _$list.empty();\n    }; // add a (key, value) pair\n\n\n    this.add = function (key, value) {\n      if (!(value + '').match(/^[0-9]+$/)) _hasNumericTexts = false;\n\n      if (_numeric_zero_pad && _hasNumericTexts && value < 10) {\n        value = '0' + value;\n      }\n\n      var $item = $('<li>' + value + '</li>');\n\n      _$list.append($item);\n\n      _values[key] = $item;\n      $item.click(function () {\n        if (_multiple && $(this).hasClass('selected')) {\n          _self.removeValue(key);\n        } else {\n          _self.addValue(key);\n\n          if (!_multiple) _self.close();\n        }\n      });\n    }; // expose main jquery object\n\n\n    this.$ = _$selector; // constructor\n\n    _$block.find('b:eq(0)').after(_$selector).remove();\n\n    _$selector.addClass('jqCron-selector-' + _$block.find('.jqCron-selector').length).append(_$title).append(_$list).bind('selector:open', function () {\n      if (_hasNumericTexts) {\n        var nbcols = 1,\n            n = _$list.find('li').length;\n\n        if (n > 5 && n <= 16) nbcols = 2;else if (n > 16 && n <= 23) nbcols = 3;else if (n > 23 && n <= 40) nbcols = 4;else if (n > 40) nbcols = 5;\n\n        _$list.addClass('cols' + nbcols);\n      }\n\n      _$list.show();\n    }).bind('selector:close', function () {\n      _$list.hide();\n    }).bind('selector:change', function () {\n      _$title.html(_self.getTitleText());\n    }).click(function (e) {\n      e.stopPropagation();\n    }).trigger('selector:change');\n\n    $.fn.disableSelection && _$selector.disableSelection(); // only work with jQuery UI\n\n    _$title.click(function (e) {\n      _self.isOpened() || _cron.isDisabled() ? _self.close() : _self.open();\n    });\n\n    _self.close();\n\n    _self.clear();\n  }\n\n  this.jqCronSelector = jqCronSelector;\n}).call(window, (jquery__WEBPACK_IMPORTED_MODULE_0___default()));\n/**\n * Generate unique id for each element.\n * Skip elements which have already an id.\n */\n\n(function ($) {\n  var jqUID = 0;\n\n  var jqGetUID = function jqGetUID(prefix) {\n    var id;\n\n    while (1) {\n      jqUID++;\n      id = (prefix || 'JQUID') + '' + jqUID;\n      if (!document.getElementById(id)) return id;\n    }\n  };\n\n  $.fn.uniqueId = function (prefix) {\n    return this.each(function () {\n      if ($(this).attr('id')) return;\n      var id = jqGetUID(prefix);\n      $(this).attr('id', id);\n    });\n  };\n}).call(window, (jquery__WEBPACK_IMPORTED_MODULE_0___default()));\n/**\n * Extends jQuery selectors with new block selector\n */\n\n(function ($) {\n  $.extend($.expr[':'], {\n    container: function container(a) {\n      return (a.tagName + '').toLowerCase() in {\n        a: 1,\n        abbr: 1,\n        acronym: 1,\n        address: 1,\n        b: 1,\n        big: 1,\n        blockquote: 1,\n        button: 1,\n        cite: 1,\n        code: 1,\n        dd: 1,\n        del: 1,\n        dfn: 1,\n        div: 1,\n        dt: 1,\n        em: 1,\n        fieldset: 1,\n        form: 1,\n        h1: 1,\n        h2: 1,\n        h3: 1,\n        h4: 1,\n        h5: 1,\n        h6: 1,\n        i: 1,\n        ins: 1,\n        kbd: 1,\n        label: 1,\n        li: 1,\n        p: 1,\n        pre: 1,\n        q: 1,\n        samp: 1,\n        small: 1,\n        span: 1,\n        strong: 1,\n        sub: 1,\n        sup: 1,\n        td: 1,\n        tt: 1\n      };\n    },\n    autoclose: function autoclose(a) {\n      return (a.tagName + '').toLowerCase() in {\n        area: 1,\n        base: 1,\n        basefont: 1,\n        br: 1,\n        col: 1,\n        frame: 1,\n        hr: 1,\n        img: 1,\n        input: 1,\n        link: 1,\n        meta: 1,\n        param: 1\n      };\n    }\n  });\n}).call(window, (jquery__WEBPACK_IMPORTED_MODULE_0___default()));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/cron-ui.js\n");

/***/ }),

/***/ "./app/utils/finderjs.js":
/*!*******************************!*\
  !*** ./app/utils/finderjs.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULTS\": () => (/* binding */ DEFAULTS),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/**\n * (c) Trilby Media, LLC\n * Author Djamil Legato\n *\n * Based on Mark Matyas's Finderjs\n * MIT License\n */\n\n\nvar DEFAULTS = {\n  labelKey: 'name',\n  valueKey: 'value',\n  // new\n  childKey: 'children',\n  iconKey: 'icon',\n  // new\n  itemKey: 'item-key',\n  // new\n  pathBar: true,\n  className: {\n    container: 'fjs-container',\n    pathBar: 'fjs-path-bar',\n    col: 'fjs-col',\n    list: 'fjs-list',\n    item: 'fjs-item',\n    active: 'fjs-active',\n    children: 'fjs-has-children',\n    url: 'fjs-url',\n    itemPrepend: 'fjs-item-prepend',\n    itemContent: 'fjs-item-content',\n    itemAppend: 'fjs-item-append'\n  }\n};\n\nvar Finder = /*#__PURE__*/function () {\n  function Finder(container, data, options) {\n    var _this = this;\n\n    _classCallCheck(this, Finder);\n\n    this.$emitter = new (eventemitter3__WEBPACK_IMPORTED_MODULE_1___default())();\n    this.container = jquery__WEBPACK_IMPORTED_MODULE_0___default()(container);\n    this.data = data;\n    this.config = jquery__WEBPACK_IMPORTED_MODULE_0___default().extend({}, DEFAULTS, options); // dom events\n\n    this.container.on('click', this.clickEvent.bind(this));\n    this.container.on('keydown', this.keydownEvent.bind(this)); // internal events\n\n    this.$emitter.on('item-selected', this.itemSelected.bind(this));\n    this.$emitter.on('create-column', this.addColumn.bind(this));\n    this.$emitter.on('navigate', this.navigate.bind(this));\n    this.$emitter.on('go-to', this.goTo.bind(this, this.data));\n    this.container.addClass(this.config.className.container).attr('tabindex', 0);\n    this.createColumn(this.data);\n\n    if (this.config.pathBar) {\n      this.pathBar = this.createPathBar();\n      this.pathBar.on('click', '[data-breadcrumb-node]', function (event) {\n        event.preventDefault();\n        var location = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget).data('breadcrumbNode');\n\n        _this.goTo(_this.data, location);\n      });\n    } // '' is <Root>\n\n\n    if (this.config.defaultPath || this.config.defaultPath === '') {\n      this.goTo(this.data, this.config.defaultPath);\n    }\n  }\n\n  _createClass(Finder, [{\n    key: \"reload\",\n    value: function reload() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.data;\n      this.createColumn(data); // '' is <Root>\n\n      if (this.config.defaultPath || this.config.defaultPath === '') {\n        this.goTo(data, this.config.defaultPath);\n      }\n    }\n  }, {\n    key: \"createColumn\",\n    value: function createColumn(data, parent) {\n      var _this2 = this;\n\n      var callback = function callback(data) {\n        return _this2.createColumn(data, parent);\n      };\n\n      if (typeof data === 'function') {\n        data.call(this, parent, callback);\n      } else if (Array.isArray(data) || _typeof(data) === 'object') {\n        if (_typeof(data) === 'object') {\n          data = Array.from(data);\n        }\n\n        var list = this.createList(data);\n        var div = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />');\n        div.append(list).addClass(this.config.className.col);\n        this.$emitter.emit('create-column', div);\n        return div;\n      } else {\n        throw new Error('Unknown data type');\n      }\n    }\n  }, {\n    key: \"createPathBar\",\n    value: function createPathBar() {\n      this.container.siblings(\".\".concat(this.config.className.pathBar)).remove();\n      var pathBar = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<div class=\\\"\".concat(this.config.className.pathBar, \"\\\" />\"));\n      pathBar.insertAfter(this.container);\n      return pathBar;\n    }\n  }, {\n    key: \"clickEvent\",\n    value: function clickEvent(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n      var column = target.closest(\".\".concat(this.config.className.col));\n      var item = target.closest(\".\".concat(this.config.className.item));\n\n      if (item.length) {\n        this.$emitter.emit('item-selected', {\n          column: column,\n          item: item\n        });\n      }\n    }\n  }, {\n    key: \"keydownEvent\",\n    value: function keydownEvent(event) {\n      var codes = {\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down'\n      };\n\n      if (event.keyCode in codes) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.$emitter.emit('navigate', {\n          direction: codes[event.keyCode]\n        });\n      }\n    }\n  }, {\n    key: \"itemSelected\",\n    value: function itemSelected(value) {\n      var element = value.item;\n\n      if (!element.length) {\n        return false;\n      }\n\n      var item = element[0]._item;\n      var column = value.column;\n      var data = item[this.config.childKey] || this.data;\n      var active = jquery__WEBPACK_IMPORTED_MODULE_0___default()(column).find(\".\".concat(this.config.className.active));\n\n      if (active.length) {\n        active.removeClass(this.config.className.active);\n      }\n\n      element.addClass(this.config.className.active);\n      column.nextAll().remove(); // ?!?!?\n\n      this.container[0].focus();\n      window.scrollTo(window.pageXOffset, window.pageYOffset);\n      this.updatePathBar();\n      var newColumn;\n\n      if (data) {\n        newColumn = this.createColumn(data, item);\n        this.$emitter.emit('interior-selected', item);\n      } else {\n        this.$emitter.emit('leaf-selected', item);\n      }\n\n      return newColumn;\n    }\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(column) {\n      this.container.append(column);\n      this.$emitter.emit('column-created', column);\n    }\n  }, {\n    key: \"navigate\",\n    value: function navigate(value) {\n      var active = this.findLastActive();\n      var direction = value.direction;\n      var column;\n      var item;\n      var target;\n\n      if (active) {\n        item = active.item;\n        column = active.column;\n\n        if (direction === 'up' && item.prev().length) {\n          target = item.prev();\n        } else if (direction === 'down' && item.next().length) {\n          target = item.next();\n        } else if (direction === 'right' && column.next().length) {\n          column = column.next();\n          target = column.find(\".\".concat(this.config.className.item)).first();\n        } else if (direction === 'left' && column.prev().length) {\n          column = column.prev();\n          target = column.find(\".\".concat(this.config.className.active)).first() || column.find(\".\".concat(this.config.className.item));\n        }\n      } else {\n        column = this.container.find(\".\".concat(this.config.className.col)).first();\n        target = column.find(\".\".concat(this.config.className.item)).first();\n      }\n\n      if (target) {\n        this.$emitter.emit('item-selected', {\n          column: column,\n          item: target\n        });\n      }\n    }\n  }, {\n    key: \"goTo\",\n    value: function goTo(data, path) {\n      var _this3 = this;\n\n      path = Array.isArray(path) ? path : path.split('/').map(function (bit) {\n        return bit.trim();\n      }).filter(Boolean);\n\n      if (path.length) {\n        this.container.children().remove();\n      }\n\n      if (typeof data === 'function') {\n        data.call(this, null, function (data) {\n          return _this3.selectPath(path, data);\n        });\n      } else {\n        this.selectPath(path, data);\n      }\n    }\n  }, {\n    key: \"selectPath\",\n    value: function selectPath(path, data, column) {\n      var _this4 = this;\n\n      column = column || (path.length ? this.createColumn(data) : this.container.find(\"> .\".concat(this.config.className.col)));\n      var current = path[0] || '';\n      var children = data.find(function (item) {\n        return item[_this4.config.itemKey] === current;\n      });\n      var newColumn = this.itemSelected({\n        column: column,\n        item: column.find(\"[data-fjs-item=\\\"\".concat(current, \"\\\"]\")).first()\n      });\n      path.shift();\n\n      if (path.length && children) {\n        this.selectPath(path, children[this.config.childKey], newColumn);\n      }\n    }\n  }, {\n    key: \"findLastActive\",\n    value: function findLastActive() {\n      var active = this.container.find(\".\".concat(this.config.className.active));\n\n      if (!active.length) {\n        return null;\n      }\n\n      var item = active.last();\n      var column = item.closest(\".\".concat(this.config.className.col));\n      return {\n        item: item,\n        column: column\n      };\n    }\n  }, {\n    key: \"createList\",\n    value: function createList(data) {\n      var _this5 = this;\n\n      var list = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<ul />');\n      var items = data.map(function (item) {\n        return _this5.createItem(item);\n      });\n      var fragments = items.reduce(function (fragment, current) {\n        fragment.appendChild(current[0] || current);\n        return fragment;\n      }, document.createDocumentFragment());\n      list.append(fragments).addClass(this.config.className.list);\n      return list;\n    }\n  }, {\n    key: \"createItem\",\n    value: function createItem(item) {\n      var listItem = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<li />');\n      var listItemClasses = [this.config.className.item];\n      var link = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<a />');\n      var createItemContent = this.config.createItemContent || this.createItemContent;\n      var fragment = createItemContent.call(this, item);\n      link.append(fragment).attr('href', '').attr('tabindex', -1);\n\n      if (item.url) {\n        link.attr('href', item.url);\n        listItemClasses.push(item.className);\n      }\n\n      if (item[this.config.childKey]) {\n        listItemClasses.push(this.config.className[this.config.childKey]);\n      }\n\n      listItemClasses.push(\"fjs-item-\".concat(item.type));\n      listItem.addClass(listItemClasses.join(' '));\n      listItem.append(link).attr('data-fjs-item', item[this.config.itemKey]);\n      listItem[0]._item = item;\n      return listItem;\n    }\n  }, {\n    key: \"updatePathBar\",\n    value: function updatePathBar() {\n      var _this6 = this;\n\n      if (!this.config.pathBar) {\n        return false;\n      }\n\n      var activeItems = this.container.find(\".\".concat(this.config.className.active));\n      var itemKeys = '';\n      this.pathBar.children().empty();\n      activeItems.each(function (index, activeItem) {\n        var item = activeItem._item;\n        var isLast = index + 1 === activeItems.length;\n        itemKeys += \"/\".concat(item[_this6.config.itemKey]);\n\n        _this6.pathBar.append(\"\\n                <span class=\\\"breadcrumb-node breadcrumb-node-\".concat(item.type, \"\\\" \").concat(item.type === 'dir' ? \"data-breadcrumb-node=\\\"\".concat(itemKeys, \"\\\"\") : '', \">\\n                    <i class=\\\"fa fa-fw \").concat(_this6.getIcon(item.type), \"\\\"></i>\\n                    <span class=\\\"breadcrumb-node-name\\\">\").concat(jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div />').html(item[_this6.config.labelKey]).html(), \"</span>\\n                    \").concat(!isLast ? '<i class=\"fa fa-fw fa-chevron-right\"></i>' : '', \"\\n                </span>\\n            \"));\n      });\n    }\n  }, {\n    key: \"getIcon\",\n    value: function getIcon(type) {\n      switch (type) {\n        case 'root':\n          return 'fa-sitemap';\n\n        case 'file':\n          return 'fa-file-o';\n\n        case 'dir':\n        default:\n          return 'fa-folder';\n      }\n    }\n  }]);\n\n  return Finder;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Finder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/finderjs.js\n");

/***/ }),

/***/ "./app/utils/formatbytes.js":
/*!**********************************!*\
  !*** ./app/utils/formatbytes.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ formatBytes)\n/* harmony export */ });\nvar sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nfunction formatBytes(bytes, decimals) {\n  if (bytes === 0) return '0 Byte';\n  var k = 1000;\n  var value = Math.floor(Math.log(bytes) / Math.log(k));\n  var decimal = decimals + 1 || 3;\n  return (bytes / Math.pow(k, value)).toPrecision(decimal) + ' ' + sizes[value];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvZm9ybWF0Ynl0ZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQU1BLEtBQUssR0FBRyxDQUFDLE9BQUQsRUFBVSxJQUFWLEVBQWdCLElBQWhCLEVBQXNCLElBQXRCLEVBQTRCLElBQTVCLEVBQWtDLElBQWxDLEVBQXdDLElBQXhDLEVBQThDLElBQTlDLEVBQW9ELElBQXBELENBQWQ7QUFFZSxTQUFTQyxXQUFULENBQXFCQyxLQUFyQixFQUE0QkMsUUFBNUIsRUFBc0M7QUFDakQsTUFBSUQsS0FBSyxLQUFLLENBQWQsRUFBaUIsT0FBTyxRQUFQO0FBRWpCLE1BQUlFLENBQUMsR0FBRyxJQUFSO0FBQ0EsTUFBSUMsS0FBSyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxHQUFMLENBQVNOLEtBQVQsSUFBa0JJLElBQUksQ0FBQ0UsR0FBTCxDQUFTSixDQUFULENBQTdCLENBQVo7QUFDQSxNQUFJSyxPQUFPLEdBQUdOLFFBQVEsR0FBRyxDQUFYLElBQWdCLENBQTlCO0FBRUEsU0FBTyxDQUFDRCxLQUFLLEdBQUdJLElBQUksQ0FBQ0ksR0FBTCxDQUFTTixDQUFULEVBQVlDLEtBQVosQ0FBVCxFQUE2Qk0sV0FBN0IsQ0FBeUNGLE9BQXpDLElBQW9ELEdBQXBELEdBQTBEVCxLQUFLLENBQUNLLEtBQUQsQ0FBdEU7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvdXRpbHMvZm9ybWF0Ynl0ZXMuanM/YWFkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzaXplcyA9IFsnQnl0ZXMnLCAnS0InLCAnTUInLCAnR0InLCAnVEInLCAnUEInLCAnRUInLCAnWkInLCAnWUInXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0Qnl0ZXMoYnl0ZXMsIGRlY2ltYWxzKSB7XG4gICAgaWYgKGJ5dGVzID09PSAwKSByZXR1cm4gJzAgQnl0ZSc7XG5cbiAgICBsZXQgayA9IDEwMDA7XG4gICAgbGV0IHZhbHVlID0gTWF0aC5mbG9vcihNYXRoLmxvZyhieXRlcykgLyBNYXRoLmxvZyhrKSk7XG4gICAgbGV0IGRlY2ltYWwgPSBkZWNpbWFscyArIDEgfHwgMztcblxuICAgIHJldHVybiAoYnl0ZXMgLyBNYXRoLnBvdyhrLCB2YWx1ZSkpLnRvUHJlY2lzaW9uKGRlY2ltYWwpICsgJyAnICsgc2l6ZXNbdmFsdWVdO1xufVxuIl0sIm5hbWVzIjpbInNpemVzIiwiZm9ybWF0Qnl0ZXMiLCJieXRlcyIsImRlY2ltYWxzIiwiayIsInZhbHVlIiwiTWF0aCIsImZsb29yIiwibG9nIiwiZGVjaW1hbCIsInBvdyIsInRvUHJlY2lzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/formatbytes.js\n");

/***/ }),

/***/ "./app/utils/gpm.js":
/*!**************************!*\
  !*** ./app/utils/gpm.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GPM),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./response */ \"./app/utils/response.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_2__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\nvar GPM = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(GPM, _EventEmitter);\n\n  var _super = _createSuper(GPM);\n\n  function GPM() {\n    var _this;\n\n    var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'getUpdates';\n\n    _classCallCheck(this, GPM);\n\n    _this = _super.call(this);\n    _this.payload = {};\n    _this.raw = {};\n    _this.action = action;\n    return _this;\n  }\n\n  _createClass(GPM, [{\n    key: \"setPayload\",\n    value: function setPayload() {\n      var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.payload = payload;\n      this.emit('payload', payload);\n      return this;\n    }\n  }, {\n    key: \"setAction\",\n    value: function setAction() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'getUpdates';\n      this.action = action;\n      this.emit('action', action);\n      return this;\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function () {\n      var _this2 = this;\n\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {\n        return true;\n      };\n      var flush = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var data = new FormData();\n      data.append('admin-nonce', grav_config__WEBPACK_IMPORTED_MODULE_1__.config.admin_nonce);\n\n      if (flush) {\n        data.append('flush', true);\n      }\n\n      this.emit('fetching', this);\n      fetch(\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/update.json/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep, \"getUpdates\"), {\n        credentials: 'same-origin',\n        method: 'post',\n        body: data\n      }).then(function (response) {\n        _this2.raw = response;\n        return response;\n      }).then(_response__WEBPACK_IMPORTED_MODULE_0__.parseStatus).then(_response__WEBPACK_IMPORTED_MODULE_0__.parseJSON).then(function (response) {\n        return _this2.response(response);\n      }).then(function (response) {\n        return callback(response, _this2.raw);\n      }).then(function (response) {\n        return _this2.emit('fetched', _this2.payload, _this2.raw, _this2);\n      })[\"catch\"](_response__WEBPACK_IMPORTED_MODULE_0__.userFeedbackError);\n    })\n  }, {\n    key: \"response\",\n    value: function response(_response) {\n      this.payload = _response;\n      return _response;\n    }\n  }]);\n\n  return GPM;\n}((events__WEBPACK_IMPORTED_MODULE_2___default()));\n\n\nvar Instance = new GPM();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvZ3BtLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBOztJQUVxQks7Ozs7O0FBQ2pCLGlCQUFtQztBQUFBOztBQUFBLFFBQXZCQyxNQUF1Qix1RUFBZCxZQUFjOztBQUFBOztBQUMvQjtBQUNBLFVBQUtDLE9BQUwsR0FBZSxFQUFmO0FBQ0EsVUFBS0MsR0FBTCxHQUFXLEVBQVg7QUFDQSxVQUFLRixNQUFMLEdBQWNBLE1BQWQ7QUFKK0I7QUFLbEM7Ozs7V0FFRCxzQkFBeUI7QUFBQSxVQUFkQyxPQUFjLHVFQUFKLEVBQUk7QUFDckIsV0FBS0EsT0FBTCxHQUFlQSxPQUFmO0FBQ0EsV0FBS0UsSUFBTCxDQUFVLFNBQVYsRUFBcUJGLE9BQXJCO0FBRUEsYUFBTyxJQUFQO0FBQ0g7OztXQUVELHFCQUFpQztBQUFBLFVBQXZCRCxNQUF1Qix1RUFBZCxZQUFjO0FBQzdCLFdBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUNBLFdBQUtHLElBQUwsQ0FBVSxRQUFWLEVBQW9CSCxNQUFwQjtBQUVBLGFBQU8sSUFBUDtBQUNIOzs7Ozs7Ozs7Ozs7O01BRUQsWUFBNEM7QUFBQTs7QUFBQSxVQUF0Q0ksUUFBc0MsdUVBQTNCO0FBQUEsZUFBTSxJQUFOO0FBQUEsT0FBMkI7QUFBQSxVQUFmQyxLQUFlLHVFQUFQLEtBQU87QUFDeEMsVUFBSUMsSUFBSSxHQUFHLElBQUlDLFFBQUosRUFBWDtBQUNBRCxNQUFBQSxJQUFJLENBQUNFLE1BQUwsQ0FBWSxhQUFaLEVBQTJCWCwyREFBM0I7O0FBRUEsVUFBSVEsS0FBSixFQUFXO0FBQ1BDLFFBQUFBLElBQUksQ0FBQ0UsTUFBTCxDQUFZLE9BQVosRUFBcUIsSUFBckI7QUFDSDs7QUFFRCxXQUFLTCxJQUFMLENBQVUsVUFBVixFQUFzQixJQUF0QjtBQUVBTyxNQUFBQSxLQUFLLFdBQUliLGlFQUFKLDhCQUFnREEseURBQWhELGlCQUE4RTtBQUMvRWdCLFFBQUFBLFdBQVcsRUFBRSxhQURrRTtBQUUvRUMsUUFBQUEsTUFBTSxFQUFFLE1BRnVFO0FBRy9FQyxRQUFBQSxJQUFJLEVBQUVUO0FBSHlFLE9BQTlFLENBQUwsQ0FJR1UsSUFKSCxDQUlRLFVBQUNDLFFBQUQsRUFBYztBQUFFLGNBQUksQ0FBQ2YsR0FBTCxHQUFXZSxRQUFYO0FBQXFCLGVBQU9BLFFBQVA7QUFBa0IsT0FKL0QsRUFLS0QsSUFMTCxDQUtVckIsa0RBTFYsRUFNS3FCLElBTkwsQ0FNVXRCLGdEQU5WLEVBT0tzQixJQVBMLENBT1UsVUFBQ0MsUUFBRDtBQUFBLGVBQWMsTUFBSSxDQUFDQSxRQUFMLENBQWNBLFFBQWQsQ0FBZDtBQUFBLE9BUFYsRUFRS0QsSUFSTCxDQVFVLFVBQUNDLFFBQUQ7QUFBQSxlQUFjYixRQUFRLENBQUNhLFFBQUQsRUFBVyxNQUFJLENBQUNmLEdBQWhCLENBQXRCO0FBQUEsT0FSVixFQVNLYyxJQVRMLENBU1UsVUFBQ0MsUUFBRDtBQUFBLGVBQWMsTUFBSSxDQUFDZCxJQUFMLENBQVUsU0FBVixFQUFxQixNQUFJLENBQUNGLE9BQTFCLEVBQW1DLE1BQUksQ0FBQ0MsR0FBeEMsRUFBNkMsTUFBN0MsQ0FBZDtBQUFBLE9BVFYsV0FVV04sd0RBVlg7QUFXSDs7O1dBRUQsa0JBQVNxQixTQUFULEVBQW1CO0FBQ2YsV0FBS2hCLE9BQUwsR0FBZWdCLFNBQWY7QUFFQSxhQUFPQSxTQUFQO0FBQ0g7Ozs7RUFqRDRCbkI7OztBQW9EMUIsSUFBSW9CLFFBQVEsR0FBRyxJQUFJbkIsR0FBSixFQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC91dGlscy9ncG0uanM/NzliNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZUpTT04sIHBhcnNlU3RhdHVzLCB1c2VyRmVlZGJhY2tFcnJvciB9IGZyb20gJy4vcmVzcG9uc2UnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnZ3Jhdi1jb25maWcnO1xuaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tICdldmVudHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHUE0gZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKGFjdGlvbiA9ICdnZXRVcGRhdGVzJykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnBheWxvYWQgPSB7fTtcbiAgICAgICAgdGhpcy5yYXcgPSB7fTtcbiAgICAgICAgdGhpcy5hY3Rpb24gPSBhY3Rpb247XG4gICAgfVxuXG4gICAgc2V0UGF5bG9hZChwYXlsb2FkID0ge30pIHtcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcbiAgICAgICAgdGhpcy5lbWl0KCdwYXlsb2FkJywgcGF5bG9hZCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgc2V0QWN0aW9uKGFjdGlvbiA9ICdnZXRVcGRhdGVzJykge1xuICAgICAgICB0aGlzLmFjdGlvbiA9IGFjdGlvbjtcbiAgICAgICAgdGhpcy5lbWl0KCdhY3Rpb24nLCBhY3Rpb24pO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGZldGNoKGNhbGxiYWNrID0gKCkgPT4gdHJ1ZSwgZmx1c2ggPSBmYWxzZSkge1xuICAgICAgICBsZXQgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBkYXRhLmFwcGVuZCgnYWRtaW4tbm9uY2UnLCBjb25maWcuYWRtaW5fbm9uY2UpO1xuXG4gICAgICAgIGlmIChmbHVzaCkge1xuICAgICAgICAgICAgZGF0YS5hcHBlbmQoJ2ZsdXNoJywgdHJ1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmVtaXQoJ2ZldGNoaW5nJywgdGhpcyk7XG5cbiAgICAgICAgZmV0Y2goYCR7Y29uZmlnLmJhc2VfdXJsX3JlbGF0aXZlfS91cGRhdGUuanNvbi90YXNrJHtjb25maWcucGFyYW1fc2VwfWdldFVwZGF0ZXNgLCB7XG4gICAgICAgICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbiAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICAgICAgYm9keTogZGF0YVxuICAgICAgICB9KS50aGVuKChyZXNwb25zZSkgPT4geyB0aGlzLnJhdyA9IHJlc3BvbnNlOyByZXR1cm4gcmVzcG9uc2U7IH0pXG4gICAgICAgICAgICAudGhlbihwYXJzZVN0YXR1cylcbiAgICAgICAgICAgIC50aGVuKHBhcnNlSlNPTilcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gdGhpcy5yZXNwb25zZShyZXNwb25zZSkpXG4gICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IGNhbGxiYWNrKHJlc3BvbnNlLCB0aGlzLnJhdykpXG4gICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHRoaXMuZW1pdCgnZmV0Y2hlZCcsIHRoaXMucGF5bG9hZCwgdGhpcy5yYXcsIHRoaXMpKVxuICAgICAgICAgICAgLmNhdGNoKHVzZXJGZWVkYmFja0Vycm9yKTtcbiAgICB9XG5cbiAgICByZXNwb25zZShyZXNwb25zZSkge1xuICAgICAgICB0aGlzLnBheWxvYWQgPSByZXNwb25zZTtcblxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxufVxuXG5leHBvcnQgbGV0IEluc3RhbmNlID0gbmV3IEdQTSgpO1xuIl0sIm5hbWVzIjpbInBhcnNlSlNPTiIsInBhcnNlU3RhdHVzIiwidXNlckZlZWRiYWNrRXJyb3IiLCJjb25maWciLCJFdmVudEVtaXR0ZXIiLCJHUE0iLCJhY3Rpb24iLCJwYXlsb2FkIiwicmF3IiwiZW1pdCIsImNhbGxiYWNrIiwiZmx1c2giLCJkYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJhZG1pbl9ub25jZSIsImZldGNoIiwiYmFzZV91cmxfcmVsYXRpdmUiLCJwYXJhbV9zZXAiLCJjcmVkZW50aWFscyIsIm1ldGhvZCIsImJvZHkiLCJ0aGVuIiwicmVzcG9uc2UiLCJJbnN0YW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/utils/gpm.js\n");

/***/ }),

/***/ "./app/utils/jquery-utils.js":
/*!***********************************!*\
  !*** ./app/utils/jquery-utils.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var speakingurl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! speakingurl */ \"./node_modules/speakingurl/index.js\");\n/* harmony import */ var speakingurl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(speakingurl__WEBPACK_IMPORTED_MODULE_1__);\nvar _this = undefined;\n\n\n // jQuery no parents filter\n\n(jquery__WEBPACK_IMPORTED_MODULE_0___default().expr[\":\"].noparents) = jquery__WEBPACK_IMPORTED_MODULE_0___default().expr.createPseudo(function (text) {\n  return function (element) {\n    return jquery__WEBPACK_IMPORTED_MODULE_0___default()(element).parents(text).length < 1;\n  };\n}); // Slugify\n// CommonJS and ES6 version of https://github.com/madflow/jquery-slugify\n\n(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.slugify) = function (source, options) {\n  return _this.each(function (element) {\n    var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(element);\n    var source = jquery__WEBPACK_IMPORTED_MODULE_0___default()(source);\n    target.on('keyup change', function () {\n      target.data('locked', target.val() !== '' && target.val() !== undefined);\n    });\n    source.on('keyup change', function () {\n      if (target.data('locked') === true) {\n        return true;\n      }\n\n      var isInput = target.is('input') || target.is('textarea');\n      target[isInput ? 'val' : 'text'](jquery__WEBPACK_IMPORTED_MODULE_0___default().slugify(source.val(), options));\n    });\n  });\n}; // Static method.\n\n\n(jquery__WEBPACK_IMPORTED_MODULE_0___default().slugify) = function (sourceString, options) {\n  options = jquery__WEBPACK_IMPORTED_MODULE_0___default().extend({}, (jquery__WEBPACK_IMPORTED_MODULE_0___default().slugify.options), options);\n  options.lang = options.lang || jquery__WEBPACK_IMPORTED_MODULE_0___default()('html').prop('lang');\n\n  if (typeof options.preSlug === 'function') {\n    sourceString = options.preSlug(sourceString);\n  }\n\n  sourceString = options.slugFunc(sourceString, options);\n\n  if (typeof options.postSlug === 'function') {\n    sourceString = options.postSlug(sourceString);\n  }\n\n  return sourceString;\n}; // Default plugin options\n\n\n(jquery__WEBPACK_IMPORTED_MODULE_0___default().slugify.options) = {\n  preSlug: null,\n  postSlug: null,\n  slugFunc: function slugFunc(input, opts) {\n    return speakingurl__WEBPACK_IMPORTED_MODULE_1___default()(input, opts);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IGdldFNsdWcgZnJvbSAnc3BlYWtpbmd1cmwnO1xuXG4vLyBqUXVlcnkgbm8gcGFyZW50cyBmaWx0ZXJcbiQuZXhwclsnOiddWydub3BhcmVudHMnXSA9ICQuZXhwci5jcmVhdGVQc2V1ZG8oKHRleHQpID0+IChlbGVtZW50KSA9PiAkKGVsZW1lbnQpLnBhcmVudHModGV4dCkubGVuZ3RoIDwgMSk7XG5cbi8vIFNsdWdpZnlcbi8vIENvbW1vbkpTIGFuZCBFUzYgdmVyc2lvbiBvZiBodHRwczovL2dpdGh1Yi5jb20vbWFkZmxvdy9qcXVlcnktc2x1Z2lmeVxuJC5mbi5zbHVnaWZ5ID0gKHNvdXJjZSwgb3B0aW9ucykgPT4ge1xuICAgIHJldHVybiB0aGlzLmVhY2goKGVsZW1lbnQpID0+IHtcbiAgICAgICAgbGV0IHRhcmdldCA9ICQoZWxlbWVudCk7XG4gICAgICAgIGxldCBzb3VyY2UgPSAkKHNvdXJjZSk7XG5cbiAgICAgICAgdGFyZ2V0Lm9uKCdrZXl1cCBjaGFuZ2UnLCAoKSA9PiB7XG4gICAgICAgICAgICB0YXJnZXQuZGF0YSgnbG9ja2VkJywgdGFyZ2V0LnZhbCgpICE9PSAnJyAmJiB0YXJnZXQudmFsKCkgIT09IHVuZGVmaW5lZCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNvdXJjZS5vbigna2V5dXAgY2hhbmdlJywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRhcmdldC5kYXRhKCdsb2NrZWQnKSA9PT0gdHJ1ZSkgeyByZXR1cm4gdHJ1ZTsgfVxuXG4gICAgICAgICAgICBsZXQgaXNJbnB1dCA9IHRhcmdldC5pcygnaW5wdXQnKSB8fCB0YXJnZXQuaXMoJ3RleHRhcmVhJyk7XG4gICAgICAgICAgICB0YXJnZXRbaXNJbnB1dCA/ICd2YWwnIDogJ3RleHQnXSgkLnNsdWdpZnkoc291cmNlLnZhbCgpLCBvcHRpb25zKSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuLy8gU3RhdGljIG1ldGhvZC5cbiQuc2x1Z2lmeSA9IChzb3VyY2VTdHJpbmcsIG9wdGlvbnMpID0+IHtcbiAgICBvcHRpb25zID0gJC5leHRlbmQoe30sICQuc2x1Z2lmeS5vcHRpb25zLCBvcHRpb25zKTtcbiAgICBvcHRpb25zLmxhbmcgPSBvcHRpb25zLmxhbmcgfHwgJCgnaHRtbCcpLnByb3AoJ2xhbmcnKTtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5wcmVTbHVnID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHNvdXJjZVN0cmluZyA9IG9wdGlvbnMucHJlU2x1Zyhzb3VyY2VTdHJpbmcpO1xuICAgIH1cblxuICAgIHNvdXJjZVN0cmluZyA9IG9wdGlvbnMuc2x1Z0Z1bmMoc291cmNlU3RyaW5nLCBvcHRpb25zKTtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5wb3N0U2x1ZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBzb3VyY2VTdHJpbmcgPSBvcHRpb25zLnBvc3RTbHVnKHNvdXJjZVN0cmluZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNvdXJjZVN0cmluZztcbn07XG5cbi8vIERlZmF1bHQgcGx1Z2luIG9wdGlvbnNcbiQuc2x1Z2lmeS5vcHRpb25zID0ge1xuICAgIHByZVNsdWc6IG51bGwsXG4gICAgcG9zdFNsdWc6IG51bGwsXG4gICAgc2x1Z0Z1bmM6IChpbnB1dCwgb3B0cykgPT4gZ2V0U2x1ZyhpbnB1dCwgb3B0cylcbn07XG4iXSwibmFtZXMiOlsiJCIsImdldFNsdWciLCJleHByIiwiY3JlYXRlUHNldWRvIiwidGV4dCIsImVsZW1lbnQiLCJwYXJlbnRzIiwibGVuZ3RoIiwiZm4iLCJzbHVnaWZ5Iiwic291cmNlIiwib3B0aW9ucyIsImVhY2giLCJ0YXJnZXQiLCJvbiIsImRhdGEiLCJ2YWwiLCJ1bmRlZmluZWQiLCJpc0lucHV0IiwiaXMiLCJzb3VyY2VTdHJpbmciLCJleHRlbmQiLCJsYW5nIiwicHJvcCIsInByZVNsdWciLCJzbHVnRnVuYyIsInBvc3RTbHVnIiwiaW5wdXQiLCJvcHRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/jquery-utils.js\n");

/***/ }),

/***/ "./app/utils/keepalive.js":
/*!********************************!*\
  !*** ./app/utils/keepalive.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./response */ \"./app/utils/response.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\nvar MAX_SAFE_DELAY = 2147483647;\n\nvar KeepAlive = /*#__PURE__*/function () {\n  function KeepAlive() {\n    _classCallCheck(this, KeepAlive);\n\n    this.active = false;\n  }\n\n  _createClass(KeepAlive, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      var timeout = grav_config__WEBPACK_IMPORTED_MODULE_0__.config.admin_timeout / 1.5 * 1000;\n      this.timer = setInterval(function () {\n        return _this.fetch();\n      }, Math.min(timeout, MAX_SAFE_DELAY));\n      this.active = true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      clearInterval(this.timer);\n      this.active = false;\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function () {\n      var data = new FormData();\n      data.append('admin-nonce', grav_config__WEBPACK_IMPORTED_MODULE_0__.config.admin_nonce);\n      fetch(\"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_0__.config.base_url_relative, \"/task\").concat(grav_config__WEBPACK_IMPORTED_MODULE_0__.config.param_sep, \"keepAlive\"), {\n        credentials: 'same-origin',\n        method: 'post',\n        body: data\n      })[\"catch\"](_response__WEBPACK_IMPORTED_MODULE_1__.userFeedbackError);\n    })\n  }]);\n\n  return KeepAlive;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new KeepAlive());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMva2VlcGFsaXZlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUEsSUFBTUUsY0FBYyxHQUFHLFVBQXZCOztJQUVNQztBQUNGLHVCQUFjO0FBQUE7O0FBQ1YsU0FBS0MsTUFBTCxHQUFjLEtBQWQ7QUFDSDs7OztXQUVELGlCQUFRO0FBQUE7O0FBQ0osVUFBSUMsT0FBTyxHQUFHTCw2REFBQSxHQUF1QixHQUF2QixHQUE2QixJQUEzQztBQUNBLFdBQUtPLEtBQUwsR0FBYUMsV0FBVyxDQUFDO0FBQUEsZUFBTSxLQUFJLENBQUNDLEtBQUwsRUFBTjtBQUFBLE9BQUQsRUFBcUJDLElBQUksQ0FBQ0MsR0FBTCxDQUFTTixPQUFULEVBQWtCSCxjQUFsQixDQUFyQixDQUF4QjtBQUNBLFdBQUtFLE1BQUwsR0FBYyxJQUFkO0FBQ0g7OztXQUVELGdCQUFPO0FBQ0hRLE1BQUFBLGFBQWEsQ0FBQyxLQUFLTCxLQUFOLENBQWI7QUFDQSxXQUFLSCxNQUFMLEdBQWMsS0FBZDtBQUNIOzs7Ozs7Ozs7Ozs7O01BRUQsWUFBUTtBQUNKLFVBQUlTLElBQUksR0FBRyxJQUFJQyxRQUFKLEVBQVg7QUFDQUQsTUFBQUEsSUFBSSxDQUFDRSxNQUFMLENBQVksYUFBWixFQUEyQmYsMkRBQTNCO0FBRUFTLE1BQUFBLEtBQUssV0FBSVQsaUVBQUosa0JBQW9DQSx5REFBcEMsZ0JBQWlFO0FBQ2xFbUIsUUFBQUEsV0FBVyxFQUFFLGFBRHFEO0FBRWxFQyxRQUFBQSxNQUFNLEVBQUUsTUFGMEQ7QUFHbEVDLFFBQUFBLElBQUksRUFBRVI7QUFINEQsT0FBakUsQ0FBTCxVQUlTWix3REFKVDtBQUtIOzs7Ozs7QUFHTCxpRUFBZSxJQUFJRSxTQUFKLEVBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3V0aWxzL2tlZXBhbGl2ZS5qcz9jNWNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpZyB9IGZyb20gJ2dyYXYtY29uZmlnJztcbmltcG9ydCB7IHVzZXJGZWVkYmFja0Vycm9yIH0gZnJvbSAnLi9yZXNwb25zZSc7XG5cbmNvbnN0IE1BWF9TQUZFX0RFTEFZID0gMjE0NzQ4MzY0NztcblxuY2xhc3MgS2VlcEFsaXZlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBzdGFydCgpIHtcbiAgICAgICAgbGV0IHRpbWVvdXQgPSBjb25maWcuYWRtaW5fdGltZW91dCAvIDEuNSAqIDEwMDA7XG4gICAgICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB0aGlzLmZldGNoKCksIE1hdGgubWluKHRpbWVvdXQsIE1BWF9TQUZFX0RFTEFZKSk7XG4gICAgICAgIHRoaXMuYWN0aXZlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBzdG9wKCkge1xuICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xuICAgIH1cblxuICAgIGZldGNoKCkge1xuICAgICAgICBsZXQgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBkYXRhLmFwcGVuZCgnYWRtaW4tbm9uY2UnLCBjb25maWcuYWRtaW5fbm9uY2UpO1xuXG4gICAgICAgIGZldGNoKGAke2NvbmZpZy5iYXNlX3VybF9yZWxhdGl2ZX0vdGFzayR7Y29uZmlnLnBhcmFtX3NlcH1rZWVwQWxpdmVgLCB7XG4gICAgICAgICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbiAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgICAgICAgYm9keTogZGF0YVxuICAgICAgICB9KS5jYXRjaCh1c2VyRmVlZGJhY2tFcnJvcik7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgS2VlcEFsaXZlKCk7XG4iXSwibmFtZXMiOlsiY29uZmlnIiwidXNlckZlZWRiYWNrRXJyb3IiLCJNQVhfU0FGRV9ERUxBWSIsIktlZXBBbGl2ZSIsImFjdGl2ZSIsInRpbWVvdXQiLCJhZG1pbl90aW1lb3V0IiwidGltZXIiLCJzZXRJbnRlcnZhbCIsImZldGNoIiwiTWF0aCIsIm1pbiIsImNsZWFySW50ZXJ2YWwiLCJkYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJhZG1pbl9ub25jZSIsImJhc2VfdXJsX3JlbGF0aXZlIiwicGFyYW1fc2VwIiwiY3JlZGVudGlhbHMiLCJtZXRob2QiLCJib2R5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/keepalive.js\n");

/***/ }),

/***/ "./app/utils/offline.js":
/*!******************************!*\
  !*** ./app/utils/offline.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_offline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/offline */ \"./app/utils/offline.js\");\n\n\nvar offlineElement = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#offline-status');\njquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('offline', function () {\n  offlineElement.slideDown();\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('online', function () {\n  offlineElement.slideUp();\n});\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {\n  if (!_utils_offline__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n    offlineElement.slideDown();\n  }\n}); // assume online if can't check\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof __webpack_require__.g.navigator.onLine !== 'undefined' ? __webpack_require__.g.navigator.onLine : true);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvb2ZmbGluZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUVBLElBQU1FLGNBQWMsR0FBR0YsNkNBQUMsQ0FBQyxpQkFBRCxDQUF4QjtBQUVBQSw2Q0FBQyxDQUFDRyxNQUFELENBQUQsQ0FBVUMsRUFBVixDQUFhLFNBQWIsRUFBd0IsWUFBTTtBQUMxQkYsRUFBQUEsY0FBYyxDQUFDRyxTQUFmO0FBQ0gsQ0FGRDtBQUlBTCw2Q0FBQyxDQUFDRyxNQUFELENBQUQsQ0FBVUMsRUFBVixDQUFhLFFBQWIsRUFBdUIsWUFBTTtBQUN6QkYsRUFBQUEsY0FBYyxDQUFDSSxPQUFmO0FBQ0gsQ0FGRDtBQUlBTiw2Q0FBQyxDQUFDTyxRQUFELENBQUQsQ0FBWUMsS0FBWixDQUFrQixZQUFNO0FBQ3BCLE1BQUksQ0FBQ1Asc0RBQUwsRUFBZTtBQUNYQyxJQUFBQSxjQUFjLENBQUNHLFNBQWY7QUFDSDtBQUNKLENBSkQsR0FNQTs7QUFDQSxpRUFBZSxPQUFPSSxxQkFBTSxDQUFDQyxTQUFQLENBQWlCQyxNQUF4QixLQUFtQyxXQUFuQyxHQUFpREYscUJBQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsTUFBbEUsR0FBMkUsSUFBMUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3V0aWxzL29mZmxpbmUuanM/ODc0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IGlzT25saW5lIGZyb20gJy4uL3V0aWxzL29mZmxpbmUnO1xuXG5jb25zdCBvZmZsaW5lRWxlbWVudCA9ICQoJyNvZmZsaW5lLXN0YXR1cycpO1xuXG4kKHdpbmRvdykub24oJ29mZmxpbmUnLCAoKSA9PiB7XG4gICAgb2ZmbGluZUVsZW1lbnQuc2xpZGVEb3duKCk7XG59KTtcblxuJCh3aW5kb3cpLm9uKCdvbmxpbmUnLCAoKSA9PiB7XG4gICAgb2ZmbGluZUVsZW1lbnQuc2xpZGVVcCgpO1xufSk7XG5cbiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcbiAgICBpZiAoIWlzT25saW5lKSB7XG4gICAgICAgIG9mZmxpbmVFbGVtZW50LnNsaWRlRG93bigpO1xuICAgIH1cbn0pO1xuXG4vLyBhc3N1bWUgb25saW5lIGlmIGNhbid0IGNoZWNrXG5leHBvcnQgZGVmYXVsdCB0eXBlb2YgZ2xvYmFsLm5hdmlnYXRvci5vbkxpbmUgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsLm5hdmlnYXRvci5vbkxpbmUgOiB0cnVlO1xuIl0sIm5hbWVzIjpbIiQiLCJpc09ubGluZSIsIm9mZmxpbmVFbGVtZW50Iiwid2luZG93Iiwib24iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwiZG9jdW1lbnQiLCJyZWFkeSIsImdsb2JhbCIsIm5hdmlnYXRvciIsIm9uTGluZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/utils/offline.js\n");

/***/ }),

/***/ "./app/utils/packages.js":
/*!*******************************!*\
  !*** ./app/utils/packages.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\n/* harmony import */ var _utils_gpm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/gpm */ \"./app/utils/gpm.js\");\n/* harmony import */ var es6_promise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! es6-promise */ \"./node_modules/es6-promise/dist/es6-promise.js\");\n/* harmony import */ var es6_promise__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(es6_promise__WEBPACK_IMPORTED_MODULE_4__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\n\n\n\nvar Sorter = /*#__PURE__*/function () {\n  function Sorter() {\n    _classCallCheck(this, Sorter);\n  }\n\n  _createClass(Sorter, [{\n    key: \"getElements\",\n    value: function getElements(elements, container) {\n      this.elements = elements || jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-gpm-plugin], [data-gpm-theme]');\n      this.container = container || jquery__WEBPACK_IMPORTED_MODULE_0___default()('.gpm-plugins > table > tbody, .gpm-themes > .themes.card-row');\n      return this.elements;\n    }\n  }, {\n    key: \"byCommon\",\n    value: function byCommon() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var elements = this.getElements().sort(function (a, b) {\n        var A = jquery__WEBPACK_IMPORTED_MODULE_0___default()(a).data(data).toString().toLowerCase();\n        var B = jquery__WEBPACK_IMPORTED_MODULE_0___default()(b).data(data).toString().toLowerCase();\n        return Sorter.sort(A, B, direction);\n      });\n      return elements.appendTo(this.container);\n    }\n  }, {\n    key: \"byName\",\n    value: function byName() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'gpm-name';\n      return this.byCommon(direction, data);\n    }\n  }, {\n    key: \"byAuthor\",\n    value: function byAuthor() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'gpm-author';\n      return this.byCommon(direction, data);\n    }\n  }, {\n    key: \"byOfficial\",\n    value: function byOfficial() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'gpm-official';\n      return this.byCommon(direction, data);\n    }\n  }, {\n    key: \"byReleaseDate\",\n    value: function byReleaseDate() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'gpm-release-date';\n      var elements = this.getElements().sort(function (a, b) {\n        var A = new Date(jquery__WEBPACK_IMPORTED_MODULE_0___default()(a).data(data)).getTime();\n        var B = new Date(jquery__WEBPACK_IMPORTED_MODULE_0___default()(b).data(data)).getTime();\n        return Sorter.sort(A, B, direction === 'asc' ? 'desc' : 'asc');\n      });\n      elements.appendTo(this.container);\n    }\n  }, {\n    key: \"byUpdatable\",\n    value: function byUpdatable() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'gpm-updatable';\n      return this.byCommon(direction, data);\n    }\n  }, {\n    key: \"byEnabled\",\n    value: function byEnabled() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'gpm-enabled';\n      return this.byCommon(direction, data);\n    }\n  }, {\n    key: \"byTesting\",\n    value: function byTesting() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'gpm-testing';\n      return this.byCommon(direction, data);\n    }\n  }], [{\n    key: \"sort\",\n    value: function sort(A, B) {\n      var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'asc';\n\n      if (A > B) {\n        return direction === 'asc' ? 1 : -1;\n      }\n\n      if (A < B) {\n        return direction === 'asc' ? -1 : 1;\n      }\n\n      return 0;\n    }\n  }]);\n\n  return Sorter;\n}();\n\nvar Packages = /*#__PURE__*/function () {\n  function Packages() {\n    _classCallCheck(this, Packages);\n\n    this.Sort = new Sorter();\n  }\n\n  _createClass(Packages, [{\n    key: \"addDependenciesToList\",\n    value: function addDependenciesToList(dependencies) {\n      var slug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      dependencies.forEach(function (dependency) {\n        Packages.addDependencyToList('plugin', dependency.name || dependency, slug);\n      });\n    }\n  }, {\n    key: \"removePackage\",\n    value: function removePackage(type, slug) {\n      var _this = this;\n\n      var url = Packages.getRemovePackageUrl(type);\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n        method: 'post',\n        body: {\n          \"package\": slug\n        }\n      }, function (response) {\n        if (response.status === 'success') {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.remove-package-confirm').addClass('hidden');\n\n          if (response.dependencies && response.dependencies.length > 0) {\n            _this.addDependenciesToList(response.dependencies);\n\n            jquery__WEBPACK_IMPORTED_MODULE_0___default()('.remove-package-dependencies').removeClass('hidden');\n          } else {\n            jquery__WEBPACK_IMPORTED_MODULE_0___default()('.remove-package-done').removeClass('hidden');\n          } // The package was removed. When the modal closes, move to the packages list\n\n\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on('closing', '[data-remodal-id=\"remove-package\"]', function () {\n            Packages.getBackToList(type);\n          });\n        } else {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.remove-package-confirm').addClass('hidden');\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.remove-package-error').removeClass('hidden');\n        }\n      });\n    }\n  }, {\n    key: \"reinstallPackage\",\n    value: function reinstallPackage(type, slug, package_name, current_version) {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.button-bar button').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.button-bar .spinning-wheel').removeClass('hidden');\n      var url = Packages.getReinstallPackageUrl(type);\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n        method: 'post',\n        body: {\n          slug: slug,\n          type: type,\n          package_name: package_name,\n          current_version: current_version\n        }\n      }, function (response) {\n        if (response.status === 'success') {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.reinstall-package-confirm').addClass('hidden');\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.reinstall-package-done').removeClass('hidden');\n        } else {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.reinstall-package-confirm').addClass('hidden');\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.reinstall-package-error').removeClass('hidden');\n        }\n\n        window.location.reload();\n      });\n    }\n  }, {\n    key: \"removeDependency\",\n    value: function removeDependency(type, slug, button) {\n      var _this2 = this;\n\n      var url = Packages.getRemovePackageUrl(type);\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n        method: 'post',\n        body: {\n          \"package\": slug\n        }\n      }, function (response) {\n        if (response.status === 'success') {\n          button.removeClass('button');\n          button.replaceWith(jquery__WEBPACK_IMPORTED_MODULE_0___default()('<span>Removed successfully</span>'));\n\n          if (response.dependencies && response.dependencies.length > 0) {\n            _this2.addDependenciesToList(response.dependencies, slug);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getPackagesDependencies\",\n    value: function getPackagesDependencies(type, slugs, finishedLoadingCallback) {\n      var url = Packages.getGetPackagesDependenciesUrl(type);\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n        method: 'post',\n        body: {\n          packages: slugs\n        }\n      }, function (response) {\n        finishedLoadingCallback();\n\n        if (response.status === 'success') {\n          if (response.dependencies) {\n            var hasDependencies = false;\n\n            for (var dependency in response.dependencies) {\n              if (response.dependencies.hasOwnProperty(dependency)) {\n                if (dependency === 'grav') {\n                  continue;\n                }\n\n                hasDependencies = true;\n                var dependencyName = dependency;\n                var action = response.dependencies[dependency];\n                Packages.addNeededDependencyToList(action, dependencyName);\n              }\n            }\n\n            if (hasDependencies) {\n              jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-dependencies-package-container').removeClass('hidden');\n            } else {\n              jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-package-container').removeClass('hidden');\n            }\n          } else {\n            jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-package-container').removeClass('hidden');\n          }\n        } else {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-package-error').removeClass('hidden');\n        }\n      });\n    }\n  }, {\n    key: \"installDependenciesOfPackages\",\n    value: function installDependenciesOfPackages(type, slugs, callbackSuccess, callbackError) {\n      var url = Packages.getInstallDependenciesOfPackagesUrl(type);\n      (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n        method: 'post',\n        body: {\n          packages: slugs\n        }\n      }, callbackSuccess);\n    }\n  }, {\n    key: \"installPackages\",\n    value: function installPackages(type, slugs, callbackSuccess) {\n      var url = Packages.getInstallPackageUrl(type);\n      es6_promise__WEBPACK_IMPORTED_MODULE_4__.Promise.all(slugs.map(function (slug) {\n        return new es6_promise__WEBPACK_IMPORTED_MODULE_4__.Promise(function (resolve, reject) {\n          (0,_utils_request__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, {\n            method: 'post',\n            body: {\n              \"package\": slug,\n              type: type\n            }\n          }, function (response) {\n            resolve(response);\n          });\n        });\n      })).then(callbackSuccess);\n    }\n  }, {\n    key: \"handleGettingPackageDependencies\",\n    value: function handleGettingPackageDependencies(type, event) {\n      var action = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'update';\n      var slugs = Packages.getSlugsFromEvent(event);\n\n      if (!slugs) {\n        alert('No slug set');\n        return;\n      } // Cleanup\n\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.packages-names-list').html('');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.install-dependencies-package-container li').remove();\n      slugs.forEach(function (slug) {\n        if (action === 'update') {\n          var current_version = '';\n          var available_version = '';\n          var _name = '';\n          var resources = _utils_gpm__WEBPACK_IMPORTED_MODULE_3__.Instance.payload.payload.resources;\n\n          if (resources.plugins[slug]) {\n            available_version = resources.plugins[slug].available;\n            current_version = resources.plugins[slug].version;\n            _name = resources.plugins[slug].name;\n          } else if (resources.themes[slug]) {\n            available_version = resources.themes[slug].available;\n            current_version = resources.themes[slug].version;\n            _name = resources.themes[slug].name;\n          }\n\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.packages-names-list').append(\"<li>\".concat(_name ? _name : slug, \", \").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.FROM, \" v<strong>\").concat(current_version, \"</strong> \").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.TO, \" v<strong>\").concat(available_version, \"</strong></li>\"));\n        } else {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('.packages-names-list').append(\"<li>\".concat(name ? name : slug, \"</li>\"));\n        }\n      });\n      event.preventDefault();\n      event.stopPropagation(); // fix mismatching types when sharing install modal between plugins/themes\n\n      var query = '[data-packages-modal] [data-theme-action], [data-packages-modal] [data-plugin-action]';\n      var data = jquery__WEBPACK_IMPORTED_MODULE_0___default()(query).data('themeAction') || jquery__WEBPACK_IMPORTED_MODULE_0___default()(query).data('pluginAction');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(query).removeAttr('data-theme-action').removeAttr('data-plugin-action').attr(\"data-\".concat(type, \"-action\"), data); // Restore original state\n\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .loading').removeClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-dependencies-package-container').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-package-container').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installing-dependencies').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installing-package').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installation-complete').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-package-error').addClass('hidden');\n      this.getPackagesDependencies(type, slugs, function () {\n        var slugs_string = slugs.join();\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-packages-modal] [data-\".concat(type, \"-action=\\\"install-dependencies-and-package\\\"]\")).attr('data-packages-slugs', slugs_string);\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[data-packages-modal] [data-\".concat(type, \"-action=\\\"install-package\\\"]\")).attr('data-packages-slugs', slugs_string);\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .loading').addClass('hidden');\n      });\n    }\n  }, {\n    key: \"handleInstallingDependenciesAndPackage\",\n    value: function handleInstallingDependenciesAndPackage(type, event) {\n      var _this3 = this;\n\n      var slugs = Packages.getSlugsFromEvent(event);\n      event.preventDefault();\n      event.stopPropagation();\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-dependencies-package-container').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-package-container').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installing-dependencies').removeClass('hidden');\n      this.installDependenciesOfPackages(type, slugs, function (response) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installing-dependencies').addClass('hidden');\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installing-package').removeClass('hidden');\n\n        _this3.installPackages(type, slugs, function () {\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installing-package').addClass('hidden');\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installation-complete').removeClass('hidden');\n\n          if (response.status === 'error') {\n            var remodal = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal]').data('remodal')];\n            remodal.close();\n            return;\n          }\n\n          setTimeout(function () {\n            if (slugs.length === 1) {\n              __webpack_require__.g.location.href = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/\").concat(type, \"s/\").concat(slugs[0]);\n            } else {\n              __webpack_require__.g.location.href = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/\").concat(type, \"s\");\n            }\n          }, 1000);\n        });\n      });\n    }\n  }, {\n    key: \"handleInstallingPackage\",\n    value: function handleInstallingPackage(type, event) {\n      var slugs = Packages.getSlugsFromEvent(event);\n      event.preventDefault();\n      event.stopPropagation();\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .install-package-container').addClass('hidden');\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installing-package').removeClass('hidden');\n      this.installPackages(type, slugs, function (response) {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installing-package').addClass('hidden');\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal] .installation-complete').removeClass('hidden');\n        var errors = Array.from(response).filter(function (r) {\n          return r.status === 'error';\n        });\n\n        if (errors && errors.length) {\n          var remodal = (jquery__WEBPACK_IMPORTED_MODULE_0___default().remodal.lookup)[jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-packages-modal].remodal-is-opened').data('remodal')];\n          remodal.close();\n          return;\n        }\n\n        if (slugs.length === 1) {\n          __webpack_require__.g.location.href = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/\").concat(type, \"s/\").concat(slugs[0]);\n        } else {\n          __webpack_require__.g.location.href = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/\").concat(type, \"s\");\n        }\n      });\n    }\n  }, {\n    key: \"handleRemovingPackage\",\n    value: function handleRemovingPackage(type, event) {\n      var slug = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).attr('data-packages-slugs');\n      event.preventDefault();\n      event.stopPropagation();\n      this.removePackage(type, slug);\n    }\n  }, {\n    key: \"handleReinstallPackage\",\n    value: function handleReinstallPackage(type, event) {\n      var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n      var slug = target.attr('data-package-slug');\n      var package_name = target.attr('data-package-name');\n      var current_version = target.attr('data-package-current-version');\n      event.preventDefault();\n      event.stopPropagation();\n      this.reinstallPackage(type, slug, package_name, current_version);\n    }\n  }, {\n    key: \"handleRemovingDependency\",\n    value: function handleRemovingDependency(type, event) {\n      var slug = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).attr('data-dependency-slug');\n      var button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target);\n      event.preventDefault();\n      event.stopPropagation();\n      this.removeDependency(type, slug, button);\n    }\n  }], [{\n    key: \"getBackToList\",\n    value: function getBackToList(type) {\n      __webpack_require__.g.location.href = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative, \"/\").concat(type, \"s\");\n    }\n  }, {\n    key: \"addDependencyToList\",\n    value: function addDependencyToList(type, dependency) {\n      var slug = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n      if (['admin', 'form', 'login', 'email', 'grav'].indexOf(dependency) !== -1) {\n        return;\n      }\n\n      var container = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.package-dependencies-container');\n      var text = \"\".concat(dependency, \" <a href=\\\"#\\\" class=\\\"button\\\" data-dependency-slug=\\\"\").concat(dependency, \"\\\" data-\").concat(type, \"-action=\\\"remove-dependency-package\\\">Remove</a>\");\n\n      if (slug) {\n        text += \" (was needed by \".concat(slug, \")\");\n      }\n\n      container.append(\"<li>\".concat(text, \"</li>\"));\n    }\n  }, {\n    key: \"getTaskUrl\",\n    value: function getTaskUrl(type, task) {\n      var url = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.base_url_relative);\n      url += \"/\".concat(type, \"s.json\");\n      url += \"/task\".concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.config.param_sep).concat(task);\n      return url;\n    }\n  }, {\n    key: \"getRemovePackageUrl\",\n    value: function getRemovePackageUrl(type) {\n      return \"\".concat(Packages.getTaskUrl(type, 'removePackage'));\n    }\n  }, {\n    key: \"getReinstallPackageUrl\",\n    value: function getReinstallPackageUrl(type) {\n      return \"\".concat(Packages.getTaskUrl(type, 'reinstallPackage'));\n    }\n  }, {\n    key: \"getGetPackagesDependenciesUrl\",\n    value: function getGetPackagesDependenciesUrl(type) {\n      return \"\".concat(Packages.getTaskUrl(type, 'getPackagesDependencies'));\n    }\n  }, {\n    key: \"getInstallDependenciesOfPackagesUrl\",\n    value: function getInstallDependenciesOfPackagesUrl(type) {\n      return \"\".concat(Packages.getTaskUrl(type, 'installDependenciesOfPackages'));\n    }\n  }, {\n    key: \"getInstallPackageUrl\",\n    value: function getInstallPackageUrl(type) {\n      return \"\".concat(Packages.getTaskUrl(type, 'installPackage'));\n    }\n  }, {\n    key: \"addNeededDependencyToList\",\n    value: function addNeededDependencyToList(action, slug) {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.install-dependencies-package-container .type-' + action).removeClass('hidden');\n      var list = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.install-dependencies-package-container .type-' + action + ' ul');\n\n      if (action !== 'install') {\n        var current_version = '';\n        var available_version = '';\n        var _name2 = '';\n        var resources = _utils_gpm__WEBPACK_IMPORTED_MODULE_3__.Instance.payload.payload.resources;\n\n        if (resources.plugins[slug]) {\n          available_version = resources.plugins[slug].available;\n          current_version = resources.plugins[slug].version;\n          _name2 = resources.plugins[slug].name;\n        } else if (resources.themes[slug]) {\n          available_version = resources.themes[slug].available;\n          current_version = resources.themes[slug].version;\n          _name2 = resources.themes[slug].name;\n        }\n\n        list.append(\"<li>\".concat(_name2 ? _name2 : slug, \", \").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.FROM, \" v<strong>\").concat(current_version, \"</strong> \").concat(grav_config__WEBPACK_IMPORTED_MODULE_1__.translations.PLUGIN_ADMIN.TO, \" v<strong>\").concat(available_version, \"</strong></li>\"));\n      } else {\n        list.append(\"<li>\".concat(name ? name : slug, \"</li>\"));\n      }\n    }\n  }, {\n    key: \"getSlugsFromEvent\",\n    value: function getSlugsFromEvent(event) {\n      var slugs = '';\n\n      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).is('[data-packages-slugs]')) {\n        slugs = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).attr('data-packages-slugs');\n      } else {\n        slugs = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).parent('[data-packages-slugs]').attr('data-packages-slugs');\n      }\n\n      if (typeof slugs === 'undefined') {\n        return null;\n      }\n\n      slugs = slugs.split(',');\n      return typeof slugs === 'string' ? [slugs] : slugs;\n    }\n  }]);\n\n  return Packages;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Packages());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/packages.js\n");

/***/ }),

/***/ "./app/utils/remodal.js":
/*!******************************!*\
  !*** ./app/utils/remodal.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* Remodal from https://github.com/vodkabears/Remodal\n * With Stackable option from https://github.com/antstorm/Remodal patch\n */\n\n!function (root, factory) {\n  return factory(root, (jquery__WEBPACK_IMPORTED_MODULE_0___default()));\n}(undefined, function (global, $) {\n  'use strict';\n  /**\n   * Name of the plugin\n   * @private\n   * @const\n   * @type {String}\n   */\n\n  var PLUGIN_NAME = 'remodal';\n  /**\n   * Namespace for CSS and events\n   * @private\n   * @const\n   * @type {String}\n   */\n\n  var NAMESPACE = window.REMODAL_GLOBALS && window.REMODAL_GLOBALS.NAMESPACE || PLUGIN_NAME;\n  /**\n   * Animationstart event with vendor prefixes\n   * @private\n   * @const\n   * @type {String}\n   */\n\n  var ANIMATIONSTART_EVENTS = $.map(['animationstart', 'webkitAnimationStart', 'MSAnimationStart', 'oAnimationStart'], function (eventName) {\n    return eventName + '.' + NAMESPACE;\n  }).join(' ');\n  /**\n   * Animationend event with vendor prefixes\n   * @private\n   * @const\n   * @type {String}\n   */\n\n  var ANIMATIONEND_EVENTS = $.map(['animationend', 'webkitAnimationEnd', 'MSAnimationEnd', 'oAnimationEnd'], function (eventName) {\n    return eventName + '.' + NAMESPACE;\n  }).join(' ');\n  /**\n   * Default settings\n   * @private\n   * @const\n   * @type {Object}\n   */\n\n  var DEFAULTS = $.extend({\n    hashTracking: true,\n    closeOnConfirm: true,\n    closeOnCancel: true,\n    closeOnEscape: true,\n    closeOnOutsideClick: true,\n    modifier: '',\n    stack: false,\n    appendTo: null\n  }, window.REMODAL_GLOBALS && window.REMODAL_GLOBALS.DEFAULTS);\n  /**\n   * States of the Remodal\n   * @private\n   * @const\n   * @enum {String}\n   */\n\n  var STATES = {\n    CLOSING: 'closing',\n    CLOSED: 'closed',\n    OPENING: 'opening',\n    OPENED: 'opened'\n  };\n  /**\n   * Reasons of the state change.\n   * @private\n   * @const\n   * @enum {String}\n   */\n\n  var STATE_CHANGE_REASONS = {\n    CONFIRMATION: 'confirmation',\n    CANCELLATION: 'cancellation'\n  };\n  /**\n   * Is animation supported?\n   * @private\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANIMATION = function () {\n    var style = document.createElement('div').style;\n    return style.animationName !== undefined || style.WebkitAnimationName !== undefined || style.MozAnimationName !== undefined || style.msAnimationName !== undefined || style.OAnimationName !== undefined;\n  }();\n  /**\n   * Is iOS?\n   * @private\n   * @const\n   * @type {Boolean}\n   */\n\n\n  var IS_IOS = /iPad|iPhone|iPod/.test(navigator.platform);\n  /**\n   * Current modal\n   * @private\n   * @type {Remodal}\n   */\n\n  var openModals = [];\n  /**\n   * Scrollbar position\n   * @private\n   * @type {Number}\n   */\n\n  var scrollTop;\n  /**\n   * Returns an animation duration\n   * @private\n   * @param {jQuery} $elem\n   * @returns {Number}\n   */\n\n  function getAnimationDuration($elem) {\n    if (IS_ANIMATION && $elem.css('animation-name') === 'none' && $elem.css('-webkit-animation-name') === 'none' && $elem.css('-moz-animation-name') === 'none' && $elem.css('-o-animation-name') === 'none' && $elem.css('-ms-animation-name') === 'none') {\n      return 0;\n    }\n\n    var duration = $elem.css('animation-duration') || $elem.css('-webkit-animation-duration') || $elem.css('-moz-animation-duration') || $elem.css('-o-animation-duration') || $elem.css('-ms-animation-duration') || '0s';\n    var delay = $elem.css('animation-delay') || $elem.css('-webkit-animation-delay') || $elem.css('-moz-animation-delay') || $elem.css('-o-animation-delay') || $elem.css('-ms-animation-delay') || '0s';\n    var iterationCount = $elem.css('animation-iteration-count') || $elem.css('-webkit-animation-iteration-count') || $elem.css('-moz-animation-iteration-count') || $elem.css('-o-animation-iteration-count') || $elem.css('-ms-animation-iteration-count') || '1';\n    var max;\n    var len;\n    var num;\n    var i;\n    duration = duration.split(', ');\n    delay = delay.split(', ');\n    iterationCount = iterationCount.split(', '); // The 'duration' size is the same as the 'delay' size\n\n    for (i = 0, len = duration.length, max = Number.NEGATIVE_INFINITY; i < len; i++) {\n      num = parseFloat(duration[i]) * parseInt(iterationCount[i], 10) + parseFloat(delay[i]);\n\n      if (num > max) {\n        max = num;\n      }\n    }\n\n    return max;\n  }\n  /**\n   * Returns a scrollbar width\n   * @private\n   * @returns {Number}\n   */\n\n\n  function getScrollbarWidth() {\n    if ($(document).height() <= $(window).height()) {\n      return 0;\n    }\n\n    var outer = document.createElement('div');\n    var inner = document.createElement('div');\n    var widthNoScroll;\n    var widthWithScroll;\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    document.body.appendChild(outer);\n    widthNoScroll = outer.offsetWidth; // Force scrollbars\n\n    outer.style.overflow = 'scroll'; // Add inner div\n\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n    widthWithScroll = inner.offsetWidth; // Remove divs\n\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n  }\n  /**\n   * Locks the screen\n   * @private\n   */\n\n\n  function lockScreen() {\n    if (IS_IOS) {\n      return;\n    }\n\n    var $html = $('html');\n    var lockedClass = namespacify('is-locked');\n    var paddingRight;\n    var $body;\n\n    if (!$html.hasClass(lockedClass)) {\n      $body = $(document.body); // Zepto does not support '-=', '+=' in the `css` method\n\n      paddingRight = parseInt($body.css('padding-right'), 10) + getScrollbarWidth();\n      $body.css('padding-right', paddingRight + 'px');\n      $html.addClass(lockedClass);\n    }\n  }\n  /**\n   * Unlocks the screen\n   * @private\n   */\n\n\n  function unlockScreen() {\n    if (IS_IOS) {\n      return;\n    }\n\n    var $html = $('html');\n    var lockedClass = namespacify('is-locked');\n    var paddingRight;\n    var $body;\n\n    if ($html.hasClass(lockedClass)) {\n      $body = $(document.body); // Zepto does not support '-=', '+=' in the `css` method\n\n      paddingRight = parseInt($body.css('padding-right'), 10) - getScrollbarWidth();\n      $body.css('padding-right', paddingRight + 'px');\n      $html.removeClass(lockedClass);\n    }\n  }\n  /**\n   * Sets a state for an instance\n   * @private\n   * @param {Remodal} instance\n   * @param {STATES} state\n   * @param {Boolean} isSilent If true, Remodal does not trigger events\n   * @param {String} Reason of a state change.\n   */\n\n\n  function setState(instance, state, isSilent, reason) {\n    var newState = namespacify('is', state);\n    var allStates = [namespacify('is', STATES.CLOSING), namespacify('is', STATES.OPENING), namespacify('is', STATES.CLOSED), namespacify('is', STATES.OPENED)].join(' ');\n    instance.$bg.removeClass(allStates).addClass(newState);\n    instance.$overlay.removeClass(allStates).addClass(newState);\n    instance.$wrapper.removeClass(allStates).addClass(newState);\n    instance.$modal.removeClass(allStates).addClass(newState);\n    instance.state = state;\n    !isSilent && instance.$modal.trigger({\n      type: state,\n      reason: reason\n    }, [{\n      reason: reason\n    }]);\n  }\n  /**\n   * Synchronizes with the animation\n   * @param {Function} doBeforeAnimation\n   * @param {Function} doAfterAnimation\n   * @param {Remodal} instance\n   */\n\n\n  function syncWithAnimation(doBeforeAnimation, doAfterAnimation, instance) {\n    var runningAnimationsCount = 0;\n\n    var handleAnimationStart = function handleAnimationStart(e) {\n      if (e.target !== this) {\n        return;\n      }\n\n      runningAnimationsCount++;\n    };\n\n    var handleAnimationEnd = function handleAnimationEnd(e) {\n      if (e.target !== this) {\n        return;\n      }\n\n      if (--runningAnimationsCount === 0) {\n        // Remove event listeners\n        $.each(['$bg', '$overlay', '$wrapper', '$modal'], function (index, elemName) {\n          instance[elemName].off(ANIMATIONSTART_EVENTS + ' ' + ANIMATIONEND_EVENTS);\n        });\n        doAfterAnimation();\n      }\n    };\n\n    $.each(['$bg', '$overlay', '$wrapper', '$modal'], function (index, elemName) {\n      instance[elemName].on(ANIMATIONSTART_EVENTS, handleAnimationStart).on(ANIMATIONEND_EVENTS, handleAnimationEnd);\n    });\n    doBeforeAnimation(); // If the animation is not supported by a browser or its duration is 0\n\n    if (getAnimationDuration(instance.$bg) === 0 && getAnimationDuration(instance.$overlay) === 0 && getAnimationDuration(instance.$wrapper) === 0 && getAnimationDuration(instance.$modal) === 0) {\n      // Remove event listeners\n      $.each(['$bg', '$overlay', '$wrapper', '$modal'], function (index, elemName) {\n        instance[elemName].off(ANIMATIONSTART_EVENTS + ' ' + ANIMATIONEND_EVENTS);\n      });\n      doAfterAnimation();\n    }\n  }\n  /**\n   * Closes immediately\n   * @private\n   * @param {Remodal} instance\n   */\n\n\n  function halt(instance) {\n    if (instance.state === STATES.CLOSED) {\n      return;\n    }\n\n    $.each(['$bg', '$overlay', '$wrapper', '$modal'], function (index, elemName) {\n      instance[elemName].off(ANIMATIONSTART_EVENTS + ' ' + ANIMATIONEND_EVENTS);\n    });\n    removeModal(instance);\n    instance.$bg.removeClass(instance.settings.modifier);\n    instance.$overlay.removeClass(instance.settings.modifier).hide();\n    instance.$wrapper.hide();\n\n    if (openModals.length === 0) {\n      unlockScreen();\n    }\n\n    setState(instance, STATES.CLOSED, true);\n  }\n  /**\n   * Parses a string with options\n   * @private\n   * @param str\n   * @returns {Object}\n   */\n\n\n  function parseOptions(str) {\n    var obj = {};\n    var arr;\n    var len;\n    var val;\n    var i; // Remove spaces before and after delimiters\n\n    str = str.replace(/\\s*:\\s*/g, ':').replace(/\\s*,\\s*/g, ','); // Parse a string\n\n    arr = str.split(',');\n\n    for (i = 0, len = arr.length; i < len; i++) {\n      arr[i] = arr[i].split(':');\n      val = arr[i][1]; // Convert a string value if it is like a boolean\n\n      if (typeof val === 'string' || val instanceof String) {\n        val = val === 'true' || (val === 'false' ? false : val);\n      } // Convert a string value if it is like a number\n\n\n      if (typeof val === 'string' || val instanceof String) {\n        val = !isNaN(val) ? +val : val;\n      }\n\n      obj[arr[i][0]] = val;\n    }\n\n    return obj;\n  }\n  /**\n   * Generates a string separated by dashes and prefixed with NAMESPACE\n   * @private\n   * @param {...String}\n   * @returns {String}\n   */\n\n\n  function namespacify() {\n    var result = NAMESPACE;\n\n    for (var i = 0; i < arguments.length; ++i) {\n      result += '-' + arguments[i];\n    }\n\n    return result;\n  }\n  /**\n   * Handles the hashchange event\n   * @private\n   * @listens hashchange\n   */\n\n\n  function handleHashChangeEvent() {\n    var id = location.hash.replace('#', '');\n    var instance;\n    var $elem;\n    var current = currentModal();\n\n    if (!id) {\n      // Check if we have currently opened modal and animation was completed\n      if (current && current.state === STATES.OPENED && current.settings.hashTracking) {\n        current.close();\n      }\n    } else {\n      if (!current || current.id !== id) {\n        // Catch syntax error if your hash is bad\n        try {\n          $elem = $('[data-' + PLUGIN_NAME + '-id=\"' + id + '\"]');\n        } catch (err) {}\n\n        if ($elem && $elem.length) {\n          instance = $[PLUGIN_NAME].lookup[$elem.data(PLUGIN_NAME)];\n\n          if (instance && instance.settings.hashTracking) {\n            instance.open();\n          }\n        }\n      }\n    }\n  }\n\n  function currentModal() {\n    return openModals[openModals.length - 1];\n  }\n\n  function removeModal(remodal) {\n    var index = openModals.indexOf(remodal);\n\n    if (index >= 0) {\n      openModals.slice(index, 1);\n    }\n  }\n  /**\n   * Remodal constructor\n   * @constructor\n   * @param {jQuery} $modal\n   * @param {Object} options\n   */\n\n\n  function Remodal($modal, options) {\n    var $body = $(document.body);\n    var $appendTo = $body;\n    var remodal = this;\n    remodal.id = $modal.attr('data-' + PLUGIN_NAME + '-id');\n    remodal.settings = $.extend({}, DEFAULTS, options);\n    remodal.index = $[PLUGIN_NAME].lookup.push(remodal) - 1;\n    remodal.state = STATES.CLOSED; // remodal.$overlay = $('.' + namespacify('overlay'));\n\n    if (remodal.settings.appendTo !== null && remodal.settings.appendTo.length) {\n      $appendTo = $(remodal.settings.appendTo);\n    }\n\n    if (!remodal.$overlay) {\n      remodal.$overlay = $('<div>').addClass(namespacify('overlay') + ' ' + namespacify('is', STATES.CLOSED)).hide();\n      $appendTo.append(remodal.$overlay);\n    }\n\n    remodal.$bg = $('.' + namespacify('bg')).addClass(namespacify('is', STATES.CLOSED));\n    remodal.$modal = $modal.addClass(NAMESPACE + ' ' + namespacify('is-initialized') + ' ' + remodal.settings.modifier + ' ' + namespacify('is', STATES.CLOSED)).attr('tabindex', '-1');\n    remodal.$wrapper = $('<div>').addClass(namespacify('wrapper') + ' ' + remodal.settings.modifier + ' ' + namespacify('is', STATES.CLOSED)).hide().append(remodal.$modal);\n    $appendTo.append(remodal.$wrapper); // Add the event listener for the close button\n\n    remodal.$wrapper.on('click.' + NAMESPACE, '[data-' + PLUGIN_NAME + '-action=\"close\"]', function (e) {\n      e.preventDefault();\n      remodal.close();\n    }); // Add the event listener for the cancel button\n\n    remodal.$wrapper.on('click.' + NAMESPACE, '[data-' + PLUGIN_NAME + '-action=\"cancel\"]', function (e) {\n      e.preventDefault();\n      remodal.$modal.trigger(STATE_CHANGE_REASONS.CANCELLATION);\n\n      if (remodal.settings.closeOnCancel) {\n        remodal.close(STATE_CHANGE_REASONS.CANCELLATION);\n      }\n    }); // Add the event listener for the confirm button\n\n    remodal.$wrapper.on('click.' + NAMESPACE, '[data-' + PLUGIN_NAME + '-action=\"confirm\"]', function (e) {\n      e.preventDefault();\n      remodal.$modal.trigger(STATE_CHANGE_REASONS.CONFIRMATION);\n\n      if (remodal.settings.closeOnConfirm) {\n        remodal.close(STATE_CHANGE_REASONS.CONFIRMATION);\n      }\n    }); // Add the event listener for the overlay\n\n    remodal.$wrapper.on('click.' + NAMESPACE, function (e) {\n      var $target = $(e.target);\n      var isWrapper = $target.hasClass(namespacify('wrapper'));\n      var isWithin = $target.closest('.' + namespacify('is', STATES.OPENED)).length;\n\n      if (!isWrapper && isWithin) {\n        return;\n      }\n\n      if (remodal.settings.closeOnOutsideClick) {\n        remodal.close();\n      }\n    });\n  }\n  /**\n   * Opens a modal window\n   * @public\n   */\n\n\n  Remodal.prototype.open = function () {\n    var remodal = this;\n    var current;\n    var modalCount; // Check if the animation was completed\n\n    if (remodal.state === STATES.OPENING || remodal.state === STATES.CLOSING) {\n      return;\n    } // id = remodal.$modal.attr('data-' + PLUGIN_NAME + '-id');\n\n\n    if (remodal.id && remodal.settings.hashTracking) {\n      scrollTop = $(window).scrollTop();\n      location.hash = remodal.id;\n    }\n\n    if (!remodal.settings.stack) {\n      current = currentModal();\n\n      if (current && current !== remodal) {\n        halt(current);\n      }\n    }\n\n    modalCount = openModals.push(remodal);\n    remodal.$overlay.css('z-index', function (_, value) {\n      return parseInt(value, 10) + modalCount;\n    });\n    remodal.$wrapper.css('z-index', function (_, value) {\n      return parseInt(value, 10) + modalCount;\n    });\n    lockScreen();\n    remodal.$bg.addClass(remodal.settings.modifier);\n    remodal.$overlay.addClass(remodal.settings.modifier).show();\n    remodal.$wrapper.show().scrollTop(0);\n    remodal.$modal.focus();\n    syncWithAnimation(function () {\n      setState(remodal, STATES.OPENING);\n    }, function () {\n      setState(remodal, STATES.OPENED);\n    }, remodal);\n  };\n  /**\n   * Closes a modal window\n   * @public\n   * @param {String} reason\n   */\n\n\n  Remodal.prototype.close = function (reason) {\n    var remodal = this;\n    var current; // Check if the animation was completed\n\n    if (remodal.state === STATES.OPENING || remodal.state === STATES.CLOSING || remodal.state === STATES.CLOSED) {\n      return;\n    }\n\n    removeModal(remodal);\n\n    if (remodal.settings.hashTracking && remodal.id === location.hash.substr(1)) {\n      current = currentModal();\n\n      if (current) {\n        location.hash = current.id;\n      } else {\n        location.hash = '';\n        $(window).scrollTop(scrollTop);\n      }\n    }\n\n    syncWithAnimation(function () {\n      setState(remodal, STATES.CLOSING, false, reason);\n    }, function () {\n      remodal.$bg.removeClass(remodal.settings.modifier);\n      remodal.$overlay.removeClass(remodal.settings.modifier).hide();\n      remodal.$wrapper.hide();\n\n      if (openModals.length === 0) {\n        unlockScreen();\n      }\n\n      setState(remodal, STATES.CLOSED, false, reason);\n    }, remodal);\n  };\n  /**\n   * Returns a current state of a modal\n   * @public\n   * @returns {STATES}\n   */\n\n\n  Remodal.prototype.getState = function () {\n    return this.state;\n  };\n  /**\n   * Destroys a modal\n   * @public\n   */\n\n\n  Remodal.prototype.destroy = function () {\n    var lookup = $[PLUGIN_NAME].lookup;\n    var instanceCount;\n    halt(this);\n    this.$wrapper.remove();\n    delete lookup[this.index];\n    instanceCount = $.grep(lookup, function (instance) {\n      return !!instance;\n    }).length;\n\n    if (instanceCount === 0) {\n      this.$overlay.remove();\n      this.$bg.removeClass(namespacify('is', STATES.CLOSING) + ' ' + namespacify('is', STATES.OPENING) + ' ' + namespacify('is', STATES.CLOSED) + ' ' + namespacify('is', STATES.OPENED));\n    }\n  };\n  /**\n   * Special plugin object for instances\n   * @public\n   * @type {Object}\n   */\n\n\n  $[PLUGIN_NAME] = {\n    lookup: []\n  };\n  /**\n   * Plugin constructor\n   * @constructor\n   * @param {Object} options\n   * @returns {JQuery}\n   */\n\n  $.fn[PLUGIN_NAME] = function (opts) {\n    var instance;\n    var $elem;\n    this.each(function (index, elem) {\n      $elem = $(elem);\n\n      if ($elem.data(PLUGIN_NAME) == null) {\n        instance = new Remodal($elem, opts);\n        $elem.data(PLUGIN_NAME, instance.index);\n\n        if (instance.settings.hashTracking && instance.id === location.hash.substr(1)) {\n          instance.open();\n        }\n      } else {\n        instance = $[PLUGIN_NAME].lookup[$elem.data(PLUGIN_NAME)];\n      }\n    });\n    return instance;\n  };\n\n  $(document).ready(function () {\n    // data-remodal-target opens a modal window with the special Id\n    $(document).on('click', '[data-' + PLUGIN_NAME + '-target]', function (e) {\n      e.preventDefault();\n      var elem = e.currentTarget;\n      var id = elem.getAttribute('data-' + PLUGIN_NAME + '-target');\n      var $target = $('[data-' + PLUGIN_NAME + '-id=\"' + id + '\"]');\n      $[PLUGIN_NAME].lookup[$target.data(PLUGIN_NAME)].open();\n    }); // Auto initialization of modal windows\n    // They should have the 'remodal' class attribute\n    // Also you can write the `data-remodal-options` attribute to pass params into the modal\n\n    $(document).find('.' + NAMESPACE).each(function (i, container) {\n      var $container = $(container);\n      var options = $container.data(PLUGIN_NAME + '-options');\n\n      if (!options) {\n        options = {};\n      } else if (typeof options === 'string' || options instanceof String) {\n        options = parseOptions(options);\n      }\n\n      $container[PLUGIN_NAME](options);\n    }); // Handles the keydown event\n\n    $(document).on('keydown.' + NAMESPACE, function (e) {\n      var current = currentModal();\n\n      if (current && current.settings.closeOnEscape && current.state === STATES.OPENED && e.keyCode === 27) {\n        current.close();\n      }\n    }); // Handles the hashchange event\n\n    $(window).on('hashchange.' + NAMESPACE, handleHashChangeEvent);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VixDQUF3QjBJLE9BQXhCO0FBQ0gsS0FYRCxFQWhCeUIsQ0E2QnpCOztBQUNBOUksSUFBQUEsQ0FBQyxDQUFDaUMsUUFBRCxDQUFELENBQVkrRSxFQUFaLENBQWUsYUFBYTNHLFNBQTVCLEVBQXVDLFVBQVNvRyxDQUFULEVBQVk7QUFDL0MsVUFBSTBCLE9BQU8sR0FBR0MsWUFBWSxFQUExQjs7QUFFQSxVQUFJRCxPQUFPLElBQUlBLE9BQU8sQ0FBQ2hCLFFBQVIsQ0FBaUJqRyxhQUE1QixJQUE2Q2lILE9BQU8sQ0FBQzFDLEtBQVIsS0FBa0JsRSxNQUFNLENBQUNJLE1BQXRFLElBQWdGOEUsQ0FBQyxDQUFDb0UsT0FBRixLQUFjLEVBQWxHLEVBQXNHO0FBQ2xHMUMsUUFBQUEsT0FBTyxDQUFDRSxLQUFSO0FBQ0g7QUFDSixLQU5ELEVBOUJ5QixDQXNDekI7O0FBQ0FySSxJQUFBQSxDQUFDLENBQUNNLE1BQUQsQ0FBRCxDQUFVMEcsRUFBVixDQUFhLGdCQUFnQjNHLFNBQTdCLEVBQXdDMEgscUJBQXhDO0FBQ0gsR0F4Q0Q7QUF5Q0gsQ0E3eUJBLENBQUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3V0aWxzL3JlbW9kYWwuanM/M2M5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBSZW1vZGFsIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3ZvZGthYmVhcnMvUmVtb2RhbFxuICogV2l0aCBTdGFja2FibGUgb3B0aW9uIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2FudHN0b3JtL1JlbW9kYWwgcGF0Y2hcbiAqL1xuXG5pbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuXG4hKGZ1bmN0aW9uKHJvb3QsIGZhY3RvcnkpIHtcbiAgICByZXR1cm4gZmFjdG9yeShyb290LCAkKTtcbn0pKHRoaXMsIGZ1bmN0aW9uKGdsb2JhbCwgJCkge1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgLyoqXG4gICAgICogTmFtZSBvZiB0aGUgcGx1Z2luXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAY29uc3RcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIHZhciBQTFVHSU5fTkFNRSA9ICdyZW1vZGFsJztcblxuICAgIC8qKlxuICAgICAqIE5hbWVzcGFjZSBmb3IgQ1NTIGFuZCBldmVudHNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBjb25zdFxuICAgICAqIEB0eXBlIHtTdHJpbmd9XG4gICAgICovXG4gICAgdmFyIE5BTUVTUEFDRSA9IHdpbmRvdy5SRU1PREFMX0dMT0JBTFMgJiYgd2luZG93LlJFTU9EQUxfR0xPQkFMUy5OQU1FU1BBQ0UgfHwgUExVR0lOX05BTUU7XG5cbiAgICAvKipcbiAgICAgKiBBbmltYXRpb25zdGFydCBldmVudCB3aXRoIHZlbmRvciBwcmVmaXhlc1xuICAgICAqIEBwcml2YXRlXG4gICAgICogQGNvbnN0XG4gICAgICogQHR5cGUge1N0cmluZ31cbiAgICAgKi9cbiAgICB2YXIgQU5JTUFUSU9OU1RBUlRfRVZFTlRTID0gJC5tYXAoXG4gICAgICAgIFsnYW5pbWF0aW9uc3RhcnQnLCAnd2Via2l0QW5pbWF0aW9uU3RhcnQnLCAnTVNBbmltYXRpb25TdGFydCcsICdvQW5pbWF0aW9uU3RhcnQnXSxcblxuICAgICAgICBmdW5jdGlvbihldmVudE5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiBldmVudE5hbWUgKyAnLicgKyBOQU1FU1BBQ0U7XG4gICAgICAgIH1cblxuICAgICkuam9pbignICcpO1xuXG4gICAgLyoqXG4gICAgICogQW5pbWF0aW9uZW5kIGV2ZW50IHdpdGggdmVuZG9yIHByZWZpeGVzXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAY29uc3RcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgICAqL1xuICAgIHZhciBBTklNQVRJT05FTkRfRVZFTlRTID0gJC5tYXAoXG4gICAgICAgIFsnYW5pbWF0aW9uZW5kJywgJ3dlYmtpdEFuaW1hdGlvbkVuZCcsICdNU0FuaW1hdGlvbkVuZCcsICdvQW5pbWF0aW9uRW5kJ10sXG5cbiAgICAgICAgZnVuY3Rpb24oZXZlbnROYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gZXZlbnROYW1lICsgJy4nICsgTkFNRVNQQUNFO1xuICAgICAgICB9XG5cbiAgICApLmpvaW4oJyAnKTtcblxuICAgIC8qKlxuICAgICAqIERlZmF1bHQgc2V0dGluZ3NcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBjb25zdFxuICAgICAqIEB0eXBlIHtPYmplY3R9XG4gICAgICovXG4gICAgdmFyIERFRkFVTFRTID0gJC5leHRlbmQoe1xuICAgICAgICBoYXNoVHJhY2tpbmc6IHRydWUsXG4gICAgICAgIGNsb3NlT25Db25maXJtOiB0cnVlLFxuICAgICAgICBjbG9zZU9uQ2FuY2VsOiB0cnVlLFxuICAgICAgICBjbG9zZU9uRXNjYXBlOiB0cnVlLFxuICAgICAgICBjbG9zZU9uT3V0c2lkZUNsaWNrOiB0cnVlLFxuICAgICAgICBtb2RpZmllcjogJycsXG4gICAgICAgIHN0YWNrOiBmYWxzZSxcbiAgICAgICAgYXBwZW5kVG86IG51bGxcbiAgICB9LCB3aW5kb3cuUkVNT0RBTF9HTE9CQUxTICYmIHdpbmRvdy5SRU1PREFMX0dMT0JBTFMuREVGQVVMVFMpO1xuXG4gICAgLyoqXG4gICAgICogU3RhdGVzIG9mIHRoZSBSZW1vZGFsXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAY29uc3RcbiAgICAgKiBAZW51bSB7U3RyaW5nfVxuICAgICAqL1xuICAgIHZhciBTVEFURVMgPSB7XG4gICAgICAgIENMT1NJTkc6ICdjbG9zaW5nJyxcbiAgICAgICAgQ0xPU0VEOiAnY2xvc2VkJyxcbiAgICAgICAgT1BFTklORzogJ29wZW5pbmcnLFxuICAgICAgICBPUEVORUQ6ICdvcGVuZWQnXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJlYXNvbnMgb2YgdGhlIHN0YXRlIGNoYW5nZS5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBjb25zdFxuICAgICAqIEBlbnVtIHtTdHJpbmd9XG4gICAgICovXG4gICAgdmFyIFNUQVRFX0NIQU5HRV9SRUFTT05TID0ge1xuICAgICAgICBDT05GSVJNQVRJT046ICdjb25maXJtYXRpb24nLFxuICAgICAgICBDQU5DRUxMQVRJT046ICdjYW5jZWxsYXRpb24nXG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIElzIGFuaW1hdGlvbiBzdXBwb3J0ZWQ/XG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAY29uc3RcbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICB2YXIgSVNfQU5JTUFUSU9OID0gKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKS5zdHlsZTtcblxuICAgICAgICByZXR1cm4gc3R5bGUuYW5pbWF0aW9uTmFtZSAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICBzdHlsZS5XZWJraXRBbmltYXRpb25OYW1lICE9PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgIHN0eWxlLk1vekFuaW1hdGlvbk5hbWUgIT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgc3R5bGUubXNBbmltYXRpb25OYW1lICE9PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgIHN0eWxlLk9BbmltYXRpb25OYW1lICE9PSB1bmRlZmluZWQ7XG4gICAgfSkoKTtcblxuICAgIC8qKlxuICAgICAqIElzIGlPUz9cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBjb25zdFxuICAgICAqIEB0eXBlIHtCb29sZWFufVxuICAgICAqL1xuICAgIHZhciBJU19JT1MgPSAvaVBhZHxpUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IucGxhdGZvcm0pO1xuXG4gICAgLyoqXG4gICAgICogQ3VycmVudCBtb2RhbFxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHR5cGUge1JlbW9kYWx9XG4gICAgICovXG4gICAgdmFyIG9wZW5Nb2RhbHMgPSBbXTtcblxuICAgIC8qKlxuICAgICAqIFNjcm9sbGJhciBwb3NpdGlvblxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHR5cGUge051bWJlcn1cbiAgICAgKi9cbiAgICB2YXIgc2Nyb2xsVG9wO1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhbmltYXRpb24gZHVyYXRpb25cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7alF1ZXJ5fSAkZWxlbVxuICAgICAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gICAgICovXG4gICAgZnVuY3Rpb24gZ2V0QW5pbWF0aW9uRHVyYXRpb24oJGVsZW0pIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgSVNfQU5JTUFUSU9OICYmXG4gICAgICAgICAgICAkZWxlbS5jc3MoJ2FuaW1hdGlvbi1uYW1lJykgPT09ICdub25lJyAmJlxuICAgICAgICAgICAgJGVsZW0uY3NzKCctd2Via2l0LWFuaW1hdGlvbi1uYW1lJykgPT09ICdub25lJyAmJlxuICAgICAgICAgICAgJGVsZW0uY3NzKCctbW96LWFuaW1hdGlvbi1uYW1lJykgPT09ICdub25lJyAmJlxuICAgICAgICAgICAgJGVsZW0uY3NzKCctby1hbmltYXRpb24tbmFtZScpID09PSAnbm9uZScgJiZcbiAgICAgICAgICAgICRlbGVtLmNzcygnLW1zLWFuaW1hdGlvbi1uYW1lJykgPT09ICdub25lJ1xuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGR1cmF0aW9uID0gJGVsZW0uY3NzKCdhbmltYXRpb24tZHVyYXRpb24nKSB8fFxuICAgICAgICAgICAgJGVsZW0uY3NzKCctd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbicpIHx8XG4gICAgICAgICAgICAkZWxlbS5jc3MoJy1tb3otYW5pbWF0aW9uLWR1cmF0aW9uJykgfHxcbiAgICAgICAgICAgICRlbGVtLmNzcygnLW8tYW5pbWF0aW9uLWR1cmF0aW9uJykgfHxcbiAgICAgICAgICAgICRlbGVtLmNzcygnLW1zLWFuaW1hdGlvbi1kdXJhdGlvbicpIHx8XG4gICAgICAgICAgICAnMHMnO1xuXG4gICAgICAgIHZhciBkZWxheSA9ICRlbGVtLmNzcygnYW5pbWF0aW9uLWRlbGF5JykgfHxcbiAgICAgICAgICAgICRlbGVtLmNzcygnLXdlYmtpdC1hbmltYXRpb24tZGVsYXknKSB8fFxuICAgICAgICAgICAgJGVsZW0uY3NzKCctbW96LWFuaW1hdGlvbi1kZWxheScpIHx8XG4gICAgICAgICAgICAkZWxlbS5jc3MoJy1vLWFuaW1hdGlvbi1kZWxheScpIHx8XG4gICAgICAgICAgICAkZWxlbS5jc3MoJy1tcy1hbmltYXRpb24tZGVsYXknKSB8fFxuICAgICAgICAgICAgJzBzJztcblxuICAgICAgICB2YXIgaXRlcmF0aW9uQ291bnQgPSAkZWxlbS5jc3MoJ2FuaW1hdGlvbi1pdGVyYXRpb24tY291bnQnKSB8fFxuICAgICAgICAgICAgJGVsZW0uY3NzKCctd2Via2l0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQnKSB8fFxuICAgICAgICAgICAgJGVsZW0uY3NzKCctbW96LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQnKSB8fFxuICAgICAgICAgICAgJGVsZW0uY3NzKCctby1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50JykgfHxcbiAgICAgICAgICAgICRlbGVtLmNzcygnLW1zLWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQnKSB8fFxuICAgICAgICAgICAgJzEnO1xuXG4gICAgICAgIHZhciBtYXg7XG4gICAgICAgIHZhciBsZW47XG4gICAgICAgIHZhciBudW07XG4gICAgICAgIHZhciBpO1xuXG4gICAgICAgIGR1cmF0aW9uID0gZHVyYXRpb24uc3BsaXQoJywgJyk7XG4gICAgICAgIGRlbGF5ID0gZGVsYXkuc3BsaXQoJywgJyk7XG4gICAgICAgIGl0ZXJhdGlvbkNvdW50ID0gaXRlcmF0aW9uQ291bnQuc3BsaXQoJywgJyk7XG5cbiAgICAgICAgLy8gVGhlICdkdXJhdGlvbicgc2l6ZSBpcyB0aGUgc2FtZSBhcyB0aGUgJ2RlbGF5JyBzaXplXG4gICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IGR1cmF0aW9uLmxlbmd0aCwgbWF4ID0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIG51bSA9IHBhcnNlRmxvYXQoZHVyYXRpb25baV0pICogcGFyc2VJbnQoaXRlcmF0aW9uQ291bnRbaV0sIDEwKSArIHBhcnNlRmxvYXQoZGVsYXlbaV0pO1xuXG4gICAgICAgICAgICBpZiAobnVtID4gbWF4KSB7XG4gICAgICAgICAgICAgICAgbWF4ID0gbnVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG1heDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgc2Nyb2xsYmFyIHdpZHRoXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcmV0dXJucyB7TnVtYmVyfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdldFNjcm9sbGJhcldpZHRoKCkge1xuICAgICAgICBpZiAoJChkb2N1bWVudCkuaGVpZ2h0KCkgPD0gJCh3aW5kb3cpLmhlaWdodCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBvdXRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB2YXIgaW5uZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdmFyIHdpZHRoTm9TY3JvbGw7XG4gICAgICAgIHZhciB3aWR0aFdpdGhTY3JvbGw7XG5cbiAgICAgICAgb3V0ZXIuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuICAgICAgICBvdXRlci5zdHlsZS53aWR0aCA9ICcxMDBweCc7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQob3V0ZXIpO1xuXG4gICAgICAgIHdpZHRoTm9TY3JvbGwgPSBvdXRlci5vZmZzZXRXaWR0aDtcblxuICAgICAgICAvLyBGb3JjZSBzY3JvbGxiYXJzXG4gICAgICAgIG91dGVyLnN0eWxlLm92ZXJmbG93ID0gJ3Njcm9sbCc7XG5cbiAgICAgICAgLy8gQWRkIGlubmVyIGRpdlxuICAgICAgICBpbm5lci5zdHlsZS53aWR0aCA9ICcxMDAlJztcbiAgICAgICAgb3V0ZXIuYXBwZW5kQ2hpbGQoaW5uZXIpO1xuXG4gICAgICAgIHdpZHRoV2l0aFNjcm9sbCA9IGlubmVyLm9mZnNldFdpZHRoO1xuXG4gICAgICAgIC8vIFJlbW92ZSBkaXZzXG4gICAgICAgIG91dGVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQob3V0ZXIpO1xuXG4gICAgICAgIHJldHVybiB3aWR0aE5vU2Nyb2xsIC0gd2lkdGhXaXRoU2Nyb2xsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIExvY2tzIHRoZSBzY3JlZW5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGxvY2tTY3JlZW4oKSB7XG4gICAgICAgIGlmIChJU19JT1MpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciAkaHRtbCA9ICQoJ2h0bWwnKTtcbiAgICAgICAgdmFyIGxvY2tlZENsYXNzID0gbmFtZXNwYWNpZnkoJ2lzLWxvY2tlZCcpO1xuICAgICAgICB2YXIgcGFkZGluZ1JpZ2h0O1xuICAgICAgICB2YXIgJGJvZHk7XG5cbiAgICAgICAgaWYgKCEkaHRtbC5oYXNDbGFzcyhsb2NrZWRDbGFzcykpIHtcbiAgICAgICAgICAgICRib2R5ID0gJChkb2N1bWVudC5ib2R5KTtcblxuICAgICAgICAgICAgLy8gWmVwdG8gZG9lcyBub3Qgc3VwcG9ydCAnLT0nLCAnKz0nIGluIHRoZSBgY3NzYCBtZXRob2RcbiAgICAgICAgICAgIHBhZGRpbmdSaWdodCA9IHBhcnNlSW50KCRib2R5LmNzcygncGFkZGluZy1yaWdodCcpLCAxMCkgKyBnZXRTY3JvbGxiYXJXaWR0aCgpO1xuXG4gICAgICAgICAgICAkYm9keS5jc3MoJ3BhZGRpbmctcmlnaHQnLCBwYWRkaW5nUmlnaHQgKyAncHgnKTtcbiAgICAgICAgICAgICRodG1sLmFkZENsYXNzKGxvY2tlZENsYXNzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVubG9ja3MgdGhlIHNjcmVlblxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgZnVuY3Rpb24gdW5sb2NrU2NyZWVuKCkge1xuICAgICAgICBpZiAoSVNfSU9TKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgJGh0bWwgPSAkKCdodG1sJyk7XG4gICAgICAgIHZhciBsb2NrZWRDbGFzcyA9IG5hbWVzcGFjaWZ5KCdpcy1sb2NrZWQnKTtcbiAgICAgICAgdmFyIHBhZGRpbmdSaWdodDtcbiAgICAgICAgdmFyICRib2R5O1xuXG4gICAgICAgIGlmICgkaHRtbC5oYXNDbGFzcyhsb2NrZWRDbGFzcykpIHtcbiAgICAgICAgICAgICRib2R5ID0gJChkb2N1bWVudC5ib2R5KTtcblxuICAgICAgICAgICAgLy8gWmVwdG8gZG9lcyBub3Qgc3VwcG9ydCAnLT0nLCAnKz0nIGluIHRoZSBgY3NzYCBtZXRob2RcbiAgICAgICAgICAgIHBhZGRpbmdSaWdodCA9IHBhcnNlSW50KCRib2R5LmNzcygncGFkZGluZy1yaWdodCcpLCAxMCkgLSBnZXRTY3JvbGxiYXJXaWR0aCgpO1xuXG4gICAgICAgICAgICAkYm9keS5jc3MoJ3BhZGRpbmctcmlnaHQnLCBwYWRkaW5nUmlnaHQgKyAncHgnKTtcbiAgICAgICAgICAgICRodG1sLnJlbW92ZUNsYXNzKGxvY2tlZENsYXNzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgYSBzdGF0ZSBmb3IgYW4gaW5zdGFuY2VcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7UmVtb2RhbH0gaW5zdGFuY2VcbiAgICAgKiBAcGFyYW0ge1NUQVRFU30gc3RhdGVcbiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IGlzU2lsZW50IElmIHRydWUsIFJlbW9kYWwgZG9lcyBub3QgdHJpZ2dlciBldmVudHNcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gUmVhc29uIG9mIGEgc3RhdGUgY2hhbmdlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNldFN0YXRlKGluc3RhbmNlLCBzdGF0ZSwgaXNTaWxlbnQsIHJlYXNvbikge1xuXG4gICAgICAgIHZhciBuZXdTdGF0ZSA9IG5hbWVzcGFjaWZ5KCdpcycsIHN0YXRlKTtcbiAgICAgICAgdmFyIGFsbFN0YXRlcyA9IFtuYW1lc3BhY2lmeSgnaXMnLCBTVEFURVMuQ0xPU0lORyksXG4gICAgICAgICAgICBuYW1lc3BhY2lmeSgnaXMnLCBTVEFURVMuT1BFTklORyksXG4gICAgICAgICAgICBuYW1lc3BhY2lmeSgnaXMnLCBTVEFURVMuQ0xPU0VEKSxcbiAgICAgICAgICAgIG5hbWVzcGFjaWZ5KCdpcycsIFNUQVRFUy5PUEVORUQpXS5qb2luKCcgJyk7XG5cbiAgICAgICAgaW5zdGFuY2UuJGJnXG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoYWxsU3RhdGVzKVxuICAgICAgICAgICAgLmFkZENsYXNzKG5ld1N0YXRlKTtcblxuICAgICAgICBpbnN0YW5jZS4kb3ZlcmxheVxuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKGFsbFN0YXRlcylcbiAgICAgICAgICAgIC5hZGRDbGFzcyhuZXdTdGF0ZSk7XG5cbiAgICAgICAgaW5zdGFuY2UuJHdyYXBwZXJcbiAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhhbGxTdGF0ZXMpXG4gICAgICAgICAgICAuYWRkQ2xhc3MobmV3U3RhdGUpO1xuXG4gICAgICAgIGluc3RhbmNlLiRtb2RhbFxuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKGFsbFN0YXRlcylcbiAgICAgICAgICAgIC5hZGRDbGFzcyhuZXdTdGF0ZSk7XG5cbiAgICAgICAgaW5zdGFuY2Uuc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgIWlzU2lsZW50ICYmIGluc3RhbmNlLiRtb2RhbC50cmlnZ2VyKHtcbiAgICAgICAgICAgIHR5cGU6IHN0YXRlLFxuICAgICAgICAgICAgcmVhc29uOiByZWFzb25cbiAgICAgICAgfSwgW3sgcmVhc29uOiByZWFzb24gfV0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN5bmNocm9uaXplcyB3aXRoIHRoZSBhbmltYXRpb25cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb0JlZm9yZUFuaW1hdGlvblxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvQWZ0ZXJBbmltYXRpb25cbiAgICAgKiBAcGFyYW0ge1JlbW9kYWx9IGluc3RhbmNlXG4gICAgICovXG4gICAgZnVuY3Rpb24gc3luY1dpdGhBbmltYXRpb24oZG9CZWZvcmVBbmltYXRpb24sIGRvQWZ0ZXJBbmltYXRpb24sIGluc3RhbmNlKSB7XG4gICAgICAgIHZhciBydW5uaW5nQW5pbWF0aW9uc0NvdW50ID0gMDtcblxuICAgICAgICB2YXIgaGFuZGxlQW5pbWF0aW9uU3RhcnQgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBpZiAoZS50YXJnZXQgIT09IHRoaXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJ1bm5pbmdBbmltYXRpb25zQ291bnQrKztcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgaGFuZGxlQW5pbWF0aW9uRW5kID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgaWYgKGUudGFyZ2V0ICE9PSB0aGlzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoLS1ydW5uaW5nQW5pbWF0aW9uc0NvdW50ID09PSAwKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBSZW1vdmUgZXZlbnQgbGlzdGVuZXJzXG4gICAgICAgICAgICAgICAgJC5lYWNoKFsnJGJnJywgJyRvdmVybGF5JywgJyR3cmFwcGVyJywgJyRtb2RhbCddLCBmdW5jdGlvbihpbmRleCwgZWxlbU5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2VbZWxlbU5hbWVdLm9mZihBTklNQVRJT05TVEFSVF9FVkVOVFMgKyAnICcgKyBBTklNQVRJT05FTkRfRVZFTlRTKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGRvQWZ0ZXJBbmltYXRpb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAkLmVhY2goWyckYmcnLCAnJG92ZXJsYXknLCAnJHdyYXBwZXInLCAnJG1vZGFsJ10sIGZ1bmN0aW9uKGluZGV4LCBlbGVtTmFtZSkge1xuICAgICAgICAgICAgaW5zdGFuY2VbZWxlbU5hbWVdXG4gICAgICAgICAgICAgICAgLm9uKEFOSU1BVElPTlNUQVJUX0VWRU5UUywgaGFuZGxlQW5pbWF0aW9uU3RhcnQpXG4gICAgICAgICAgICAgICAgLm9uKEFOSU1BVElPTkVORF9FVkVOVFMsIGhhbmRsZUFuaW1hdGlvbkVuZCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGRvQmVmb3JlQW5pbWF0aW9uKCk7XG5cbiAgICAgICAgLy8gSWYgdGhlIGFuaW1hdGlvbiBpcyBub3Qgc3VwcG9ydGVkIGJ5IGEgYnJvd3NlciBvciBpdHMgZHVyYXRpb24gaXMgMFxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBnZXRBbmltYXRpb25EdXJhdGlvbihpbnN0YW5jZS4kYmcpID09PSAwICYmXG4gICAgICAgICAgICBnZXRBbmltYXRpb25EdXJhdGlvbihpbnN0YW5jZS4kb3ZlcmxheSkgPT09IDAgJiZcbiAgICAgICAgICAgIGdldEFuaW1hdGlvbkR1cmF0aW9uKGluc3RhbmNlLiR3cmFwcGVyKSA9PT0gMCAmJlxuICAgICAgICAgICAgZ2V0QW5pbWF0aW9uRHVyYXRpb24oaW5zdGFuY2UuJG1vZGFsKSA9PT0gMFxuICAgICAgICApIHtcblxuICAgICAgICAgICAgLy8gUmVtb3ZlIGV2ZW50IGxpc3RlbmVyc1xuICAgICAgICAgICAgJC5lYWNoKFsnJGJnJywgJyRvdmVybGF5JywgJyR3cmFwcGVyJywgJyRtb2RhbCddLCBmdW5jdGlvbihpbmRleCwgZWxlbU5hbWUpIHtcbiAgICAgICAgICAgICAgICBpbnN0YW5jZVtlbGVtTmFtZV0ub2ZmKEFOSU1BVElPTlNUQVJUX0VWRU5UUyArICcgJyArIEFOSU1BVElPTkVORF9FVkVOVFMpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGRvQWZ0ZXJBbmltYXRpb24oKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENsb3NlcyBpbW1lZGlhdGVseVxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtSZW1vZGFsfSBpbnN0YW5jZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGhhbHQoaW5zdGFuY2UpIHtcbiAgICAgICAgaWYgKGluc3RhbmNlLnN0YXRlID09PSBTVEFURVMuQ0xPU0VEKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAkLmVhY2goWyckYmcnLCAnJG92ZXJsYXknLCAnJHdyYXBwZXInLCAnJG1vZGFsJ10sIGZ1bmN0aW9uKGluZGV4LCBlbGVtTmFtZSkge1xuICAgICAgICAgICAgaW5zdGFuY2VbZWxlbU5hbWVdLm9mZihBTklNQVRJT05TVEFSVF9FVkVOVFMgKyAnICcgKyBBTklNQVRJT05FTkRfRVZFTlRTKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmVtb3ZlTW9kYWwoaW5zdGFuY2UpO1xuICAgICAgICBpbnN0YW5jZS4kYmcucmVtb3ZlQ2xhc3MoaW5zdGFuY2Uuc2V0dGluZ3MubW9kaWZpZXIpO1xuICAgICAgICBpbnN0YW5jZS4kb3ZlcmxheS5yZW1vdmVDbGFzcyhpbnN0YW5jZS5zZXR0aW5ncy5tb2RpZmllcikuaGlkZSgpO1xuICAgICAgICBpbnN0YW5jZS4kd3JhcHBlci5oaWRlKCk7XG5cbiAgICAgICAgaWYgKG9wZW5Nb2RhbHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB1bmxvY2tTY3JlZW4oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNldFN0YXRlKGluc3RhbmNlLCBTVEFURVMuQ0xPU0VELCB0cnVlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQYXJzZXMgYSBzdHJpbmcgd2l0aCBvcHRpb25zXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0gc3RyXG4gICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBwYXJzZU9wdGlvbnMoc3RyKSB7XG4gICAgICAgIHZhciBvYmogPSB7fTtcbiAgICAgICAgdmFyIGFycjtcbiAgICAgICAgdmFyIGxlbjtcbiAgICAgICAgdmFyIHZhbDtcbiAgICAgICAgdmFyIGk7XG5cbiAgICAgICAgLy8gUmVtb3ZlIHNwYWNlcyBiZWZvcmUgYW5kIGFmdGVyIGRlbGltaXRlcnNcbiAgICAgICAgc3RyID0gc3RyLnJlcGxhY2UoL1xccyo6XFxzKi9nLCAnOicpLnJlcGxhY2UoL1xccyosXFxzKi9nLCAnLCcpO1xuXG4gICAgICAgIC8vIFBhcnNlIGEgc3RyaW5nXG4gICAgICAgIGFyciA9IHN0ci5zcGxpdCgnLCcpO1xuICAgICAgICBmb3IgKGkgPSAwLCBsZW4gPSBhcnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGFycltpXSA9IGFycltpXS5zcGxpdCgnOicpO1xuICAgICAgICAgICAgdmFsID0gYXJyW2ldWzFdO1xuXG4gICAgICAgICAgICAvLyBDb252ZXJ0IGEgc3RyaW5nIHZhbHVlIGlmIGl0IGlzIGxpa2UgYSBib29sZWFuXG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycgfHwgdmFsIGluc3RhbmNlb2YgU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgdmFsID0gdmFsID09PSAndHJ1ZScgfHwgKHZhbCA9PT0gJ2ZhbHNlJyA/IGZhbHNlIDogdmFsKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQ29udmVydCBhIHN0cmluZyB2YWx1ZSBpZiBpdCBpcyBsaWtlIGEgbnVtYmVyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycgfHwgdmFsIGluc3RhbmNlb2YgU3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgdmFsID0gIWlzTmFOKHZhbCkgPyArdmFsIDogdmFsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBvYmpbYXJyW2ldWzBdXSA9IHZhbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEgc3RyaW5nIHNlcGFyYXRlZCBieSBkYXNoZXMgYW5kIHByZWZpeGVkIHdpdGggTkFNRVNQQUNFXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0gey4uLlN0cmluZ31cbiAgICAgKiBAcmV0dXJucyB7U3RyaW5nfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIG5hbWVzcGFjaWZ5KCkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gTkFNRVNQQUNFO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gJy0nICsgYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIYW5kbGVzIHRoZSBoYXNoY2hhbmdlIGV2ZW50XG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAbGlzdGVucyBoYXNoY2hhbmdlXG4gICAgICovXG4gICAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZUV2ZW50KCkge1xuICAgICAgICB2YXIgaWQgPSBsb2NhdGlvbi5oYXNoLnJlcGxhY2UoJyMnLCAnJyk7XG4gICAgICAgIHZhciBpbnN0YW5jZTtcbiAgICAgICAgdmFyICRlbGVtO1xuXG4gICAgICAgIHZhciBjdXJyZW50ID0gY3VycmVudE1vZGFsKCk7XG5cbiAgICAgICAgaWYgKCFpZCkge1xuXG4gICAgICAgICAgICAvLyBDaGVjayBpZiB3ZSBoYXZlIGN1cnJlbnRseSBvcGVuZWQgbW9kYWwgYW5kIGFuaW1hdGlvbiB3YXMgY29tcGxldGVkXG4gICAgICAgICAgICBpZiAoY3VycmVudCAmJiBjdXJyZW50LnN0YXRlID09PSBTVEFURVMuT1BFTkVEICYmIGN1cnJlbnQuc2V0dGluZ3MuaGFzaFRyYWNraW5nKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudC5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICBpZiAoIWN1cnJlbnQgfHwgY3VycmVudC5pZCAhPT0gaWQpIHtcbiAgICAgICAgICAgICAgICAvLyBDYXRjaCBzeW50YXggZXJyb3IgaWYgeW91ciBoYXNoIGlzIGJhZFxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICRlbGVtID0gJChcbiAgICAgICAgICAgICAgICAgICAgICAgICdbZGF0YS0nICsgUExVR0lOX05BTUUgKyAnLWlkPVwiJyArIGlkICsgJ1wiXSdcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoJGVsZW0gJiYgJGVsZW0ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGluc3RhbmNlID0gJFtQTFVHSU5fTkFNRV0ubG9va3VwWyRlbGVtLmRhdGEoUExVR0lOX05BTUUpXTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5zdGFuY2UgJiYgaW5zdGFuY2Uuc2V0dGluZ3MuaGFzaFRyYWNraW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5vcGVuKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGN1cnJlbnRNb2RhbCgpIHtcbiAgICAgICAgcmV0dXJuIG9wZW5Nb2RhbHNbb3Blbk1vZGFscy5sZW5ndGggLSAxXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW1vdmVNb2RhbChyZW1vZGFsKSB7XG4gICAgICAgIHZhciBpbmRleCA9IG9wZW5Nb2RhbHMuaW5kZXhPZihyZW1vZGFsKTtcblxuICAgICAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgICAgICAgb3Blbk1vZGFscy5zbGljZShpbmRleCwgMSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vZGFsIGNvbnN0cnVjdG9yXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtqUXVlcnl9ICRtb2RhbFxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAgICovXG4gICAgZnVuY3Rpb24gUmVtb2RhbCgkbW9kYWwsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyICRib2R5ID0gJChkb2N1bWVudC5ib2R5KTtcbiAgICAgICAgdmFyICRhcHBlbmRUbyA9ICRib2R5O1xuICAgICAgICB2YXIgcmVtb2RhbCA9IHRoaXM7XG5cbiAgICAgICAgcmVtb2RhbC5pZCA9ICRtb2RhbC5hdHRyKCdkYXRhLScgKyBQTFVHSU5fTkFNRSArICctaWQnKTtcbiAgICAgICAgcmVtb2RhbC5zZXR0aW5ncyA9ICQuZXh0ZW5kKHt9LCBERUZBVUxUUywgb3B0aW9ucyk7XG4gICAgICAgIHJlbW9kYWwuaW5kZXggPSAkW1BMVUdJTl9OQU1FXS5sb29rdXAucHVzaChyZW1vZGFsKSAtIDE7XG4gICAgICAgIHJlbW9kYWwuc3RhdGUgPSBTVEFURVMuQ0xPU0VEO1xuXG4gICAgICAgIC8vIHJlbW9kYWwuJG92ZXJsYXkgPSAkKCcuJyArIG5hbWVzcGFjaWZ5KCdvdmVybGF5JykpO1xuXG4gICAgICAgIGlmIChyZW1vZGFsLnNldHRpbmdzLmFwcGVuZFRvICE9PSBudWxsICYmIHJlbW9kYWwuc2V0dGluZ3MuYXBwZW5kVG8ubGVuZ3RoKSB7XG4gICAgICAgICAgICAkYXBwZW5kVG8gPSAkKHJlbW9kYWwuc2V0dGluZ3MuYXBwZW5kVG8pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFyZW1vZGFsLiRvdmVybGF5KSB7XG4gICAgICAgICAgICByZW1vZGFsLiRvdmVybGF5ID0gJCgnPGRpdj4nKS5hZGRDbGFzcyhuYW1lc3BhY2lmeSgnb3ZlcmxheScpICsgJyAnICsgbmFtZXNwYWNpZnkoJ2lzJywgU1RBVEVTLkNMT1NFRCkpLmhpZGUoKTtcbiAgICAgICAgICAgICRhcHBlbmRUby5hcHBlbmQocmVtb2RhbC4kb3ZlcmxheSk7XG4gICAgICAgIH1cblxuICAgICAgICByZW1vZGFsLiRiZyA9ICQoJy4nICsgbmFtZXNwYWNpZnkoJ2JnJykpLmFkZENsYXNzKG5hbWVzcGFjaWZ5KCdpcycsIFNUQVRFUy5DTE9TRUQpKTtcblxuICAgICAgICByZW1vZGFsLiRtb2RhbCA9ICRtb2RhbFxuICAgICAgICAgICAgLmFkZENsYXNzKFxuICAgICAgICAgICAgICAgIE5BTUVTUEFDRSArICcgJyArXG4gICAgICAgICAgICAgICAgbmFtZXNwYWNpZnkoJ2lzLWluaXRpYWxpemVkJykgKyAnICcgK1xuICAgICAgICAgICAgICAgIHJlbW9kYWwuc2V0dGluZ3MubW9kaWZpZXIgKyAnICcgK1xuICAgICAgICAgICAgICAgIG5hbWVzcGFjaWZ5KCdpcycsIFNUQVRFUy5DTE9TRUQpKVxuICAgICAgICAgICAgLmF0dHIoJ3RhYmluZGV4JywgJy0xJyk7XG5cbiAgICAgICAgcmVtb2RhbC4kd3JhcHBlciA9ICQoJzxkaXY+JylcbiAgICAgICAgICAgIC5hZGRDbGFzcyhcbiAgICAgICAgICAgICAgICBuYW1lc3BhY2lmeSgnd3JhcHBlcicpICsgJyAnICtcbiAgICAgICAgICAgICAgICByZW1vZGFsLnNldHRpbmdzLm1vZGlmaWVyICsgJyAnICtcbiAgICAgICAgICAgICAgICBuYW1lc3BhY2lmeSgnaXMnLCBTVEFURVMuQ0xPU0VEKSlcbiAgICAgICAgICAgIC5oaWRlKClcbiAgICAgICAgICAgIC5hcHBlbmQocmVtb2RhbC4kbW9kYWwpO1xuICAgICAgICAkYXBwZW5kVG8uYXBwZW5kKHJlbW9kYWwuJHdyYXBwZXIpO1xuXG4gICAgICAgIC8vIEFkZCB0aGUgZXZlbnQgbGlzdGVuZXIgZm9yIHRoZSBjbG9zZSBidXR0b25cbiAgICAgICAgcmVtb2RhbC4kd3JhcHBlci5vbignY2xpY2suJyArIE5BTUVTUEFDRSwgJ1tkYXRhLScgKyBQTFVHSU5fTkFNRSArICctYWN0aW9uPVwiY2xvc2VcIl0nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgIHJlbW9kYWwuY2xvc2UoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gQWRkIHRoZSBldmVudCBsaXN0ZW5lciBmb3IgdGhlIGNhbmNlbCBidXR0b25cbiAgICAgICAgcmVtb2RhbC4kd3JhcHBlci5vbignY2xpY2suJyArIE5BTUVTUEFDRSwgJ1tkYXRhLScgKyBQTFVHSU5fTkFNRSArICctYWN0aW9uPVwiY2FuY2VsXCJdJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICByZW1vZGFsLiRtb2RhbC50cmlnZ2VyKFNUQVRFX0NIQU5HRV9SRUFTT05TLkNBTkNFTExBVElPTik7XG5cbiAgICAgICAgICAgIGlmIChyZW1vZGFsLnNldHRpbmdzLmNsb3NlT25DYW5jZWwpIHtcbiAgICAgICAgICAgICAgICByZW1vZGFsLmNsb3NlKFNUQVRFX0NIQU5HRV9SRUFTT05TLkNBTkNFTExBVElPTik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEFkZCB0aGUgZXZlbnQgbGlzdGVuZXIgZm9yIHRoZSBjb25maXJtIGJ1dHRvblxuICAgICAgICByZW1vZGFsLiR3cmFwcGVyLm9uKCdjbGljay4nICsgTkFNRVNQQUNFLCAnW2RhdGEtJyArIFBMVUdJTl9OQU1FICsgJy1hY3Rpb249XCJjb25maXJtXCJdJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICByZW1vZGFsLiRtb2RhbC50cmlnZ2VyKFNUQVRFX0NIQU5HRV9SRUFTT05TLkNPTkZJUk1BVElPTik7XG5cbiAgICAgICAgICAgIGlmIChyZW1vZGFsLnNldHRpbmdzLmNsb3NlT25Db25maXJtKSB7XG4gICAgICAgICAgICAgICAgcmVtb2RhbC5jbG9zZShTVEFURV9DSEFOR0VfUkVBU09OUy5DT05GSVJNQVRJT04pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBBZGQgdGhlIGV2ZW50IGxpc3RlbmVyIGZvciB0aGUgb3ZlcmxheVxuICAgICAgICByZW1vZGFsLiR3cmFwcGVyLm9uKCdjbGljay4nICsgTkFNRVNQQUNFLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIgJHRhcmdldCA9ICQoZS50YXJnZXQpO1xuICAgICAgICAgICAgdmFyIGlzV3JhcHBlciA9ICR0YXJnZXQuaGFzQ2xhc3MobmFtZXNwYWNpZnkoJ3dyYXBwZXInKSk7XG4gICAgICAgICAgICB2YXIgaXNXaXRoaW4gPSAkdGFyZ2V0LmNsb3Nlc3QoJy4nICsgbmFtZXNwYWNpZnkoJ2lzJywgU1RBVEVTLk9QRU5FRCkpLmxlbmd0aDtcblxuICAgICAgICAgICAgaWYgKCFpc1dyYXBwZXIgJiYgaXNXaXRoaW4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChyZW1vZGFsLnNldHRpbmdzLmNsb3NlT25PdXRzaWRlQ2xpY2spIHtcbiAgICAgICAgICAgICAgICByZW1vZGFsLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE9wZW5zIGEgbW9kYWwgd2luZG93XG4gICAgICogQHB1YmxpY1xuICAgICAqL1xuICAgIFJlbW9kYWwucHJvdG90eXBlLm9wZW4gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHJlbW9kYWwgPSB0aGlzO1xuICAgICAgICB2YXIgY3VycmVudDtcbiAgICAgICAgdmFyIG1vZGFsQ291bnQ7XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGFuaW1hdGlvbiB3YXMgY29tcGxldGVkXG4gICAgICAgIGlmIChyZW1vZGFsLnN0YXRlID09PSBTVEFURVMuT1BFTklORyB8fCByZW1vZGFsLnN0YXRlID09PSBTVEFURVMuQ0xPU0lORykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWQgPSByZW1vZGFsLiRtb2RhbC5hdHRyKCdkYXRhLScgKyBQTFVHSU5fTkFNRSArICctaWQnKTtcblxuICAgICAgICBpZiAocmVtb2RhbC5pZCAmJiByZW1vZGFsLnNldHRpbmdzLmhhc2hUcmFja2luZykge1xuICAgICAgICAgICAgc2Nyb2xsVG9wID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xuICAgICAgICAgICAgbG9jYXRpb24uaGFzaCA9IHJlbW9kYWwuaWQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXJlbW9kYWwuc2V0dGluZ3Muc3RhY2spIHtcbiAgICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50TW9kYWwoKTtcbiAgICAgICAgICAgIGlmIChjdXJyZW50ICYmIGN1cnJlbnQgIT09IHJlbW9kYWwpIHtcbiAgICAgICAgICAgICAgICBoYWx0KGN1cnJlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbW9kYWxDb3VudCA9IG9wZW5Nb2RhbHMucHVzaChyZW1vZGFsKTtcbiAgICAgICAgcmVtb2RhbC4kb3ZlcmxheS5jc3MoJ3otaW5kZXgnLCBmdW5jdGlvbihfLCB2YWx1ZSkgeyByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKSArIG1vZGFsQ291bnQ7IH0pO1xuICAgICAgICByZW1vZGFsLiR3cmFwcGVyLmNzcygnei1pbmRleCcsIGZ1bmN0aW9uKF8sIHZhbHVlKSB7IHJldHVybiBwYXJzZUludCh2YWx1ZSwgMTApICsgbW9kYWxDb3VudDsgfSk7XG5cbiAgICAgICAgbG9ja1NjcmVlbigpO1xuICAgICAgICByZW1vZGFsLiRiZy5hZGRDbGFzcyhyZW1vZGFsLnNldHRpbmdzLm1vZGlmaWVyKTtcbiAgICAgICAgcmVtb2RhbC4kb3ZlcmxheS5hZGRDbGFzcyhyZW1vZGFsLnNldHRpbmdzLm1vZGlmaWVyKS5zaG93KCk7XG4gICAgICAgIHJlbW9kYWwuJHdyYXBwZXIuc2hvdygpLnNjcm9sbFRvcCgwKTtcbiAgICAgICAgcmVtb2RhbC4kbW9kYWwuZm9jdXMoKTtcblxuICAgICAgICBzeW5jV2l0aEFuaW1hdGlvbihcbiAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHNldFN0YXRlKHJlbW9kYWwsIFNUQVRFUy5PUEVOSU5HKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHNldFN0YXRlKHJlbW9kYWwsIFNUQVRFUy5PUEVORUQpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgcmVtb2RhbCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsb3NlcyBhIG1vZGFsIHdpbmRvd1xuICAgICAqIEBwdWJsaWNcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcmVhc29uXG4gICAgICovXG4gICAgUmVtb2RhbC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbihyZWFzb24pIHtcbiAgICAgICAgdmFyIHJlbW9kYWwgPSB0aGlzO1xuICAgICAgICB2YXIgY3VycmVudDtcblxuICAgICAgICAvLyBDaGVjayBpZiB0aGUgYW5pbWF0aW9uIHdhcyBjb21wbGV0ZWRcbiAgICAgICAgaWYgKHJlbW9kYWwuc3RhdGUgPT09IFNUQVRFUy5PUEVOSU5HIHx8IHJlbW9kYWwuc3RhdGUgPT09IFNUQVRFUy5DTE9TSU5HIHx8IHJlbW9kYWwuc3RhdGUgPT09IFNUQVRFUy5DTE9TRUQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlbW92ZU1vZGFsKHJlbW9kYWwpO1xuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIHJlbW9kYWwuc2V0dGluZ3MuaGFzaFRyYWNraW5nICYmXG4gICAgICAgICAgICByZW1vZGFsLmlkID09PSBsb2NhdGlvbi5oYXNoLnN1YnN0cigxKVxuICAgICAgICApIHtcbiAgICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50TW9kYWwoKTtcbiAgICAgICAgICAgIGlmIChjdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgbG9jYXRpb24uaGFzaCA9IGN1cnJlbnQuaWQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICAgICAgICAgICAgICAkKHdpbmRvdykuc2Nyb2xsVG9wKHNjcm9sbFRvcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBzeW5jV2l0aEFuaW1hdGlvbihcbiAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHNldFN0YXRlKHJlbW9kYWwsIFNUQVRFUy5DTE9TSU5HLCBmYWxzZSwgcmVhc29uKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJlbW9kYWwuJGJnLnJlbW92ZUNsYXNzKHJlbW9kYWwuc2V0dGluZ3MubW9kaWZpZXIpO1xuICAgICAgICAgICAgICAgIHJlbW9kYWwuJG92ZXJsYXkucmVtb3ZlQ2xhc3MocmVtb2RhbC5zZXR0aW5ncy5tb2RpZmllcikuaGlkZSgpO1xuICAgICAgICAgICAgICAgIHJlbW9kYWwuJHdyYXBwZXIuaGlkZSgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKG9wZW5Nb2RhbHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHVubG9ja1NjcmVlbigpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHNldFN0YXRlKHJlbW9kYWwsIFNUQVRFUy5DTE9TRUQsIGZhbHNlLCByZWFzb24pO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgcmVtb2RhbCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBjdXJyZW50IHN0YXRlIG9mIGEgbW9kYWxcbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge1NUQVRFU31cbiAgICAgKi9cbiAgICBSZW1vZGFsLnByb3RvdHlwZS5nZXRTdGF0ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRGVzdHJveXMgYSBtb2RhbFxuICAgICAqIEBwdWJsaWNcbiAgICAgKi9cbiAgICBSZW1vZGFsLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBsb29rdXAgPSAkW1BMVUdJTl9OQU1FXS5sb29rdXA7XG4gICAgICAgIHZhciBpbnN0YW5jZUNvdW50O1xuXG4gICAgICAgIGhhbHQodGhpcyk7XG4gICAgICAgIHRoaXMuJHdyYXBwZXIucmVtb3ZlKCk7XG5cbiAgICAgICAgZGVsZXRlIGxvb2t1cFt0aGlzLmluZGV4XTtcbiAgICAgICAgaW5zdGFuY2VDb3VudCA9ICQuZ3JlcChsb29rdXAsIGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gICAgICAgICAgICByZXR1cm4gISFpbnN0YW5jZTtcbiAgICAgICAgfSkubGVuZ3RoO1xuXG4gICAgICAgIGlmIChpbnN0YW5jZUNvdW50ID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLiRvdmVybGF5LnJlbW92ZSgpO1xuICAgICAgICAgICAgdGhpcy4kYmcucmVtb3ZlQ2xhc3MoXG4gICAgICAgICAgICAgICAgbmFtZXNwYWNpZnkoJ2lzJywgU1RBVEVTLkNMT1NJTkcpICsgJyAnICtcbiAgICAgICAgICAgICAgICBuYW1lc3BhY2lmeSgnaXMnLCBTVEFURVMuT1BFTklORykgKyAnICcgK1xuICAgICAgICAgICAgICAgIG5hbWVzcGFjaWZ5KCdpcycsIFNUQVRFUy5DTE9TRUQpICsgJyAnICtcbiAgICAgICAgICAgICAgICBuYW1lc3BhY2lmeSgnaXMnLCBTVEFURVMuT1BFTkVEKSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU3BlY2lhbCBwbHVnaW4gb2JqZWN0IGZvciBpbnN0YW5jZXNcbiAgICAgKiBAcHVibGljXG4gICAgICogQHR5cGUge09iamVjdH1cbiAgICAgKi9cbiAgICAkW1BMVUdJTl9OQU1FXSA9IHtcbiAgICAgICAgbG9va3VwOiBbXVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQbHVnaW4gY29uc3RydWN0b3JcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgICAqIEByZXR1cm5zIHtKUXVlcnl9XG4gICAgICovXG4gICAgJC5mbltQTFVHSU5fTkFNRV0gPSBmdW5jdGlvbihvcHRzKSB7XG4gICAgICAgIHZhciBpbnN0YW5jZTtcbiAgICAgICAgdmFyICRlbGVtO1xuXG4gICAgICAgIHRoaXMuZWFjaChmdW5jdGlvbihpbmRleCwgZWxlbSkge1xuICAgICAgICAgICAgJGVsZW0gPSAkKGVsZW0pO1xuXG4gICAgICAgICAgICBpZiAoJGVsZW0uZGF0YShQTFVHSU5fTkFNRSkgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGluc3RhbmNlID0gbmV3IFJlbW9kYWwoJGVsZW0sIG9wdHMpO1xuICAgICAgICAgICAgICAgICRlbGVtLmRhdGEoUExVR0lOX05BTUUsIGluc3RhbmNlLmluZGV4KTtcblxuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2Uuc2V0dGluZ3MuaGFzaFRyYWNraW5nICYmXG4gICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLmlkID09PSBsb2NhdGlvbi5oYXNoLnN1YnN0cigxKVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5vcGVuKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbnN0YW5jZSA9ICRbUExVR0lOX05BTUVdLmxvb2t1cFskZWxlbS5kYXRhKFBMVUdJTl9OQU1FKV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9O1xuXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgLy8gZGF0YS1yZW1vZGFsLXRhcmdldCBvcGVucyBhIG1vZGFsIHdpbmRvdyB3aXRoIHRoZSBzcGVjaWFsIElkXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdbZGF0YS0nICsgUExVR0lOX05BTUUgKyAnLXRhcmdldF0nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgIHZhciBlbGVtID0gZS5jdXJyZW50VGFyZ2V0O1xuICAgICAgICAgICAgdmFyIGlkID0gZWxlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtJyArIFBMVUdJTl9OQU1FICsgJy10YXJnZXQnKTtcbiAgICAgICAgICAgIHZhciAkdGFyZ2V0ID0gJCgnW2RhdGEtJyArIFBMVUdJTl9OQU1FICsgJy1pZD1cIicgKyBpZCArICdcIl0nKTtcblxuICAgICAgICAgICAgJFtQTFVHSU5fTkFNRV0ubG9va3VwWyR0YXJnZXQuZGF0YShQTFVHSU5fTkFNRSldLm9wZW4oKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gQXV0byBpbml0aWFsaXphdGlvbiBvZiBtb2RhbCB3aW5kb3dzXG4gICAgICAgIC8vIFRoZXkgc2hvdWxkIGhhdmUgdGhlICdyZW1vZGFsJyBjbGFzcyBhdHRyaWJ1dGVcbiAgICAgICAgLy8gQWxzbyB5b3UgY2FuIHdyaXRlIHRoZSBgZGF0YS1yZW1vZGFsLW9wdGlvbnNgIGF0dHJpYnV0ZSB0byBwYXNzIHBhcmFtcyBpbnRvIHRoZSBtb2RhbFxuICAgICAgICAkKGRvY3VtZW50KS5maW5kKCcuJyArIE5BTUVTUEFDRSkuZWFjaChmdW5jdGlvbihpLCBjb250YWluZXIpIHtcbiAgICAgICAgICAgIHZhciAkY29udGFpbmVyID0gJChjb250YWluZXIpO1xuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSAkY29udGFpbmVyLmRhdGEoUExVR0lOX05BTUUgKyAnLW9wdGlvbnMnKTtcblxuICAgICAgICAgICAgaWYgKCFvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucyA9IHt9O1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycgfHwgb3B0aW9ucyBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSBwYXJzZU9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICRjb250YWluZXJbUExVR0lOX05BTUVdKG9wdGlvbnMpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBIYW5kbGVzIHRoZSBrZXlkb3duIGV2ZW50XG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdrZXlkb3duLicgKyBOQU1FU1BBQ0UsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHZhciBjdXJyZW50ID0gY3VycmVudE1vZGFsKCk7XG5cbiAgICAgICAgICAgIGlmIChjdXJyZW50ICYmIGN1cnJlbnQuc2V0dGluZ3MuY2xvc2VPbkVzY2FwZSAmJiBjdXJyZW50LnN0YXRlID09PSBTVEFURVMuT1BFTkVEICYmIGUua2V5Q29kZSA9PT0gMjcpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50LmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEhhbmRsZXMgdGhlIGhhc2hjaGFuZ2UgZXZlbnRcbiAgICAgICAgJCh3aW5kb3cpLm9uKCdoYXNoY2hhbmdlLicgKyBOQU1FU1BBQ0UsIGhhbmRsZUhhc2hDaGFuZ2VFdmVudCk7XG4gICAgfSk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwicm9vdCIsImZhY3RvcnkiLCJnbG9iYWwiLCJQTFVHSU5fTkFNRSIsIk5BTUVTUEFDRSIsIndpbmRvdyIsIlJFTU9EQUxfR0xPQkFMUyIsIkFOSU1BVElPTlNUQVJUX0VWRU5UUyIsIm1hcCIsImV2ZW50TmFtZSIsImpvaW4iLCJBTklNQVRJT05FTkRfRVZFTlRTIiwiREVGQVVMVFMiLCJleHRlbmQiLCJoYXNoVHJhY2tpbmciLCJjbG9zZU9uQ29uZmlybSIsImNsb3NlT25DYW5jZWwiLCJjbG9zZU9uRXNjYXBlIiwiY2xvc2VPbk91dHNpZGVDbGljayIsIm1vZGlmaWVyIiwic3RhY2siLCJhcHBlbmRUbyIsIlNUQVRFUyIsIkNMT1NJTkciLCJDTE9TRUQiLCJPUEVOSU5HIiwiT1BFTkVEIiwiU1RBVEVfQ0hBTkdFX1JFQVNPTlMiLCJDT05GSVJNQVRJT04iLCJDQU5DRUxMQVRJT04iLCJJU19BTklNQVRJT04iLCJzdHlsZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImFuaW1hdGlvbk5hbWUiLCJ1bmRlZmluZWQiLCJXZWJraXRBbmltYXRpb25OYW1lIiwiTW96QW5pbWF0aW9uTmFtZSIsIm1zQW5pbWF0aW9uTmFtZSIsIk9BbmltYXRpb25OYW1lIiwiSVNfSU9TIiwidGVzdCIsIm5hdmlnYXRvciIsInBsYXRmb3JtIiwib3Blbk1vZGFscyIsInNjcm9sbFRvcCIsImdldEFuaW1hdGlvbkR1cmF0aW9uIiwiJGVsZW0iLCJjc3MiLCJkdXJhdGlvbiIsImRlbGF5IiwiaXRlcmF0aW9uQ291bnQiLCJtYXgiLCJsZW4iLCJudW0iLCJpIiwic3BsaXQiLCJsZW5ndGgiLCJOdW1iZXIiLCJORUdBVElWRV9JTkZJTklUWSIsInBhcnNlRmxvYXQiLCJwYXJzZUludCIsImdldFNjcm9sbGJhcldpZHRoIiwiaGVpZ2h0Iiwib3V0ZXIiLCJpbm5lciIsIndpZHRoTm9TY3JvbGwiLCJ3aWR0aFdpdGhTY3JvbGwiLCJ2aXNpYmlsaXR5Iiwid2lkdGgiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJvZmZzZXRXaWR0aCIsIm92ZXJmbG93IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwibG9ja1NjcmVlbiIsIiRodG1sIiwibG9ja2VkQ2xhc3MiLCJuYW1lc3BhY2lmeSIsInBhZGRpbmdSaWdodCIsIiRib2R5IiwiaGFzQ2xhc3MiLCJhZGRDbGFzcyIsInVubG9ja1NjcmVlbiIsInJlbW92ZUNsYXNzIiwic2V0U3RhdGUiLCJpbnN0YW5jZSIsInN0YXRlIiwiaXNTaWxlbnQiLCJyZWFzb24iLCJuZXdTdGF0ZSIsImFsbFN0YXRlcyIsIiRiZyIsIiRvdmVybGF5IiwiJHdyYXBwZXIiLCIkbW9kYWwiLCJ0cmlnZ2VyIiwidHlwZSIsInN5bmNXaXRoQW5pbWF0aW9uIiwiZG9CZWZvcmVBbmltYXRpb24iLCJkb0FmdGVyQW5pbWF0aW9uIiwicnVubmluZ0FuaW1hdGlvbnNDb3VudCIsImhhbmRsZUFuaW1hdGlvblN0YXJ0IiwiZSIsInRhcmdldCIsImhhbmRsZUFuaW1hdGlvbkVuZCIsImVhY2giLCJpbmRleCIsImVsZW1OYW1lIiwib2ZmIiwib24iLCJoYWx0IiwicmVtb3ZlTW9kYWwiLCJzZXR0aW5ncyIsImhpZGUiLCJwYXJzZU9wdGlvbnMiLCJzdHIiLCJvYmoiLCJhcnIiLCJ2YWwiLCJyZXBsYWNlIiwiU3RyaW5nIiwiaXNOYU4iLCJyZXN1bHQiLCJhcmd1bWVudHMiLCJoYW5kbGVIYXNoQ2hhbmdlRXZlbnQiLCJpZCIsImxvY2F0aW9uIiwiaGFzaCIsImN1cnJlbnQiLCJjdXJyZW50TW9kYWwiLCJjbG9zZSIsImVyciIsImxvb2t1cCIsImRhdGEiLCJvcGVuIiwicmVtb2RhbCIsImluZGV4T2YiLCJzbGljZSIsIlJlbW9kYWwiLCJvcHRpb25zIiwiJGFwcGVuZFRvIiwiYXR0ciIsInB1c2giLCJhcHBlbmQiLCJwcmV2ZW50RGVmYXVsdCIsIiR0YXJnZXQiLCJpc1dyYXBwZXIiLCJpc1dpdGhpbiIsImNsb3Nlc3QiLCJwcm90b3R5cGUiLCJtb2RhbENvdW50IiwiXyIsInZhbHVlIiwic2hvdyIsImZvY3VzIiwic3Vic3RyIiwiZ2V0U3RhdGUiLCJkZXN0cm95IiwiaW5zdGFuY2VDb3VudCIsInJlbW92ZSIsImdyZXAiLCJmbiIsIm9wdHMiLCJlbGVtIiwicmVhZHkiLCJjdXJyZW50VGFyZ2V0IiwiZ2V0QXR0cmlidXRlIiwiZmluZCIsImNvbnRhaW5lciIsIiRjb250YWluZXIiLCJrZXlDb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/remodal.js\n");

/***/ }),

/***/ "./app/utils/request.js":
/*!******************************!*\
  !*** ./app/utils/request.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./response */ \"./app/utils/response.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar raw;\n\nvar request = function request(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    return true;\n  };\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if (options.method && options.method === 'post') {\n    var data = new FormData();\n    options.body = Object.assign({\n      'admin-nonce': grav_config__WEBPACK_IMPORTED_MODULE_1__.config.admin_nonce\n    }, options.body || {});\n    Object.keys(options.body).map(function (key) {\n      return data.append(key, options.body[key]);\n    });\n    options.body = data;\n  }\n\n  options = Object.assign({\n    credentials: 'same-origin',\n    headers: {\n      'Accept': 'application/json'\n    }\n  }, options);\n  return fetch(url, options).then(function (response) {\n    raw = response;\n    return response;\n  }).then(_response__WEBPACK_IMPORTED_MODULE_0__.parseStatus).then(_response__WEBPACK_IMPORTED_MODULE_0__.parseJSON).then(_response__WEBPACK_IMPORTED_MODULE_0__.userFeedback).then(function (response) {\n    return callback(response, raw);\n  })[\"catch\"](_response__WEBPACK_IMPORTED_MODULE_0__.userFeedbackError);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (request);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvcmVxdWVzdC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUVBLElBQUlLLEdBQUo7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBU0MsR0FBVCxFQUFtRDtBQUFBLE1BQXJDQyxPQUFxQyx1RUFBM0IsRUFBMkI7QUFBQSxNQUF2QkMsUUFBdUIsdUVBQVo7QUFBQSxXQUFNLElBQU47QUFBQSxHQUFZOztBQUM3RCxNQUFJLE9BQU9ELE9BQVAsS0FBbUIsVUFBdkIsRUFBbUM7QUFDL0JDLElBQUFBLFFBQVEsR0FBR0QsT0FBWDtBQUNBQSxJQUFBQSxPQUFPLEdBQUcsRUFBVjtBQUNIOztBQUVELE1BQUlBLE9BQU8sQ0FBQ0UsTUFBUixJQUFrQkYsT0FBTyxDQUFDRSxNQUFSLEtBQW1CLE1BQXpDLEVBQWlEO0FBQzdDLFFBQUlDLElBQUksR0FBRyxJQUFJQyxRQUFKLEVBQVg7QUFFQUosSUFBQUEsT0FBTyxDQUFDSyxJQUFSLEdBQWVDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjO0FBQUUscUJBQWVYLDJEQUFrQlk7QUFBbkMsS0FBZCxFQUFxRFIsT0FBTyxDQUFDSyxJQUFSLElBQWdCLEVBQXJFLENBQWY7QUFDQUMsSUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVlULE9BQU8sQ0FBQ0ssSUFBcEIsRUFBMEJLLEdBQTFCLENBQThCLFVBQUNDLEdBQUQ7QUFBQSxhQUFTUixJQUFJLENBQUNTLE1BQUwsQ0FBWUQsR0FBWixFQUFpQlgsT0FBTyxDQUFDSyxJQUFSLENBQWFNLEdBQWIsQ0FBakIsQ0FBVDtBQUFBLEtBQTlCO0FBQ0FYLElBQUFBLE9BQU8sQ0FBQ0ssSUFBUixHQUFlRixJQUFmO0FBQ0g7O0FBRURILEVBQUFBLE9BQU8sR0FBR00sTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDcEJNLElBQUFBLFdBQVcsRUFBRSxhQURPO0FBRXBCQyxJQUFBQSxPQUFPLEVBQUU7QUFDTCxnQkFBVTtBQURMO0FBRlcsR0FBZCxFQUtQZCxPQUxPLENBQVY7QUFPQSxTQUFPZSxLQUFLLENBQUNoQixHQUFELEVBQU1DLE9BQU4sQ0FBTCxDQUNGZ0IsSUFERSxDQUNHLFVBQUNDLFFBQUQsRUFBYztBQUNoQnBCLElBQUFBLEdBQUcsR0FBR29CLFFBQU47QUFDQSxXQUFPQSxRQUFQO0FBQ0gsR0FKRSxFQUtGRCxJQUxFLENBS0d4QixrREFMSCxFQU1Gd0IsSUFORSxDQU1HdkIsZ0RBTkgsRUFPRnVCLElBUEUsQ0FPR3RCLG1EQVBILEVBUUZzQixJQVJFLENBUUcsVUFBQ0MsUUFBRDtBQUFBLFdBQWNoQixRQUFRLENBQUNnQixRQUFELEVBQVdwQixHQUFYLENBQXRCO0FBQUEsR0FSSCxXQVNJRix3REFUSixDQUFQO0FBVUgsQ0EvQkQ7O0FBaUNBLGlFQUFlRyxPQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC91dGlscy9yZXF1ZXN0LmpzPzE3NmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VTdGF0dXMsIHBhcnNlSlNPTiwgdXNlckZlZWRiYWNrLCB1c2VyRmVlZGJhY2tFcnJvciB9IGZyb20gJy4vcmVzcG9uc2UnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnZ3Jhdi1jb25maWcnO1xuXG5sZXQgcmF3O1xubGV0IHJlcXVlc3QgPSBmdW5jdGlvbih1cmwsIG9wdGlvbnMgPSB7fSwgY2FsbGJhY2sgPSAoKSA9PiB0cnVlKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgICAgICAgb3B0aW9ucyA9IHt9O1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLm1ldGhvZCAmJiBvcHRpb25zLm1ldGhvZCA9PT0gJ3Bvc3QnKSB7XG4gICAgICAgIGxldCBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XG5cbiAgICAgICAgb3B0aW9ucy5ib2R5ID0gT2JqZWN0LmFzc2lnbih7ICdhZG1pbi1ub25jZSc6IGNvbmZpZy5hZG1pbl9ub25jZSB9LCBvcHRpb25zLmJvZHkgfHwge30pO1xuICAgICAgICBPYmplY3Qua2V5cyhvcHRpb25zLmJvZHkpLm1hcCgoa2V5KSA9PiBkYXRhLmFwcGVuZChrZXksIG9wdGlvbnMuYm9keVtrZXldKSk7XG4gICAgICAgIG9wdGlvbnMuYm9keSA9IGRhdGE7XG4gICAgfVxuXG4gICAgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICB9XG4gICAgfSwgb3B0aW9ucyk7XG5cbiAgICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKVxuICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIHJhdyA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9KVxuICAgICAgICAudGhlbihwYXJzZVN0YXR1cylcbiAgICAgICAgLnRoZW4ocGFyc2VKU09OKVxuICAgICAgICAudGhlbih1c2VyRmVlZGJhY2spXG4gICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gY2FsbGJhY2socmVzcG9uc2UsIHJhdykpXG4gICAgICAgIC5jYXRjaCh1c2VyRmVlZGJhY2tFcnJvcik7XG59O1xuXG5leHBvcnQgZGVmYXVsdCByZXF1ZXN0O1xuIl0sIm5hbWVzIjpbInBhcnNlU3RhdHVzIiwicGFyc2VKU09OIiwidXNlckZlZWRiYWNrIiwidXNlckZlZWRiYWNrRXJyb3IiLCJjb25maWciLCJyYXciLCJyZXF1ZXN0IiwidXJsIiwib3B0aW9ucyIsImNhbGxiYWNrIiwibWV0aG9kIiwiZGF0YSIsIkZvcm1EYXRhIiwiYm9keSIsIk9iamVjdCIsImFzc2lnbiIsImFkbWluX25vbmNlIiwia2V5cyIsIm1hcCIsImtleSIsImFwcGVuZCIsImNyZWRlbnRpYWxzIiwiaGVhZGVycyIsImZldGNoIiwidGhlbiIsInJlc3BvbnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/request.js\n");

/***/ }),

/***/ "./app/utils/response.js":
/*!*******************************!*\
  !*** ./app/utils/response.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseStatus\": () => (/* binding */ parseStatus),\n/* harmony export */   \"parseJSON\": () => (/* binding */ parseJSON),\n/* harmony export */   \"userFeedback\": () => (/* binding */ userFeedback),\n/* harmony export */   \"userFeedbackError\": () => (/* binding */ userFeedbackError)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _toastr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toastr */ \"./app/utils/toastr.js\");\n/* harmony import */ var _offline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./offline */ \"./app/utils/offline.js\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var mout_string_trim__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mout/string/trim */ \"./node_modules/mout/string/trim.js\");\n/* harmony import */ var mout_string_trim__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(mout_string_trim__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nvar UNLOADING = false;\n\nvar error = function error(response) {\n  var error = new Error(response.statusText || response || '');\n  error.response = response;\n  return error;\n};\n\nfunction parseStatus(response) {\n  return response;\n  /* Whoops can handle JSON responses so we don't need this for now.\n      if (response.status >= 200 && response.status < 300) {\n          return response;\n      } else {\n          throw error(response);\n      }\n  */\n}\nfunction parseJSON(response) {\n  return response.text().then(function (text) {\n    var parsed = text;\n\n    try {\n      parsed = JSON.parse(text);\n    } catch (error) {\n      var content = document.createElement('div');\n      content.innerHTML = text;\n      var the_error = new Error();\n      the_error.stack = mout_string_trim__WEBPACK_IMPORTED_MODULE_4___default()(content.innerText);\n      throw the_error;\n    }\n\n    return parsed;\n  });\n}\nfunction userFeedback(response) {\n  if (UNLOADING) {\n    return true;\n  }\n\n  var status = response.status || (response.error ? 'error' : '');\n  var message = response.message || (response.error ? response.error.message : null);\n  var settings = response.toastr || null;\n  var backup;\n\n  switch (status) {\n    case 'unauthenticated':\n      document.location.href = grav_config__WEBPACK_IMPORTED_MODULE_3__.config.base_url_relative;\n      throw error('Logged out');\n\n    case 'unauthorized':\n      status = 'error';\n      message = message || 'Unauthorized.';\n      break;\n\n    case 'error':\n      status = 'error';\n      message = message || 'Unknown error.';\n      break;\n\n    case 'success':\n      status = 'success';\n      message = message || '';\n      break;\n\n    default:\n      status = 'error';\n      message = message || 'Invalid AJAX response.';\n      break;\n  }\n\n  if (settings) {\n    backup = Object.assign({}, _toastr__WEBPACK_IMPORTED_MODULE_1__[\"default\"].options);\n    Object.keys(settings).forEach(function (key) {\n      _toastr__WEBPACK_IMPORTED_MODULE_1__[\"default\"].options[key] = settings[key];\n    });\n  }\n\n  if (message && (_offline__WEBPACK_IMPORTED_MODULE_2__[\"default\"] || !_offline__WEBPACK_IMPORTED_MODULE_2__[\"default\"] && status !== 'error')) {\n    _toastr__WEBPACK_IMPORTED_MODULE_1__[\"default\"][status === 'success' ? 'success' : 'error'](message);\n  }\n\n  if (settings) {\n    _toastr__WEBPACK_IMPORTED_MODULE_1__[\"default\"].options = backup;\n  }\n\n  return response;\n}\nfunction userFeedbackError(error) {\n  if (UNLOADING) {\n    return true;\n  }\n\n  var stack = error.stack ? \"<pre><code>\".concat(error.stack, \"</code></pre>\") : '';\n  _toastr__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Fetch Failed: <br /> \".concat(error.message, \" \").concat(stack));\n  console.error(\"\".concat(error.message, \" at \").concat(error.stack));\n}\njquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).on('beforeunload._ajax', function () {\n  UNLOADING = true;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/response.js\n");

/***/ }),

/***/ "./app/utils/selectize-option-click.js":
/*!*********************************************!*\
  !*** ./app/utils/selectize-option-click.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var selectize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! selectize */ \"./node_modules/selectize/dist/js/selectize.js\");\n/* harmony import */ var selectize__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(selectize__WEBPACK_IMPORTED_MODULE_1__);\n\n\nselectize__WEBPACK_IMPORTED_MODULE_1___default().define('option_click', function (options) {\n  var self = this;\n  var setup = self.setup;\n\n  this.setup = function () {\n    setup.apply(self, arguments);\n    var clicking = false; // Detect click on a .clickable\n\n    self.$dropdown_content.on('mousedown click', function (e) {\n      var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.target);\n\n      if (target.hasClass('clickable') || target.closest('.clickable').length) {\n        if (e.type === 'mousedown') {\n          clicking = true;\n          self.isFocused = false; // awful hack to defuse the document mousedown listener\n        } else {\n          self.isFocused = true;\n          setTimeout(function () {\n            clicking = false; // wait until blur has been preempted\n          });\n        }\n      } else {\n        // cleanup in case user right-clicked or dragged off the element\n        clicking = false;\n        self.isFocused = true;\n      }\n    }); // Intercept default handlers\n\n    self.$dropdown.off('mousedown click', '[data-selectable]').on('mousedown click', '[data-selectable]', function () {\n      if (!clicking) {\n        return self.onOptionSelect.apply(self, arguments);\n      }\n    });\n    self.$control_input.off('blur').on('blur', function () {\n      if (!clicking) {\n        return self.onBlur.apply(self, arguments);\n      }\n    });\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvc2VsZWN0aXplLW9wdGlvbi1jbGljay5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFFQUMsdURBQUEsQ0FBaUIsY0FBakIsRUFBaUMsVUFBU0UsT0FBVCxFQUFrQjtBQUMvQyxNQUFNQyxJQUFJLEdBQUcsSUFBYjtBQUNBLE1BQU1DLEtBQUssR0FBR0QsSUFBSSxDQUFDQyxLQUFuQjs7QUFDQSxPQUFLQSxLQUFMLEdBQWEsWUFBVztBQUNwQkEsSUFBQUEsS0FBSyxDQUFDQyxLQUFOLENBQVlGLElBQVosRUFBa0JHLFNBQWxCO0FBQ0EsUUFBSUMsUUFBUSxHQUFHLEtBQWYsQ0FGb0IsQ0FJcEI7O0FBQ0FKLElBQUFBLElBQUksQ0FBQ0ssaUJBQUwsQ0FBdUJDLEVBQXZCLENBQTBCLGlCQUExQixFQUE2QyxVQUFTQyxDQUFULEVBQVk7QUFDckQsVUFBTUMsTUFBTSxHQUFHWiw2Q0FBQyxDQUFDVyxDQUFDLENBQUNDLE1BQUgsQ0FBaEI7O0FBQ0EsVUFBSUEsTUFBTSxDQUFDQyxRQUFQLENBQWdCLFdBQWhCLEtBQWdDRCxNQUFNLENBQUNFLE9BQVAsQ0FBZSxZQUFmLEVBQTZCQyxNQUFqRSxFQUF5RTtBQUNyRSxZQUFJSixDQUFDLENBQUNLLElBQUYsS0FBVyxXQUFmLEVBQTRCO0FBQ3hCUixVQUFBQSxRQUFRLEdBQUcsSUFBWDtBQUNBSixVQUFBQSxJQUFJLENBQUNhLFNBQUwsR0FBaUIsS0FBakIsQ0FGd0IsQ0FFQTtBQUMzQixTQUhELE1BR087QUFDSGIsVUFBQUEsSUFBSSxDQUFDYSxTQUFMLEdBQWlCLElBQWpCO0FBQ0FDLFVBQUFBLFVBQVUsQ0FBQyxZQUFXO0FBQ2xCVixZQUFBQSxRQUFRLEdBQUcsS0FBWCxDQURrQixDQUNBO0FBQ3JCLFdBRlMsQ0FBVjtBQUdIO0FBQ0osT0FWRCxNQVVPO0FBQUU7QUFDTEEsUUFBQUEsUUFBUSxHQUFHLEtBQVg7QUFDQUosUUFBQUEsSUFBSSxDQUFDYSxTQUFMLEdBQWlCLElBQWpCO0FBQ0g7QUFDSixLQWhCRCxFQUxvQixDQXVCcEI7O0FBQ0FiLElBQUFBLElBQUksQ0FBQ2UsU0FBTCxDQUFlQyxHQUFmLENBQW1CLGlCQUFuQixFQUFzQyxtQkFBdEMsRUFBMkRWLEVBQTNELENBQThELGlCQUE5RCxFQUFpRixtQkFBakYsRUFBc0csWUFBVztBQUM3RyxVQUFJLENBQUNGLFFBQUwsRUFBZTtBQUNYLGVBQU9KLElBQUksQ0FBQ2lCLGNBQUwsQ0FBb0JmLEtBQXBCLENBQTBCRixJQUExQixFQUFnQ0csU0FBaEMsQ0FBUDtBQUNIO0FBQ0osS0FKRDtBQUtBSCxJQUFBQSxJQUFJLENBQUNrQixjQUFMLENBQW9CRixHQUFwQixDQUF3QixNQUF4QixFQUFnQ1YsRUFBaEMsQ0FBbUMsTUFBbkMsRUFBMkMsWUFBVztBQUNsRCxVQUFJLENBQUNGLFFBQUwsRUFBZTtBQUNYLGVBQU9KLElBQUksQ0FBQ21CLE1BQUwsQ0FBWWpCLEtBQVosQ0FBa0JGLElBQWxCLEVBQXdCRyxTQUF4QixDQUFQO0FBQ0g7QUFDSixLQUpEO0FBS0gsR0FsQ0Q7QUFtQ0gsQ0F0Q0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3V0aWxzL3NlbGVjdGl6ZS1vcHRpb24tY2xpY2suanM/NWI2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJCBmcm9tICdqcXVlcnknO1xuaW1wb3J0IFNlbGVjdGl6ZSBmcm9tICdzZWxlY3RpemUnO1xuXG5TZWxlY3RpemUuZGVmaW5lKCdvcHRpb25fY2xpY2snLCBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgY29uc3Qgc2V0dXAgPSBzZWxmLnNldHVwO1xuICAgIHRoaXMuc2V0dXAgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgc2V0dXAuYXBwbHkoc2VsZiwgYXJndW1lbnRzKTtcbiAgICAgICAgbGV0IGNsaWNraW5nID0gZmFsc2U7XG5cbiAgICAgICAgLy8gRGV0ZWN0IGNsaWNrIG9uIGEgLmNsaWNrYWJsZVxuICAgICAgICBzZWxmLiRkcm9wZG93bl9jb250ZW50Lm9uKCdtb3VzZWRvd24gY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXQgPSAkKGUudGFyZ2V0KTtcbiAgICAgICAgICAgIGlmICh0YXJnZXQuaGFzQ2xhc3MoJ2NsaWNrYWJsZScpIHx8IHRhcmdldC5jbG9zZXN0KCcuY2xpY2thYmxlJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUudHlwZSA9PT0gJ21vdXNlZG93bicpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xpY2tpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmlzRm9jdXNlZCA9IGZhbHNlOyAvLyBhd2Z1bCBoYWNrIHRvIGRlZnVzZSB0aGUgZG9jdW1lbnQgbW91c2Vkb3duIGxpc3RlbmVyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5pc0ZvY3VzZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2tpbmcgPSBmYWxzZTsgLy8gd2FpdCB1bnRpbCBibHVyIGhhcyBiZWVuIHByZWVtcHRlZFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgeyAvLyBjbGVhbnVwIGluIGNhc2UgdXNlciByaWdodC1jbGlja2VkIG9yIGRyYWdnZWQgb2ZmIHRoZSBlbGVtZW50XG4gICAgICAgICAgICAgICAgY2xpY2tpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBzZWxmLmlzRm9jdXNlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEludGVyY2VwdCBkZWZhdWx0IGhhbmRsZXJzXG4gICAgICAgIHNlbGYuJGRyb3Bkb3duLm9mZignbW91c2Vkb3duIGNsaWNrJywgJ1tkYXRhLXNlbGVjdGFibGVdJykub24oJ21vdXNlZG93biBjbGljaycsICdbZGF0YS1zZWxlY3RhYmxlXScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKCFjbGlja2luZykge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLm9uT3B0aW9uU2VsZWN0LmFwcGx5KHNlbGYsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBzZWxmLiRjb250cm9sX2lucHV0Lm9mZignYmx1cicpLm9uKCdibHVyJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoIWNsaWNraW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlbGYub25CbHVyLmFwcGx5KHNlbGYsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwiU2VsZWN0aXplIiwiZGVmaW5lIiwib3B0aW9ucyIsInNlbGYiLCJzZXR1cCIsImFwcGx5IiwiYXJndW1lbnRzIiwiY2xpY2tpbmciLCIkZHJvcGRvd25fY29udGVudCIsIm9uIiwiZSIsInRhcmdldCIsImhhc0NsYXNzIiwiY2xvc2VzdCIsImxlbmd0aCIsInR5cGUiLCJpc0ZvY3VzZWQiLCJzZXRUaW1lb3V0IiwiJGRyb3Bkb3duIiwib2ZmIiwib25PcHRpb25TZWxlY3QiLCIkY29udHJvbF9pbnB1dCIsIm9uQmx1ciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/utils/selectize-option-click.js\n");

/***/ }),

/***/ "./app/utils/selectize-required-fix.js":
/*!*********************************************!*\
  !*** ./app/utils/selectize-required-fix.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var selectize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! selectize */ \"./node_modules/selectize/dist/js/selectize.js\");\n/* harmony import */ var selectize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(selectize__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * This is a plugin to override the `.refreshValidityState` method of\n * the Selectize library (https://selectize.github.io/selectize.js/).\n * The library is not maintained anymore (as of 2017-09-13) and contains\n * a bug which causes Microsoft Edge to not work with selectized [required]\n * form fields. This plugin should be removed if\n * https://github.com/selectize/selectize.js/pull/1320 is ever merged\n * and a new version of Selectize gets released.\n */\n\nselectize__WEBPACK_IMPORTED_MODULE_0___default().define('required-fix', function (options) {\n  var _this = this;\n\n  this.refreshValidityState = function () {\n    if (!_this.isRequired) return false;\n    var invalid = !_this.items.length;\n    _this.isInvalid = invalid;\n\n    if (invalid) {\n      _this.$control_input.attr('required', '');\n\n      _this.$input.removeAttr('required');\n    } else {\n      _this.$control_input.removeAttr('required');\n\n      _this.$input.attr('required');\n    }\n  };\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvc2VsZWN0aXplLXJlcXVpcmVkLWZpeC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBQSx1REFBQSxDQUFpQixjQUFqQixFQUFpQyxVQUFTRSxPQUFULEVBQWtCO0FBQUE7O0FBQy9DLE9BQUtDLG9CQUFMLEdBQTRCLFlBQU07QUFDOUIsUUFBSSxDQUFDLEtBQUksQ0FBQ0MsVUFBVixFQUFzQixPQUFPLEtBQVA7QUFFdEIsUUFBSUMsT0FBTyxHQUFHLENBQUMsS0FBSSxDQUFDQyxLQUFMLENBQVdDLE1BQTFCO0FBQ0EsU0FBSSxDQUFDQyxTQUFMLEdBQWlCSCxPQUFqQjs7QUFFQSxRQUFJQSxPQUFKLEVBQWE7QUFDVCxXQUFJLENBQUNJLGNBQUwsQ0FBb0JDLElBQXBCLENBQXlCLFVBQXpCLEVBQXFDLEVBQXJDOztBQUNBLFdBQUksQ0FBQ0MsTUFBTCxDQUFZQyxVQUFaLENBQXVCLFVBQXZCO0FBQ0gsS0FIRCxNQUdPO0FBQ0gsV0FBSSxDQUFDSCxjQUFMLENBQW9CRyxVQUFwQixDQUErQixVQUEvQjs7QUFDQSxXQUFJLENBQUNELE1BQUwsQ0FBWUQsSUFBWixDQUFpQixVQUFqQjtBQUNIO0FBQ0osR0FiRDtBQWNILENBZkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3V0aWxzL3NlbGVjdGl6ZS1yZXF1aXJlZC1maXguanM/OWQ5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgaXMgYSBwbHVnaW4gdG8gb3ZlcnJpZGUgdGhlIGAucmVmcmVzaFZhbGlkaXR5U3RhdGVgIG1ldGhvZCBvZlxuICogdGhlIFNlbGVjdGl6ZSBsaWJyYXJ5IChodHRwczovL3NlbGVjdGl6ZS5naXRodWIuaW8vc2VsZWN0aXplLmpzLykuXG4gKiBUaGUgbGlicmFyeSBpcyBub3QgbWFpbnRhaW5lZCBhbnltb3JlIChhcyBvZiAyMDE3LTA5LTEzKSBhbmQgY29udGFpbnNcbiAqIGEgYnVnIHdoaWNoIGNhdXNlcyBNaWNyb3NvZnQgRWRnZSB0byBub3Qgd29yayB3aXRoIHNlbGVjdGl6ZWQgW3JlcXVpcmVkXVxuICogZm9ybSBmaWVsZHMuIFRoaXMgcGx1Z2luIHNob3VsZCBiZSByZW1vdmVkIGlmXG4gKiBodHRwczovL2dpdGh1Yi5jb20vc2VsZWN0aXplL3NlbGVjdGl6ZS5qcy9wdWxsLzEzMjAgaXMgZXZlciBtZXJnZWRcbiAqIGFuZCBhIG5ldyB2ZXJzaW9uIG9mIFNlbGVjdGl6ZSBnZXRzIHJlbGVhc2VkLlxuICovXG5cbmltcG9ydCBTZWxlY3RpemUgZnJvbSAnc2VsZWN0aXplJztcblxuU2VsZWN0aXplLmRlZmluZSgncmVxdWlyZWQtZml4JywgZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHRoaXMucmVmcmVzaFZhbGlkaXR5U3RhdGUgPSAoKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5pc1JlcXVpcmVkKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgbGV0IGludmFsaWQgPSAhdGhpcy5pdGVtcy5sZW5ndGg7XG4gICAgICAgIHRoaXMuaXNJbnZhbGlkID0gaW52YWxpZDtcblxuICAgICAgICBpZiAoaW52YWxpZCkge1xuICAgICAgICAgICAgdGhpcy4kY29udHJvbF9pbnB1dC5hdHRyKCdyZXF1aXJlZCcsICcnKTtcbiAgICAgICAgICAgIHRoaXMuJGlucHV0LnJlbW92ZUF0dHIoJ3JlcXVpcmVkJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLiRjb250cm9sX2lucHV0LnJlbW92ZUF0dHIoJ3JlcXVpcmVkJyk7XG4gICAgICAgICAgICB0aGlzLiRpbnB1dC5hdHRyKCdyZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgfTtcbn0pO1xuIl0sIm5hbWVzIjpbIlNlbGVjdGl6ZSIsImRlZmluZSIsIm9wdGlvbnMiLCJyZWZyZXNoVmFsaWRpdHlTdGF0ZSIsImlzUmVxdWlyZWQiLCJpbnZhbGlkIiwiaXRlbXMiLCJsZW5ndGgiLCJpc0ludmFsaWQiLCIkY29udHJvbF9pbnB1dCIsImF0dHIiLCIkaW5wdXQiLCJyZW1vdmVBdHRyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/selectize-required-fix.js\n");

/***/ }),

/***/ "./app/utils/sidebar.js":
/*!******************************!*\
  !*** ./app/utils/sidebar.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Sidebar),\n/* harmony export */   \"Instance\": () => (/* binding */ Instance)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var es6_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! es6-map */ \"./node_modules/es6-map/index.js\");\n/* harmony import */ var es6_map__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(es6_map__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/cookies */ \"./app/utils/cookies.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n\n\nvar MOBILE_BREAKPOINT = 48 - 0.062;\nvar DESKTOP_BREAKPOINT = 75 + 0.063;\nvar EVENTS = 'touchstart._grav click._grav';\nvar TARGETS = '[data-sidebar-mobile-toggle], #overlay';\nvar MOBILE_QUERY = \"(max-width: \".concat(MOBILE_BREAKPOINT, \"em)\");\nvar DESKTOP_QUERY = \"(min-width: \".concat(DESKTOP_BREAKPOINT, \"em)\");\nvar map = new (es6_map__WEBPACK_IMPORTED_MODULE_1___default())();\n\nvar Sidebar = /*#__PURE__*/function () {\n  function Sidebar() {\n    _classCallCheck(this, Sidebar);\n\n    this.timeout = null;\n    this.isOpen = false;\n    this.body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\n    this.matchMedia = __webpack_require__.g.matchMedia(MOBILE_QUERY);\n    this.enable();\n  }\n\n  _createClass(Sidebar, [{\n    key: \"enable\",\n    value: function enable() {\n      var sidebar = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#admin-sidebar');\n      this.matchMedia.addListener(this._getBound('checkMatch'));\n      this.checkMatch(this.matchMedia);\n      this.body.on(EVENTS, '[data-sidebar-toggle]', this._getBound('toggleSidebarState'));\n\n      if (sidebar.data('quickopen')) {\n        sidebar.hover(this._getBound('quickOpenIn'), this._getBound('quickOpenOut'));\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      var sidebar = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#admin-sidebar');\n      this.close();\n      this.matchMedia.removeListener(this._getBound('checkMatch'));\n      this.body.off(EVENTS, '[data-sidebar-toggle]', this._getBound('toggleSidebarState'));\n\n      if (sidebar.data('quickopen')) {\n        sidebar.off('mouseenter mouseleave');\n      }\n    }\n  }, {\n    key: \"attach\",\n    value: function attach() {\n      this.body.on(EVENTS, TARGETS, this._getBound('toggle'));\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      this.body.off(EVENTS, TARGETS, this._getBound('toggle'));\n    }\n  }, {\n    key: \"quickOpenIn\",\n    value: function\n      /* event */\n    quickOpenIn() {\n      var _this = this;\n\n      var isDesktop = __webpack_require__.g.matchMedia(DESKTOP_QUERY).matches;\n      var delay = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#admin-sidebar').data('quickopen-delay') || 500;\n\n      if (this.body.hasClass('sidebar-mobile-open')) {\n        return;\n      }\n\n      var shouldQuickOpen = isDesktop ? this.body.hasClass('sidebar-closed') : !this.body.hasClass('sidebar-open');\n\n      if (!shouldQuickOpen && !this.body.hasClass('sidebar-quickopen')) {\n        return this.quickOpenOut();\n      }\n\n      this.timeout = setTimeout(function () {\n        _this.body.addClass('sidebar-open sidebar-quickopen');\n\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).trigger('sidebar_state._grav', isDesktop);\n      }, delay);\n    }\n  }, {\n    key: \"quickOpenOut\",\n    value: function\n      /* event */\n    quickOpenOut() {\n      clearTimeout(this.timeout);\n\n      if (this.body.hasClass('sidebar-quickopen')) {\n        this.body.removeClass('sidebar-open sidebar-quickopen');\n      }\n\n      return true;\n    }\n  }, {\n    key: \"open\",\n    value: function open(event) {\n      var _this2 = this;\n\n      var quick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      var overlay = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#overlay');\n      var sidebar = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#admin-sidebar');\n      this.body.addClass('sidebar-mobile-open');\n      overlay.css('display', 'block');\n\n      if (!quick) {\n        sidebar.css('display', 'block').animate({\n          opacity: 1\n        }, 200, function () {\n          _this2.isOpen = true;\n        });\n      } else {\n        sidebar.css({\n          display: 'block',\n          opacity: 1\n        });\n        this.isOpen = true;\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close(event) {\n      var _this3 = this;\n\n      var quick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      var overlay = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#overlay');\n      var sidebar = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#admin-sidebar');\n      this.body.removeClass('sidebar-mobile-open');\n      overlay.css('display', 'none');\n\n      if (!quick) {\n        sidebar.animate({\n          opacity: 0\n        }, 200, function () {\n          sidebar.css('display', 'none');\n          _this3.isOpen = false;\n        });\n      } else {\n        sidebar.css({\n          opacity: 0,\n          display: 'none'\n        });\n        this.isOpen = false;\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      return this[this.isOpen ? 'close' : 'open'](event);\n    }\n  }, {\n    key: \"toggleSidebarState\",\n    value: function toggleSidebarState(event) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      clearTimeout(this.timeout);\n      var isDesktop = __webpack_require__.g.matchMedia(DESKTOP_QUERY).matches;\n      var cookie = null;\n\n      if (isDesktop) {\n        this.body.removeClass('sidebar-open');\n      }\n\n      if (!isDesktop) {\n        this.body.removeClass('sidebar-closed');\n        this.body.removeClass('sidebar-mobile-open');\n      }\n\n      this.body.toggleClass(\"sidebar-\".concat(isDesktop ? 'closed' : 'open'));\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(__webpack_require__.g).trigger('sidebar_state._grav', isDesktop);\n\n      if (isDesktop) {\n        cookie = !this.body.hasClass('sidebar-closed');\n      } else {\n        cookie = this.body.hasClass('sidebar-open');\n      }\n\n      _utils_cookies__WEBPACK_IMPORTED_MODULE_2__[\"default\"].set('grav-admin-sidebar', cookie, {\n        expires: Infinity\n      });\n    }\n  }, {\n    key: \"checkMatch\",\n    value: function checkMatch(data) {\n      var sidebar = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#admin-sidebar');\n      var overlay = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#overlay');\n      this.isOpen = false;\n      overlay.css('display', 'none');\n      sidebar.css({\n        display: data.matches ? 'none' : 'inherit',\n        opacity: data.matches ? 0 : 1\n      });\n\n      if (data.matches) {\n        this.body.removeClass('sidebar-open sidebar-closed');\n      }\n\n      this[data.matches ? 'attach' : 'detach']();\n    }\n  }, {\n    key: \"_resetMap\",\n    value: function _resetMap() {\n      return map.clear();\n    }\n  }, {\n    key: \"_getBound\",\n    value: function _getBound(fn) {\n      if (map.has(fn)) {\n        return map.get(fn);\n      }\n\n      return map.set(fn, this[fn].bind(this)).get(fn);\n    }\n  }]);\n\n  return Sidebar;\n}();\n\n\nvar Instance = new Sidebar();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/utils/sidebar.js\n");

/***/ }),

/***/ "./app/utils/storage.js":
/*!******************************!*\
  !*** ./app/utils/storage.js ***!
  \******************************/
/***/ (() => {

eval("// localStorage\n(function () {\n  function isSupported() {\n    var item = 'localStoragePollyfill';\n\n    try {\n      localStorage.setItem(item, item);\n      localStorage.removeItem(item);\n      sessionStorage.setItem(item, item);\n      sessionStorage.removeItem(item);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  if (!isSupported()) {\n    try {\n      Storage.prototype._data = {};\n\n      Storage.prototype.setItem = function (id, val) {\n        this._data[id] = String(val);\n        return this._data[id];\n      };\n\n      Storage.prototype.getItem = function (id) {\n        return this._data.hasOwnProperty(id) ? this._data[id] : undefined;\n      };\n\n      Storage.prototype.removeItem = function (id) {\n        return delete this._data[id];\n      };\n\n      Storage.prototype.clear = function () {\n        this._data = {};\n        return this._data;\n      };\n    } catch (e) {\n      console.error('localStorage pollyfill error: ', e);\n    }\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HcmF2Ly4vYXBwL3V0aWxzL3N0b3JhZ2UuanM/YjUzNiJdLCJuYW1lcyI6WyJpc1N1cHBvcnRlZCIsIml0ZW0iLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwicmVtb3ZlSXRlbSIsInNlc3Npb25TdG9yYWdlIiwiZSIsIlN0b3JhZ2UiLCJwcm90b3R5cGUiLCJfZGF0YSIsImlkIiwidmFsIiwiU3RyaW5nIiwiZ2V0SXRlbSIsImhhc093blByb3BlcnR5IiwidW5kZWZpbmVkIiwiY2xlYXIiLCJjb25zb2xlIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0MsYUFBVztBQUNSLFdBQVNBLFdBQVQsR0FBdUI7QUFDbkIsUUFBSUMsSUFBSSxHQUFHLHVCQUFYOztBQUNBLFFBQUk7QUFDQUMsTUFBQUEsWUFBWSxDQUFDQyxPQUFiLENBQXFCRixJQUFyQixFQUEyQkEsSUFBM0I7QUFDQUMsTUFBQUEsWUFBWSxDQUFDRSxVQUFiLENBQXdCSCxJQUF4QjtBQUNBSSxNQUFBQSxjQUFjLENBQUNGLE9BQWYsQ0FBdUJGLElBQXZCLEVBQTZCQSxJQUE3QjtBQUNBSSxNQUFBQSxjQUFjLENBQUNELFVBQWYsQ0FBMEJILElBQTFCO0FBQ0EsYUFBTyxJQUFQO0FBQ0gsS0FORCxDQU1FLE9BQU9LLENBQVAsRUFBVTtBQUNSLGFBQU8sS0FBUDtBQUNIO0FBQ0o7O0FBRUQsTUFBSSxDQUFDTixXQUFXLEVBQWhCLEVBQW9CO0FBQ2hCLFFBQUk7QUFDQU8sTUFBQUEsT0FBTyxDQUFDQyxTQUFSLENBQWtCQyxLQUFsQixHQUEwQixFQUExQjs7QUFFQUYsTUFBQUEsT0FBTyxDQUFDQyxTQUFSLENBQWtCTCxPQUFsQixHQUE0QixVQUFTTyxFQUFULEVBQWFDLEdBQWIsRUFBa0I7QUFDMUMsYUFBS0YsS0FBTCxDQUFXQyxFQUFYLElBQWlCRSxNQUFNLENBQUNELEdBQUQsQ0FBdkI7QUFDQSxlQUFPLEtBQUtGLEtBQUwsQ0FBV0MsRUFBWCxDQUFQO0FBQ0gsT0FIRDs7QUFLQUgsTUFBQUEsT0FBTyxDQUFDQyxTQUFSLENBQWtCSyxPQUFsQixHQUE0QixVQUFTSCxFQUFULEVBQWE7QUFDckMsZUFBTyxLQUFLRCxLQUFMLENBQVdLLGNBQVgsQ0FBMEJKLEVBQTFCLElBQWdDLEtBQUtELEtBQUwsQ0FBV0MsRUFBWCxDQUFoQyxHQUFpREssU0FBeEQ7QUFDSCxPQUZEOztBQUlBUixNQUFBQSxPQUFPLENBQUNDLFNBQVIsQ0FBa0JKLFVBQWxCLEdBQStCLFVBQVNNLEVBQVQsRUFBYTtBQUN4QyxlQUFPLE9BQU8sS0FBS0QsS0FBTCxDQUFXQyxFQUFYLENBQWQ7QUFDSCxPQUZEOztBQUlBSCxNQUFBQSxPQUFPLENBQUNDLFNBQVIsQ0FBa0JRLEtBQWxCLEdBQTBCLFlBQVc7QUFDakMsYUFBS1AsS0FBTCxHQUFhLEVBQWI7QUFDQSxlQUFPLEtBQUtBLEtBQVo7QUFDSCxPQUhEO0FBSUgsS0FwQkQsQ0FvQkUsT0FBT0gsQ0FBUCxFQUFVO0FBQ1JXLE1BQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLGdDQUFkLEVBQWdEWixDQUFoRDtBQUNIO0FBQ0o7QUFDSixDQXZDQSxHQUFEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbG9jYWxTdG9yYWdlXG4oZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gaXNTdXBwb3J0ZWQoKSB7XG4gICAgICAgIHZhciBpdGVtID0gJ2xvY2FsU3RvcmFnZVBvbGx5ZmlsbCc7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShpdGVtLCBpdGVtKTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGl0ZW0pO1xuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShpdGVtLCBpdGVtKTtcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oaXRlbSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFpc1N1cHBvcnRlZCgpKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBTdG9yYWdlLnByb3RvdHlwZS5fZGF0YSA9IHt9O1xuXG4gICAgICAgICAgICBTdG9yYWdlLnByb3RvdHlwZS5zZXRJdGVtID0gZnVuY3Rpb24oaWQsIHZhbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2RhdGFbaWRdID0gU3RyaW5nKHZhbCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGFbaWRdO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgU3RvcmFnZS5wcm90b3R5cGUuZ2V0SXRlbSA9IGZ1bmN0aW9uKGlkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGEuaGFzT3duUHJvcGVydHkoaWQpID8gdGhpcy5fZGF0YVtpZF0gOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBTdG9yYWdlLnByb3RvdHlwZS5yZW1vdmVJdGVtID0gZnVuY3Rpb24oaWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGVsZXRlIHRoaXMuX2RhdGFbaWRdO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgU3RvcmFnZS5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9kYXRhID0ge307XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGE7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdsb2NhbFN0b3JhZ2UgcG9sbHlmaWxsIGVycm9yOiAnLCBlKTtcbiAgICAgICAgfVxuICAgIH1cbn0oKSk7XG4iXSwiZmlsZSI6Ii4vYXBwL3V0aWxzL3N0b3JhZ2UuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app/utils/storage.js\n");

/***/ }),

/***/ "./app/utils/tabs-memory.js":
/*!**********************************!*\
  !*** ./app/utils/tabs-memory.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_cookies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/cookies */ \"./app/utils/cookies.js\");\n/* harmony import */ var _forms_fields_editor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../forms/fields/editor */ \"./app/forms/fields/editor.js\");\n\n\n\nvar Data = JSON.parse(_utils_cookies__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get('grav-tabs-state') || '{}');\njquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('touchstart click', '[data-tabid]', function (event) {\n  event && event.stopPropagation();\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  Data[target.data('tabkey')] = target.data('scope');\n  _utils_cookies__WEBPACK_IMPORTED_MODULE_1__[\"default\"].set('grav-tabs-state', JSON.stringify(Data), {\n    expires: Infinity\n  });\n  var panel = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[id=\\\"\".concat(target.data('tabid'), \"\\\"]\"));\n  target.siblings('[data-tabid]').removeClass('active');\n  target.addClass('active');\n  panel.siblings('[id]').removeClass('active');\n  panel.addClass('active');\n  _forms_fields_editor__WEBPACK_IMPORTED_MODULE_2__.Instance.editors.each(function (index, editor) {\n    var codemirror = jquery__WEBPACK_IMPORTED_MODULE_0___default()(editor).data('codemirror');\n\n    if (!codemirror) {\n      return;\n    }\n\n    if (codemirror.display.lastWrapWidth === 0) {\n      codemirror.refresh();\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvdGFicy1tZW1vcnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFFQSxJQUFJSSxJQUFJLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXTCwwREFBQSxDQUFZLGlCQUFaLEtBQWtDLElBQTdDLENBQVg7QUFFQUQsNkNBQUMsQ0FBQyxNQUFELENBQUQsQ0FBVVEsRUFBVixDQUFhLGtCQUFiLEVBQWlDLGNBQWpDLEVBQWlELFVBQUNDLEtBQUQsRUFBVztBQUN4REEsRUFBQUEsS0FBSyxJQUFJQSxLQUFLLENBQUNDLGVBQU4sRUFBVDtBQUNBLE1BQUlDLE1BQU0sR0FBR1gsNkNBQUMsQ0FBQ1MsS0FBSyxDQUFDRyxhQUFQLENBQWQ7QUFFQVIsRUFBQUEsSUFBSSxDQUFDTyxNQUFNLENBQUNFLElBQVAsQ0FBWSxRQUFaLENBQUQsQ0FBSixHQUE4QkYsTUFBTSxDQUFDRSxJQUFQLENBQVksT0FBWixDQUE5QjtBQUNBWixFQUFBQSwwREFBQSxDQUFZLGlCQUFaLEVBQStCSSxJQUFJLENBQUNVLFNBQUwsQ0FBZVgsSUFBZixDQUEvQixFQUFxRDtBQUFFWSxJQUFBQSxPQUFPLEVBQUVDO0FBQVgsR0FBckQ7QUFFQSxNQUFNQyxLQUFLLEdBQUdsQiw2Q0FBQyxpQkFBU1csTUFBTSxDQUFDRSxJQUFQLENBQVksT0FBWixDQUFULFNBQWY7QUFFQUYsRUFBQUEsTUFBTSxDQUFDUSxRQUFQLENBQWdCLGNBQWhCLEVBQWdDQyxXQUFoQyxDQUE0QyxRQUE1QztBQUNBVCxFQUFBQSxNQUFNLENBQUNVLFFBQVAsQ0FBZ0IsUUFBaEI7QUFFQUgsRUFBQUEsS0FBSyxDQUFDQyxRQUFOLENBQWUsTUFBZixFQUF1QkMsV0FBdkIsQ0FBbUMsUUFBbkM7QUFDQUYsRUFBQUEsS0FBSyxDQUFDRyxRQUFOLENBQWUsUUFBZjtBQUVBbEIsRUFBQUEsdUVBQUEsQ0FBcUIsVUFBQ3FCLEtBQUQsRUFBUUMsTUFBUixFQUFtQjtBQUNwQyxRQUFJQyxVQUFVLEdBQUcxQiw2Q0FBQyxDQUFDeUIsTUFBRCxDQUFELENBQVVaLElBQVYsQ0FBZSxZQUFmLENBQWpCOztBQUNBLFFBQUksQ0FBQ2EsVUFBTCxFQUFpQjtBQUFFO0FBQVM7O0FBQzVCLFFBQUlBLFVBQVUsQ0FBQ0MsT0FBWCxDQUFtQkMsYUFBbkIsS0FBcUMsQ0FBekMsRUFBNEM7QUFDeENGLE1BQUFBLFVBQVUsQ0FBQ0csT0FBWDtBQUNIO0FBQ0osR0FORDtBQU9ILENBdEJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR3Jhdi8uL2FwcC91dGlscy90YWJzLW1lbW9yeS5qcz8zOWIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5pbXBvcnQgQ29va2llcyBmcm9tICcuLi91dGlscy9jb29raWVzJztcbmltcG9ydCB7IEluc3RhbmNlIGFzIEVkaXRvcnMgfSBmcm9tICcuLi9mb3Jtcy9maWVsZHMvZWRpdG9yJztcblxubGV0IERhdGEgPSBKU09OLnBhcnNlKENvb2tpZXMuZ2V0KCdncmF2LXRhYnMtc3RhdGUnKSB8fCAne30nKTtcblxuJCgnYm9keScpLm9uKCd0b3VjaHN0YXJ0IGNsaWNrJywgJ1tkYXRhLXRhYmlkXScsIChldmVudCkgPT4ge1xuICAgIGV2ZW50ICYmIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIGxldCB0YXJnZXQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuXG4gICAgRGF0YVt0YXJnZXQuZGF0YSgndGFia2V5JyldID0gdGFyZ2V0LmRhdGEoJ3Njb3BlJyk7XG4gICAgQ29va2llcy5zZXQoJ2dyYXYtdGFicy1zdGF0ZScsIEpTT04uc3RyaW5naWZ5KERhdGEpLCB7IGV4cGlyZXM6IEluZmluaXR5IH0pO1xuXG4gICAgY29uc3QgcGFuZWwgPSAkKGBbaWQ9XCIke3RhcmdldC5kYXRhKCd0YWJpZCcpfVwiXWApO1xuXG4gICAgdGFyZ2V0LnNpYmxpbmdzKCdbZGF0YS10YWJpZF0nKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgdGFyZ2V0LmFkZENsYXNzKCdhY3RpdmUnKTtcblxuICAgIHBhbmVsLnNpYmxpbmdzKCdbaWRdJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgIHBhbmVsLmFkZENsYXNzKCdhY3RpdmUnKTtcblxuICAgIEVkaXRvcnMuZWRpdG9ycy5lYWNoKChpbmRleCwgZWRpdG9yKSA9PiB7XG4gICAgICAgIGxldCBjb2RlbWlycm9yID0gJChlZGl0b3IpLmRhdGEoJ2NvZGVtaXJyb3InKTtcbiAgICAgICAgaWYgKCFjb2RlbWlycm9yKSB7IHJldHVybjsgfVxuICAgICAgICBpZiAoY29kZW1pcnJvci5kaXNwbGF5Lmxhc3RXcmFwV2lkdGggPT09IDApIHtcbiAgICAgICAgICAgIGNvZGVtaXJyb3IucmVmcmVzaCgpO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcbiJdLCJuYW1lcyI6WyIkIiwiQ29va2llcyIsIkluc3RhbmNlIiwiRWRpdG9ycyIsIkRhdGEiLCJKU09OIiwicGFyc2UiLCJnZXQiLCJvbiIsImV2ZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsImRhdGEiLCJzZXQiLCJzdHJpbmdpZnkiLCJleHBpcmVzIiwiSW5maW5pdHkiLCJwYW5lbCIsInNpYmxpbmdzIiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyIsImVkaXRvcnMiLCJlYWNoIiwiaW5kZXgiLCJlZGl0b3IiLCJjb2RlbWlycm9yIiwiZGlzcGxheSIsImxhc3RXcmFwV2lkdGgiLCJyZWZyZXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/tabs-memory.js\n");

/***/ }),

/***/ "./app/utils/toastr.js":
/*!*****************************!*\
  !*** ./app/utils/toastr.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var toastr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! toastr */ \"./node_modules/toastr/toastr.js\");\n/* harmony import */ var toastr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(toastr__WEBPACK_IMPORTED_MODULE_0__);\n\n(toastr__WEBPACK_IMPORTED_MODULE_0___default().options.positionClass) = 'toast-top-right';\n(toastr__WEBPACK_IMPORTED_MODULE_0___default().options.preventDuplicates) = true;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((toastr__WEBPACK_IMPORTED_MODULE_0___default()));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvdXRpbHMvdG9hc3RyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBRUFBLHFFQUFBLEdBQStCLGlCQUEvQjtBQUNBQSx5RUFBQSxHQUFtQyxJQUFuQztBQUVBLGlFQUFlQSwrQ0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvdXRpbHMvdG9hc3RyLmpzP2NmN2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRvYXN0ciBmcm9tICd0b2FzdHInO1xuXG50b2FzdHIub3B0aW9ucy5wb3NpdGlvbkNsYXNzID0gJ3RvYXN0LXRvcC1yaWdodCc7XG50b2FzdHIub3B0aW9ucy5wcmV2ZW50RHVwbGljYXRlcyA9IHRydWU7XG5cbmV4cG9ydCBkZWZhdWx0IHRvYXN0cjtcbiJdLCJuYW1lcyI6WyJ0b2FzdHIiLCJvcHRpb25zIiwicG9zaXRpb25DbGFzcyIsInByZXZlbnREdXBsaWNhdGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/utils/toastr.js\n");

/***/ }),

/***/ "./app/whitelabel/compile.js":
/*!***********************************!*\
  !*** ./app/whitelabel/compile.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"prepareElement\": () => (/* binding */ prepareElement),\n/* harmony export */   \"resetElement\": () => (/* binding */ resetElement)\n/* harmony export */ });\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! grav-config */ \"grav-config\");\n/* harmony import */ var grav_config__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(grav_config__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/request */ \"./app/utils/request.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$preview = _ref.preview,\n      preview = _ref$preview === void 0 ? false : _ref$preview,\n      _ref$exportScss = _ref.exportScss,\n      exportScss = _ref$exportScss === void 0 ? false : _ref$exportScss,\n      _ref$color_scheme = _ref.color_scheme,\n      color_scheme = _ref$color_scheme === void 0 ? {} : _ref$color_scheme,\n      _ref$fonts = _ref.fonts,\n      fonts = _ref$fonts === void 0 ? {} : _ref$fonts,\n      _ref$callback = _ref.callback,\n      callback = _ref$callback === void 0 ? function () {} : _ref$callback;\n\n  var task = exportScss ? 'exportScss' : 'compileScss'; // console.log(config);\n\n  var URI = \"\".concat(grav_config__WEBPACK_IMPORTED_MODULE_0__.config.base_url_relative, \".json/task:\").concat(task);\n  (0,_utils_request__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(URI, {\n    method: 'post',\n    body: Object.assign({}, preview ? {\n      preview: preview\n    } : null, color_scheme)\n  }, callback);\n});\nvar prepareElement = function prepareElement(element) {\n  element.data('busy_right_now', true);\n\n  if (!element.data('current_icon')) {\n    element.data('current_icon', element.find('.fa').attr('class'));\n  }\n\n  element.find('.fa').attr('class', 'fa fa-fw fa-spin fa-refresh');\n};\nvar resetElement = function resetElement(element) {\n  element.data('busy_right_now', false);\n  element.find('.fa').attr('class', element.data('current_icon'));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAvd2hpdGVsYWJlbC9jb21waWxlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFFQSxpRUFBZSxZQUFzRztBQUFBLGlGQUFQLEVBQU87QUFBQSwwQkFBbkdFLE9BQW1HO0FBQUEsTUFBbkdBLE9BQW1HLDZCQUF6RixLQUF5RjtBQUFBLDZCQUFsRkMsVUFBa0Y7QUFBQSxNQUFsRkEsVUFBa0YsZ0NBQXJFLEtBQXFFO0FBQUEsK0JBQTlEQyxZQUE4RDtBQUFBLE1BQTlEQSxZQUE4RCxrQ0FBL0MsRUFBK0M7QUFBQSx3QkFBM0NDLEtBQTJDO0FBQUEsTUFBM0NBLEtBQTJDLDJCQUFuQyxFQUFtQztBQUFBLDJCQUEvQkMsUUFBK0I7QUFBQSxNQUEvQkEsUUFBK0IsOEJBQXBCLFlBQU0sQ0FBRSxDQUFZOztBQUNqSCxNQUFJQyxJQUFJLEdBQUdKLFVBQVUsR0FBRyxZQUFILEdBQWtCLGFBQXZDLENBRGlILENBRWpIOztBQUNBLE1BQU1LLEdBQUcsYUFBTVIsaUVBQU4sd0JBQTRDTyxJQUE1QyxDQUFUO0FBQ0FOLEVBQUFBLDBEQUFPLENBQUNPLEdBQUQsRUFBTTtBQUNURSxJQUFBQSxNQUFNLEVBQUUsTUFEQztBQUVUQyxJQUFBQSxJQUFJLEVBQUVDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JYLE9BQU8sR0FBRztBQUFFQSxNQUFBQSxPQUFPLEVBQVBBO0FBQUYsS0FBSCxHQUFpQixJQUExQyxFQUFnREUsWUFBaEQ7QUFGRyxHQUFOLEVBR0pFLFFBSEksQ0FBUDtBQUlILENBUkQ7QUFVTyxJQUFNUSxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNDLE9BQUQsRUFBYTtBQUN2Q0EsRUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsZ0JBQWIsRUFBK0IsSUFBL0I7O0FBQ0EsTUFBSSxDQUFDRCxPQUFPLENBQUNDLElBQVIsQ0FBYSxjQUFiLENBQUwsRUFBbUM7QUFDL0JELElBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLGNBQWIsRUFBNkJELE9BQU8sQ0FBQ0UsSUFBUixDQUFhLEtBQWIsRUFBb0JDLElBQXBCLENBQXlCLE9BQXpCLENBQTdCO0FBQ0g7O0FBQ0RILEVBQUFBLE9BQU8sQ0FBQ0UsSUFBUixDQUFhLEtBQWIsRUFBb0JDLElBQXBCLENBQXlCLE9BQXpCLEVBQWtDLDZCQUFsQztBQUNILENBTk07QUFRQSxJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDSixPQUFELEVBQWE7QUFDckNBLEVBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLGdCQUFiLEVBQStCLEtBQS9CO0FBQ0FELEVBQUFBLE9BQU8sQ0FBQ0UsSUFBUixDQUFhLEtBQWIsRUFBb0JDLElBQXBCLENBQXlCLE9BQXpCLEVBQWtDSCxPQUFPLENBQUNDLElBQVIsQ0FBYSxjQUFiLENBQWxDO0FBQ0gsQ0FITSIsInNvdXJjZXMiOlsid2VicGFjazovL0dyYXYvLi9hcHAvd2hpdGVsYWJlbC9jb21waWxlLmpzP2JmMjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnZ3Jhdi1jb25maWcnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi4vdXRpbHMvcmVxdWVzdCc7XG5cbmV4cG9ydCBkZWZhdWx0ICh7IHByZXZpZXcgPSBmYWxzZSwgZXhwb3J0U2NzcyA9IGZhbHNlLCBjb2xvcl9zY2hlbWUgPSB7fSwgZm9udHMgPSB7fSwgY2FsbGJhY2sgPSAoKSA9PiB7fSB9ID0ge30pID0+IHtcbiAgICBsZXQgdGFzayA9IGV4cG9ydFNjc3MgPyAnZXhwb3J0U2NzcycgOiAnY29tcGlsZVNjc3MnO1xuICAgIC8vIGNvbnNvbGUubG9nKGNvbmZpZyk7XG4gICAgY29uc3QgVVJJID0gYCR7Y29uZmlnLmJhc2VfdXJsX3JlbGF0aXZlfS5qc29uL3Rhc2s6JHt0YXNrfWA7XG4gICAgcmVxdWVzdChVUkksIHtcbiAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgIGJvZHk6IE9iamVjdC5hc3NpZ24oe30sIHByZXZpZXcgPyB7IHByZXZpZXcgfSA6IG51bGwsIGNvbG9yX3NjaGVtZSlcbiAgICB9LCBjYWxsYmFjayk7XG59O1xuXG5leHBvcnQgY29uc3QgcHJlcGFyZUVsZW1lbnQgPSAoZWxlbWVudCkgPT4ge1xuICAgIGVsZW1lbnQuZGF0YSgnYnVzeV9yaWdodF9ub3cnLCB0cnVlKTtcbiAgICBpZiAoIWVsZW1lbnQuZGF0YSgnY3VycmVudF9pY29uJykpIHtcbiAgICAgICAgZWxlbWVudC5kYXRhKCdjdXJyZW50X2ljb24nLCBlbGVtZW50LmZpbmQoJy5mYScpLmF0dHIoJ2NsYXNzJykpO1xuICAgIH1cbiAgICBlbGVtZW50LmZpbmQoJy5mYScpLmF0dHIoJ2NsYXNzJywgJ2ZhIGZhLWZ3IGZhLXNwaW4gZmEtcmVmcmVzaCcpO1xufTtcblxuZXhwb3J0IGNvbnN0IHJlc2V0RWxlbWVudCA9IChlbGVtZW50KSA9PiB7XG4gICAgZWxlbWVudC5kYXRhKCdidXN5X3JpZ2h0X25vdycsIGZhbHNlKTtcbiAgICBlbGVtZW50LmZpbmQoJy5mYScpLmF0dHIoJ2NsYXNzJywgZWxlbWVudC5kYXRhKCdjdXJyZW50X2ljb24nKSk7XG59O1xuIl0sIm5hbWVzIjpbImNvbmZpZyIsInJlcXVlc3QiLCJwcmV2aWV3IiwiZXhwb3J0U2NzcyIsImNvbG9yX3NjaGVtZSIsImZvbnRzIiwiY2FsbGJhY2siLCJ0YXNrIiwiVVJJIiwiYmFzZV91cmxfcmVsYXRpdmUiLCJtZXRob2QiLCJib2R5IiwiT2JqZWN0IiwiYXNzaWduIiwicHJlcGFyZUVsZW1lbnQiLCJlbGVtZW50IiwiZGF0YSIsImZpbmQiLCJhdHRyIiwicmVzZXRFbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./app/whitelabel/compile.js\n");

/***/ }),

/***/ "./app/whitelabel/index.js":
/*!*********************************!*\
  !*** ./app/whitelabel/index.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _compile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compile */ \"./app/whitelabel/compile.js\");\n/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../forms */ \"./app/forms/index.js\");\n/* harmony import */ var _utils_colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/colors */ \"./app/utils/colors.js\");\n/* harmony import */ var _presets__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./presets */ \"./app/whitelabel/presets.js\");\n\n\n\n\n\nvar body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\nvar FormState = _forms__WEBPACK_IMPORTED_MODULE_2__[\"default\"].FormState.Instance;\n\nvar compiler = function compiler(element) {\n  var preview = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var exportScss = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var _callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n  (0,_compile__WEBPACK_IMPORTED_MODULE_1__.prepareElement)(element);\n  var fields = FormState.collect();\n  (0,_compile__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n    preview: preview,\n    exportScss: exportScss,\n    color_scheme: !fields ? [] : fields.filter(function (value, key) {\n      return key.match(/^data\\[whitelabel]\\[color_scheme]/);\n    }).toJS(),\n    callback: function callback(response) {\n      _callback.call(_callback, response);\n\n      (0,_compile__WEBPACK_IMPORTED_MODULE_1__.resetElement)(element);\n    }\n  });\n};\n\nbody.on('click', '[data-preview-scss]', function (event) {\n  event && event.preventDefault();\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n\n  if (element.data('busy_right_now')) {\n    return false;\n  }\n\n  compiler(element, true, false, function (response) {\n    if (response.files) {\n      Object.keys(response.files).forEach(function (key) {\n        var file = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#admin-pro-preview-\".concat(key));\n        var timestamp = Date.now();\n\n        if (!file.length) {\n          file = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"<link id=\\\"admin-pro-preview-\".concat(key, \"\\\" type=\\\"text/css\\\" rel=\\\"stylesheet\\\" />\"));\n          jquery__WEBPACK_IMPORTED_MODULE_0___default()('head').append(file);\n\n          if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-reset-scss]').length) {\n            var reset = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<button class=\"button\" data-reset-scss style=\"margin-left: 5px;\"><i class=\"fa fa-fw fa-history\"></i> Reset</button>');\n            reset.insertAfter(element);\n          }\n        }\n\n        file.attr('href', \"\".concat(response.files[key], \"?\").concat(timestamp));\n      });\n    }\n  });\n});\nbody.on('click', '[data-recompile-scss]', function (event) {\n  event && event.preventDefault();\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n\n  if (element.data('busy_right_now')) {\n    return false;\n  }\n\n  compiler(element, true, false);\n});\nbody.on('click', '[data-export-scss]', function (event) {\n  event && event.preventDefault();\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n\n  if (element.data('busy_right_now')) {\n    return false;\n  }\n\n  compiler(element, true, true, function (response) {\n    if (response.files) {\n      Object.keys(response.files).forEach(function (key) {\n        if (key === 'download') {\n          var _element = document.createElement('a');\n\n          _element.setAttribute('href', response.files[key]);\n\n          _element.setAttribute('download', '');\n\n          _element.style.display = 'none';\n          document.body.appendChild(_element);\n\n          _element.click();\n\n          document.body.removeChild(_element);\n        }\n      });\n    }\n  });\n});\nbody.on('change._grav_colorpicker', '[data-grav-colorpicker]', function (event, input, hex, opacity) {\n  var RGB = (0,_utils_colors__WEBPACK_IMPORTED_MODULE_3__.hex2rgb)(hex);\n  var YIQ = (RGB.r * 299 + RGB.g * 587 + RGB.b * 114) / 1000;\n  var contrast = YIQ >= 128 || opacity <= 0.50 ? 'dark' : 'light';\n  input.parent().removeClass('dark-text light-text').addClass(\"\".concat(contrast, \"-text\"));\n});\nbody.ready(function () {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('[data-grav-colorpicker]').trigger('keyup');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/whitelabel/index.js\n");

/***/ }),

/***/ "./app/whitelabel/presets.js":
/*!***********************************!*\
  !*** ./app/whitelabel/presets.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../forms */ \"./app/forms/index.js\");\n\n\nvar body = jquery__WEBPACK_IMPORTED_MODULE_0___default()('body');\nvar fields = [];\nvar FormState = _forms__WEBPACK_IMPORTED_MODULE_1__[\"default\"].FormState.Instance;\n\nvar setField = function setField(field, value) {\n  var name = field.prop('name');\n  var tag = field.prop('tagName').toLowerCase();\n  var type = field.prop('type');\n  fields.push(name);\n\n  switch (tag) {\n    case 'select':\n      field.val(value);\n      field.data('selectize').setValue(value);\n      field.trigger('change');\n      break;\n\n    case 'input':\n      if (type === 'radio') {\n        var strValue = value ? '1' : '0';\n        field.filter(function (index, radio) {\n          return jquery__WEBPACK_IMPORTED_MODULE_0___default()(radio).val() === strValue;\n        }).prop('checked', true);\n        break;\n      }\n\n      if (type === 'checkbox') {\n        field.prop('checked', value);\n        break;\n      }\n\n      field.val(value);\n      field.trigger('keyup');\n  }\n};\n\nbody.on('click', '[data-preset-values]', function (event) {\n  var target = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var data = target.data('preset-values');\n  Object.keys(data).forEach(function (section) {\n    if (typeof data[section] === 'string') {\n      return;\n    }\n\n    Object.keys(data[section]).forEach(function (key) {\n      var field = jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[name=\\\"data[whitelabel][color_scheme][\".concat(section, \"][\").concat(key, \"]\\\"], [name=\\\"data[\").concat(section, \"][\").concat(key, \"]\\\"]\"));\n      var value = data[section][key];\n      setField(field, value);\n    });\n  });\n});\nbody.on('click', '[data-reset-scss]', function (event) {\n  event && event.preventDefault();\n  var element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.currentTarget);\n  var links = jquery__WEBPACK_IMPORTED_MODULE_0___default()('link[id^=admin-pro-preview-]');\n  element.remove();\n  links.remove();\n  fields.forEach(function (field) {\n    var value = FormState.loadState.get(field);\n    setField(jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"[name=\\\"\".concat(field, \"\\\"]\")), value);\n  });\n  fields = [];\n}); // Horizontal Scroll Functionality\n\n(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.hscrollarrows) = function () {\n  return this.each(function () {\n    var navNext = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<a class=\"nav-next hide\"></a>');\n    var navPrev = jquery__WEBPACK_IMPORTED_MODULE_0___default()('<a class=\"nav-prev hide\"></a>');\n    var scrollTime = null;\n    var resizeTime = null;\n    var scrolling = false;\n    var elm_w = 0;\n    var elem_data_w = 0;\n    var max_scroll = 0;\n    var inc_scroll = 0;\n\n    var calcData = function calcData() {\n      elm_w = elem.width();\n      elem_data_w = elem_data.get(0).scrollWidth;\n      max_scroll = elem_data_w - elm_w;\n      inc_scroll = elm_w * 0.3; // 20%\n    };\n\n    var revalidate = function revalidate() {\n      calcData();\n      stateNavs();\n    };\n\n    var run = function run() {\n      calcData();\n      setupNavs();\n    };\n\n    var setupNavs = function setupNavs() {\n      elem.parent().prepend(navNext);\n      elem.parent().prepend(navPrev);\n      navNext.on('click', next);\n      navPrev.on('click', prev);\n      stateNavs();\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(elem).scroll(function () {\n        if (!scrolling) {\n          clearTimeout(scrollTime);\n          scrollTime = setTimeout(function () {\n            stateNavs();\n          }, 250);\n        }\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).resize(function () {\n        clearTimeout(resizeTime);\n        resizeTime = setTimeout(function () {\n          revalidate();\n        }, 250);\n      });\n    };\n\n    var stateNavs = function stateNavs() {\n      var current_scroll = elem.scrollLeft();\n\n      if (current_scroll < max_scroll) {\n        navNext.removeClass('hide');\n      } else {\n        navNext.addClass('hide');\n      }\n\n      if (current_scroll > 0) {\n        navPrev.removeClass('hide');\n      } else {\n        navPrev.addClass('hide');\n      }\n\n      scrolling = false;\n    };\n\n    var next = function next() {\n      var current_scroll = elem.scrollLeft();\n\n      if (current_scroll < max_scroll) {\n        scrolling = true;\n        elem.stop().animate({\n          scrollLeft: current_scroll + inc_scroll\n        }, stateNavs);\n      }\n    };\n\n    var prev = function prev() {\n      var current_scroll = elem.scrollLeft();\n\n      if (current_scroll > 0) {\n        scrolling = true;\n        elem.stop().animate({\n          scrollLeft: current_scroll - inc_scroll\n        }, stateNavs);\n      }\n    };\n\n    var elem = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);\n    var elem_data = jquery__WEBPACK_IMPORTED_MODULE_0___default()(':first-child', elem);\n    run();\n  });\n};\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {\n  jquery__WEBPACK_IMPORTED_MODULE_0___default()('.jquery-horizontal-scroll').hscrollarrows();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/whitelabel/presets.js\n");

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!***************************************************!*\
  !*** ./node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn-bd": "./node_modules/moment/locale/bn-bd.js",
	"./bn-bd.js": "./node_modules/moment/locale/bn-bd.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-in": "./node_modules/moment/locale/en-in.js",
	"./en-in.js": "./node_modules/moment/locale/en-in.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./en-sg": "./node_modules/moment/locale/en-sg.js",
	"./en-sg.js": "./node_modules/moment/locale/en-sg.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-mx": "./node_modules/moment/locale/es-mx.js",
	"./es-mx.js": "./node_modules/moment/locale/es-mx.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fil": "./node_modules/moment/locale/fil.js",
	"./fil.js": "./node_modules/moment/locale/fil.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-deva": "./node_modules/moment/locale/gom-deva.js",
	"./gom-deva.js": "./node_modules/moment/locale/gom-deva.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./oc-lnc": "./node_modules/moment/locale/oc-lnc.js",
	"./oc-lnc.js": "./node_modules/moment/locale/oc-lnc.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tk": "./node_modules/moment/locale/tk.js",
	"./tk.js": "./node_modules/moment/locale/tk.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-mo": "./node_modules/moment/locale/zh-mo.js",
	"./zh-mo.js": "./node_modules/moment/locale/zh-mo.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "grav-config":
/*!****************************!*\
  !*** external "GravAdmin" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = GravAdmin;

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	(() => {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"admin": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkGrav"] = self["webpackChunkGrav"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendor"], () => (__webpack_require__("./app/main.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	Grav = __webpack_exports__;
/******/ 	
/******/ })()
;